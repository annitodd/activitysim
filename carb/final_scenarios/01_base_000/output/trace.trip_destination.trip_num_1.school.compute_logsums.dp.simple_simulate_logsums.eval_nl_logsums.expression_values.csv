Expression,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
sov_available == False,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt*odt_skims['SOV_TIME'],-0.8284469842910767,-0.974515974521637,-1.2059500217437744,-0.7322420477867126,-0.6615110039710999,-0.6295329928398132,-0.5468780398368835,-0.5138159990310669,-0.44254299998283386,-0.46801701188087463,-0.526282012462616,-0.43414202332496643,-0.44769200682640076,-0.4986400008201599,-0.2008109986782074,-0.2739810049533844,-0.21571600437164307,-0.17587900161743164,-0.33495599031448364,-0.3395630121231079,-0.4024350047111511,-0.34064701199531555,-0.5124610066413879,-0.7018899917602539
@c_walktimeshort * df.total_terminal_time,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['SOV_DIST'],-0.764335347556951,-0.8538963133012325,-1.5354184763729013,-0.9514318923961911,-0.9133991615323679,-0.7447055660792005,-0.6539177097418778,-0.6023894748614195,-0.5116016770254602,-0.46375402617208006,-0.49994645039702335,-0.40425120719162644,-0.42694815665061625,-0.5324583490962518,-0.17298761015142528,-0.23187701308604003,-0.19507114356457622,-0.15090409136361516,-0.2840186786376781,-0.29199329198835505,-0.3674453084194809,-0.40302434584926705,-0.47234205556859593,-0.9888512364648572
c_cost * total_parking_cost,-4.75976163537986,-2.26971632646261,-0.13045726938609428,-0.1674274399675058,-0.05226767274222892,-0.1296536468795828,-0.3397726040990319,-0.38046604404672335,-0.11920050947620121,-0.195014435623576,-0.1415466145236315,-0.06858352504603724,-0.12332046441391405,-0.05548052122591036,-0.9421191527717999,-0.5664487765661249,-0.44078149931972527,-3.569159634118947,-2.018639176714697,-0.6684037012179045,-0.8676657299691768,-0.4632246436636442,-2.5640075306289223,-0.03044336942646028
@df.c_cost * odt_skims['SOV_BTOLL'],-0.05490360950627067,-0.06154436186524421,-0.10501111155716626,-0.06100773579969609,-0.05557438888966217,-0.05272356211680184,-0.04396983902728116,-0.03863711510198892,-0.034411180037981944,-0.03971036723308517,-0.04843054719532953,-0.037798636074934056,-0.03833526214048218,-0.04997334873305222,-0.01334858617468425,-0.02025765316570368,-0.012778420180403453,-0.010933766480809943,-0.026194084613281217,-0.02683132886575553,-0.028977836326491688,-0.02988339201246824,-0.040917775880568455,-0.06704478223565616
@c_age1619_da * ((df.age >= 16) & (df.age <= 19)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
sovtoll_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt*odt_skims['SOVTOLL_TIME'],-0.8284469842910767,-0.974515974521637,-1.2059500217437744,-0.7322420477867126,-0.6615110039710999,-0.6295329928398132,-0.5468780398368835,-0.5138159990310669,-0.44254299998283386,-0.46801701188087463,-0.526282012462616,-0.43414202332496643,-0.44769200682640076,-0.4986400008201599,-0.2008109986782074,-0.2739810049533844,-0.21571600437164307,-0.17587900161743164,-0.33495599031448364,-0.3395630121231079,-0.4024350047111511,-0.34064701199531555,-0.5124610066413879,-0.7018899917602539
@c_walktimeshort * df.total_terminal_time # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['SOVTOLL_DIST'],-0.764335347556951,-0.8538963133012325,-1.5354184763729013,-0.9514318923961911,-0.9133991615323679,-0.7447055660792005,-0.6539177097418778,-0.6023894748614195,-0.5116016770254602,-0.46375402617208006,-0.49994645039702335,-0.40425120719162644,-0.42694815665061625,-0.5324583490962518,-0.17298761015142528,-0.23187701308604003,-0.19507114356457622,-0.15090409136361516,-0.2840186786376781,-0.29199329198835505,-0.3674453084194809,-0.40302434584926705,-0.47234205556859593,-0.9888512364648572
c_cost * total_parking_cost # (2),-4.75976163537986,-2.26971632646261,-0.13045726938609428,-0.1674274399675058,-0.05226767274222892,-0.1296536468795828,-0.3397726040990319,-0.38046604404672335,-0.11920050947620121,-0.195014435623576,-0.1415466145236315,-0.06858352504603724,-0.12332046441391405,-0.05548052122591036,-0.9421191527717999,-0.5664487765661249,-0.44078149931972527,-3.569159634118947,-2.018639176714697,-0.6684037012179045,-0.8676657299691768,-0.4632246436636442,-2.5640075306289223,-0.03044336942646028
@df.c_cost * odt_skims['SOVTOLL_BTOLL'],-0.05490360950627067,-0.06154436186524421,-0.10501111155716626,-0.06100773579969609,-0.05557438888966217,-0.05272356211680184,-0.04396983902728116,-0.03863711510198892,-0.034411180037981944,-0.03971036723308517,-0.04843054719532953,-0.037798636074934056,-0.03833526214048218,-0.04997334873305222,-0.01334858617468425,-0.02025765316570368,-0.012778420180403453,-0.010933766480809943,-0.026194084613281217,-0.02683132886575553,-0.028977836326491688,-0.02988339201246824,-0.040917775880568455,-0.06704478223565616
@df.c_cost * odt_skims['SOVTOLL_VTOLL'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_age1619_da * ((df.age >= 16) & (df.age <= 19)) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV2_TIME'],-0.8284469842910767,-0.974515974521637,-1.2059500217437744,-0.7322420477867126,-0.6615110039710999,-0.6295329928398132,-0.5468780398368835,-0.5138159990310669,-0.44254299998283386,-0.46801701188087463,-0.526282012462616,-0.43414202332496643,-0.44769200682640076,-0.4986400008201599,-0.2008109986782074,-0.2739810049533844,-0.21571600437164307,-0.17587900161743164,-0.33495599031448364,-0.3395630121231079,-0.4024350047111511,-0.34064701199531555,-0.5124610066413879,-0.7018899917602539
@c_walktimeshort * df.total_terminal_time # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV2_DIST'],-0.764335347556951,-0.8538963133012325,-1.5354184763729013,-0.9514318923961911,-0.9133991615323679,-0.7447055660792005,-0.6539177097418778,-0.6023894748614195,-0.5116016770254602,-0.46375402617208006,-0.49994645039702335,-0.40425120719162644,-0.42694815665061625,-0.5324583490962518,-0.17298761015142528,-0.23187701308604003,-0.19507114356457622,-0.15090409136361516,-0.2840186786376781,-0.29199329198835505,-0.3674453084194809,-0.40302434584926705,-0.47234205556859593,-0.9888512364648572
@df.c_cost * df.total_parking_cost / costShareSr2,-2.719863791645634,-1.2969807579786343,-0.07454701107776816,-0.09567282283857474,-0.029867241566987952,-0.07408779821690446,-0.1941557737708754,-0.21740916802669905,-0.06811457684354355,-0.11143682035632915,-0.08088377972778941,-0.039190585740592705,-0.07046883680795088,-0.03170315498623449,-0.5383538015838857,-0.3236850151806428,-0.2518751424684144,-2.039519790925113,-1.153508100979827,-0.38194497212451683,-0.49580898855381533,-0.26469979637922525,-1.4651471603593842,-0.017396211100834447
@df.c_cost * odt_skims['HOV2_BTOLL'] / costShareSr2,-0.031373491146440384,-0.03516820678013955,-0.06000634946123786,-0.03486156331411205,-0.03175679365123553,-0.03012774978102962,-0.02512562230130352,-0.02207835148685081,-0.019663531450275395,-0.022691638418905813,-0.02767459839733116,-0.021599220614248033,-0.021905864080275533,-0.02855619927602984,-0.007627763528391,-0.011575801808973532,-0.0073019543888019735,-0.006247866560462825,-0.01496804835044641,-0.015332187923288875,-0.016558763615138108,-0.017076224007124708,-0.02338158621746769,-0.03831130413466066
@c_hhsize1_sr * (df.hhsize == 1),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV2TOLL_TIME'],-0.8284469842910767,-0.974515974521637,-1.2059500217437744,-0.7322420477867126,-0.6615110039710999,-0.6295329928398132,-0.5468780398368835,-0.5138159990310669,-0.44254299998283386,-0.46801701188087463,-0.526282012462616,-0.43414202332496643,-0.44769200682640076,-0.4986400008201599,-0.2008109986782074,-0.2739810049533844,-0.21571600437164307,-0.17587900161743164,-0.33495599031448364,-0.3395630121231079,-0.4024350047111511,-0.34064701199531555,-0.5124610066413879,-0.7018899917602539
@c_walktimeshort * df.total_terminal_time # (4),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV2TOLL_DIST'],-0.764335347556951,-0.8538963133012325,-1.5354184763729013,-0.9514318923961911,-0.9133991615323679,-0.7447055660792005,-0.6539177097418778,-0.6023894748614195,-0.5116016770254602,-0.46375402617208006,-0.49994645039702335,-0.40425120719162644,-0.42694815665061625,-0.5324583490962518,-0.17298761015142528,-0.23187701308604003,-0.19507114356457622,-0.15090409136361516,-0.2840186786376781,-0.29199329198835505,-0.3674453084194809,-0.40302434584926705,-0.47234205556859593,-0.9888512364648572
@df.c_cost * df.total_parking_cost / costShareSr2 # (2),-2.719863791645634,-1.2969807579786343,-0.07454701107776816,-0.09567282283857474,-0.029867241566987952,-0.07408779821690446,-0.1941557737708754,-0.21740916802669905,-0.06811457684354355,-0.11143682035632915,-0.08088377972778941,-0.039190585740592705,-0.07046883680795088,-0.03170315498623449,-0.5383538015838857,-0.3236850151806428,-0.2518751424684144,-2.039519790925113,-1.153508100979827,-0.38194497212451683,-0.49580898855381533,-0.26469979637922525,-1.4651471603593842,-0.017396211100834447
@df.c_cost * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,-0.031373491146440384,-0.03516820678013955,-0.06000634946123786,-0.03486156331411205,-0.03175679365123553,-0.03012774978102962,-0.02512562230130352,-0.02207835148685081,-0.019663531450275395,-0.022691638418905813,-0.02767459839733116,-0.021599220614248033,-0.021905864080275533,-0.02855619927602984,-0.007627763528391,-0.011575801808973532,-0.0073019543888019735,-0.006247866560462825,-0.01496804835044641,-0.015332187923288875,-0.016558763615138108,-0.017076224007124708,-0.02338158621746769,-0.03831130413466066
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize1_sr * (df.hhsize == 1) # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV3_TIME'],-0.8243820071220398,-0.9674700498580933,-1.2035109996795654,-0.7016189694404602,-0.6615110039710999,-0.6295329928398132,-0.5468780398368835,-0.5138159990310669,-0.44254299998283386,-0.46801701188087463,-0.526282012462616,-0.43414202332496643,-0.44769200682640076,-0.4986400008201599,-0.2008109986782074,-0.2739810049533844,-0.21571600437164307,-0.17587900161743164,-0.33495599031448364,-0.3395630121231079,-0.4024350047111511,-0.34064701199531555,-0.5124610066413879,-0.6609690189361572
@c_walktimeshort * df.total_terminal_time # (5),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV3_DIST'],-0.7649487928534715,-0.8618709266519096,-1.5378721405562565,-0.9845571193892133,-0.9133991615323679,-0.7447055660792005,-0.6539177097418778,-0.6023894748614195,-0.5116016770254602,-0.46375402617208006,-0.49994645039702335,-0.40425120719162644,-0.42694815665061625,-0.5324583490962518,-0.17298761015142528,-0.23187701308604003,-0.19507114356457622,-0.15090409136361516,-0.2840186786376781,-0.29199329198835505,-0.3674453084194809,-0.40302434584926705,-0.47234205556859593,-0.9888512364648572
@df.c_cost *  df.total_parking_cost / costShareSr3,-1.903904654151944,-0.9078865305850441,-0.052182907754437714,-0.06697097598700233,-0.020907069096891568,-0.05186145875183312,-0.13590904163961276,-0.15218641761868934,-0.047680203790480484,-0.0780057742494304,-0.0566186458094526,-0.027433410018414893,-0.04932818576556562,-0.022192208490364143,-0.37684766110872,-0.22657951062644996,-0.1763125997278901,-1.4276638536475788,-0.8074556706858788,-0.2673614804871618,-0.3470662919876707,-0.18528985746545767,-1.025603012251569,-0.012177347770584112
@df.c_cost * odt_skims['HOV3_BTOLL'] / costShareSr3,-0.022028521101138687,-0.0248055632293308,-0.04209835386448306,-0.024845811143810004,-0.02222975555586487,-0.021089424846720738,-0.017587935610912465,-0.015454846040795566,-0.013764472015192777,-0.01588414689323407,-0.01937221887813181,-0.015119454429973622,-0.015334104856192873,-0.019989339493220886,-0.0053394344698737,-0.008103061266281473,-0.005111368072161381,-0.004373506592323977,-0.010477633845312487,-0.010732531546302212,-0.011591134530596675,-0.011953356804987296,-0.016367110352227383,-0.026817912894262462
@c_hhsize1_sr * (df.hhsize == 1) # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['HOV3TOLL_TIME'],-0.8243820071220398,-0.9674700498580933,-1.2035109996795654,-0.7016189694404602,-0.6615110039710999,-0.6295329928398132,-0.5468780398368835,-0.5138159990310669,-0.44254299998283386,-0.46801701188087463,-0.526282012462616,-0.43414202332496643,-0.44769200682640076,-0.4986400008201599,-0.2008109986782074,-0.2739810049533844,-0.21571600437164307,-0.17587900161743164,-0.33495599031448364,-0.3395630121231079,-0.4024350047111511,-0.34064701199531555,-0.5124610066413879,-0.6609690189361572
@c_walktimeshort * df.total_terminal_time # (6),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV3TOLL_DIST'],-0.7649487928534715,-0.8618709266519096,-1.5378721405562565,-0.9845571193892133,-0.9133991615323679,-0.7447055660792005,-0.6539177097418778,-0.6023894748614195,-0.5116016770254602,-0.46375402617208006,-0.49994645039702335,-0.40425120719162644,-0.42694815665061625,-0.5324583490962518,-0.17298761015142528,-0.23187701308604003,-0.19507114356457622,-0.15090409136361516,-0.2840186786376781,-0.29199329198835505,-0.3674453084194809,-0.40302434584926705,-0.47234205556859593,-0.9888512364648572
@df.c_cost * df.total_parking_cost / costShareSr3,-1.903904654151944,-0.9078865305850441,-0.052182907754437714,-0.06697097598700233,-0.020907069096891568,-0.05186145875183312,-0.13590904163961276,-0.15218641761868934,-0.047680203790480484,-0.0780057742494304,-0.0566186458094526,-0.027433410018414893,-0.04932818576556562,-0.022192208490364143,-0.37684766110872,-0.22657951062644996,-0.1763125997278901,-1.4276638536475788,-0.8074556706858788,-0.2673614804871618,-0.3470662919876707,-0.18528985746545767,-1.025603012251569,-0.012177347770584112
@df.c_cost * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,-0.022028521101138687,-0.0248055632293308,-0.04209835386448306,-0.024845811143810004,-0.02222975555586487,-0.021089424846720738,-0.017587935610912465,-0.015454846040795566,-0.013764472015192777,-0.01588414689323407,-0.01937221887813181,-0.015119454429973622,-0.015334104856192873,-0.019989339493220886,-0.0053394344698737,-0.008103061266281473,-0.005111368072161381,-0.004373506592323977,-0.010477633845312487,-0.010732531546302212,-0.011591134530596675,-0.011953356804987296,-0.016367110352227383,-0.026817912894262462
@df.c_cost * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize1_sr * (df.hhsize == 1) # (4),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_walktimeshort * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312
@c_walktimelong * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,-447.6919860839844,-453.3287658691406,-416.0933837890625,-83.0886001586914,-68.07520294189453,-57.88560104370117,-50.406002044677734,-45.36540222167969,-39.78280258178711,-35.33839797973633,-38.69880294799805,-30.24359893798828,-32.24899673461914,-39.29499816894531,-9.864399909973145,-15.06760025024414,-11.815600395202637,-7.913200378417969,-19.67460060119629,-20.21660041809082,-26.39539909362793,-26.720598220825195,-34.36280059814453,-76.2593994140625
@c_density_index * df.density_index,0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_walk * df.trip_topology,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065
is_atwork_subtour & ~work_tour_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_biketimeshort * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-1.528439998626709,-2.048760175704956,-1.7235599756240845,-1.3333200216293335,-2.509460210800171,-2.563660144805908,-3.1815402507781982,-3.214060068130493,-3.252000093460083,-3.252000093460083
@c_biketimelong * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,-210.29600524902344,-213.11439514160156,-194.49668884277344,-27.994298934936523,-20.48760223388672,-15.392800331115723,-11.652999877929688,-9.132699012756348,-6.341400146484375,-4.119199752807617,-5.799400806427002,-1.5717997550964355,-2.5744996070861816,-6.097499847412109,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-3.6314003467559814,-24.57969856262207
@c_density_index*df.density_index,0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_bike * df.trip_topology,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542
walk_local_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_LOC_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_short_i_wait * (odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_long_i_wait * (odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_LOC_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xfers_wlk * (odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_wacc * df.origin_walk_time,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_LOC_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * odt_skims['WLK_LOC_WLK_FAR'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_density_index * df.density_index # (2),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_lrf_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_LRF_WLK_TOTIVT']/100,-0.8865602016448975,-1.0593037605285645,-2.198127031326294,-0.0,-0.0,-1.5827022790908813,-0.0,-0.0,-0.0,-1.0944525003433228,-0.9318687319755554,-1.0342931747436523,-0.8178590536117554,-0.8999747633934021,-0.34467947483062744,-0.475848913192749,-0.628180742263794,-0.2709999978542328,-0.5466638803482056,-0.6272213459014893,-0.7418570518493652,-0.8140026926994324,-1.0567482709884644,-1.7410098314285278
@(c_ivt_lrt-c_ivt) * odt_skims['WLK_LRF_WLK_KEYIVT']/100,0.08865601569414139,0.07686427235603333,0.05419999733567238,0.0,0.0,0.02709999866783619,0.0,0.0,0.0,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619
@(c_ivt_ferry-c_ivt_lrt) * odt_skims['WLK_LRF_WLK_FERRYIVT']/100,0.05419999733567238,0.05419999733567238,0.05419999733567238,0.0,0.0,0.02709999866783619,0.0,0.0,0.0,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619,0.02709999866783619
@c_short_i_wait * (odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),-0.17004166543483734,-0.08966848254203796,-0.5419999957084656,-0.0,-0.0,-0.5419999957084656,-0.0,-0.0,-0.0,-0.4166950285434723,-0.2777966558933258,-0.4166950285434723,-0.4166950285434723,-0.4166950285434723,-0.2777966558933258,-0.1422966867685318,-0.5419999957084656,-0.5419999957084656,-0.2777966558933258,-0.2811950147151947,-0.18728268146514893,-0.2811950147151947,-0.17279501259326935,-0.23931469023227692
@c_long_i_wait * (odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.13613684475421906,-0.0,-0.0,-0.003398329019546509,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1388983577489853,-0.8130000233650208,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_LRF_WLK_XWAIT']/100,-0.9289880394935608,-1.091588020324707,-1.1457880735397339,-0.0,-0.0,-2.1679999828338623,-0.0,-0.0,-0.0,-2.439000129699707,-2.1679999828338623,-2.439000129699707,-2.439000129699707,-2.439000129699707,-2.1679999828338623,-2.1679999828338623,-2.1679999828338623,-0.0,-2.1679999828338623,-2.303500175476074,-2.1679999828338623,-2.303500175476074,-2.303500175476074,-2.1679999828338623
@c_xfers_wlk * (odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0),-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.0,-0.0,-0.1354999989271164,-0.0,-0.0,-0.0,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164
@c_wacc * df.origin_walk_time # (2),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (2),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_LRF_WLK_WAUX']/100,-0.05420000106096268,-0.05420000106096268,-0.2926799952983856,-0.0,-0.0,-0.5203199982643127,-0.0,-0.0,-0.0,-0.5203199982643127,-0.5203199982643127,-0.3577199876308441,-0.5203199982643127,-0.5203199982643127,-0.3577199876308441,-0.5203199982643127,-0.5419999957084656,-0.0,-0.2926799952983856,-0.05420000106096268,-0.05420000106096268,-0.05420000106096268,-0.05420000106096268,-0.05420000106096268
@df.c_cost * odt_skims['WLK_LRF_WLK_FAR'],-1.6367110608110873,-1.6367110608110873,-1.945271342767276,-0.0,-0.0,-0.804939865972666,-0.0,-0.0,-0.0,-0.804939865972666,-0.804939865972666,-0.804939865972666,-0.804939865972666,-0.804939865972666,-0.804939865972666,-0.804939865972666,-0.804939865972666,-0.35216119136304136,-0.804939865972666,-0.804939865972666,-0.804939865972666,-0.804939865972666,-0.804939865972666,-0.804939865972666
@c_density_index * df.density_index # (3),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology # (2),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_express_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_EXP_WLK_TOTIVT']/100,-0.7836940884590149,-1.0400248765945435,-0.0,-0.0,-0.0,-1.0815528631210327,-0.9301425218582153,-0.8338670134544373,-0.9903315901756287,-0.7142530679702759,-1.9549940824508667,-1.7202754020690918,-1.5655643939971924,-0.8132818341255188,-0.34467947483062744,-0.40568703413009644,-0.628180742263794,-0.2709999978542328,-0.5466638803482056,-0.6272213459014893,-0.9124218225479126,-0.8140026926994324,-1.4180264472961426,-1.7410098314285278
@(c_ivt_exp-c_ivt) * odt_skims['WLK_EXP_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.18960000574588776,0.18960000574588776,0.19939202070236206,0.19939202070236206,0.12345600128173828,0.500544011592865,0.41739651560783386,0.36259105801582336,0.07852800190448761,0.0,0.04771200194954872,0.0,0.0,0.0,0.0,0.1312195360660553,0.0,0.3103267550468445,0.0
@c_short_i_wait * (odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),-0.10390682518482208,-0.08966848254203796,-0.0,-0.0,-0.0,-0.2811950147151947,-0.4166950285434723,-0.2168000042438507,-0.5419999957084656,-0.4166950285434723,-0.4132966697216034,-0.4132966697216034,-0.4132966697216034,-0.4166950285434723,-0.2777966558933258,-0.2168000042438507,-0.5419999957084656,-0.5419999957084656,-0.2777966558933258,-0.2811950147151947,-0.5419999957084656,-0.2811950147151947,-0.5419999957084656,-0.23931469023227692
@c_long_i_wait * (odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.14059753715991974,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1388983577489853,-0.8130000233650208,-0.0,-0.0,-0.1388983577489853,-0.0,-0.1388983577489853,-0.0
@c_xwait * odt_skims['WLK_EXP_WLK_XWAIT']/100,-0.9289880394935608,-1.091588020324707,-0.0,-0.0,-0.0,-2.3848001956939697,-2.3848001956939697,-2.1679999828338623,-2.3848001956939697,-2.3848001956939697,-0.9289880394935608,-0.9289880394935608,-0.9289880394935608,-2.3848001956939697,-2.1679999828338623,-2.1679999828338623,-2.1679999828338623,-0.0,-2.1679999828338623,-2.303500175476074,-0.9289880394935608,-2.303500175476074,-0.9289880394935608,-2.1679999828338623
@c_xfers_wlk * (odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0),-0.1354999989271164,-0.2709999978542328,-0.0,-0.0,-0.0,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164
@c_wacc * df.origin_walk_time # (3),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (3),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_EXP_WLK_WAUX']/100,-0.2926799952983856,-0.05420000106096268,-0.0,-0.0,-0.0,-0.5203199982643127,-0.5203199982643127,-0.5203199982643127,-0.5203199982643127,-0.5203199982643127,-0.682919979095459,-0.682919979095459,-0.682919979095459,-0.5203199982643127,-0.3577199876308441,-0.5203199982643127,-0.5419999957084656,-0.0,-0.2926799952983856,-0.05420000106096268,-0.682919979095459,-0.05420000106096268,-0.682919979095459,-0.05420000106096268
@df.c_cost * odt_skims['WLK_EXP_WLK_FAR'],-1.6367110608110873,-1.6367110608110873,-0.0,-0.0,-0.0,-0.804939865972666,-0.804939865972666,-0.828417278730202,-0.804939865972666,-0.804939865972666,-2.0794279870960537,-2.0794279870960537,-2.0794279870960537,-0.804939865972666,-0.804939865972666,-0.828417278730202,-0.804939865972666,-0.35216119136304136,-0.804939865972666,-0.804939865972666,-2.0794279870960537,-0.804939865972666,-2.0794279870960537,-0.804939865972666
@c_density_index * df.density_index # (4),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology # (3),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_heavyrail_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_HVY_WLK_TOTIVT']/100,-0.7836940884590149,-1.0400248765945435,-1.6270216703414917,-1.6680647134780884,-1.5293667316436768,-1.4747196435928345,-1.3956526517868042,-1.3553739786148071,-1.400140404701233,-1.2572178840637207,-1.2178902626037598,-1.373563528060913,-1.3069679737091064,-1.389083743095398,-1.0108896493911743,-0.40568703413009644,-1.2775888442993164,-0.2709999978542328,-1.1404168605804443,-1.1404168605804443,-0.9124218225479126,-1.2420039176940918,-1.2515701055526733,-1.8150306940078735
@(c_ivt_hvy-c_ivt) * odt_skims['WLK_HVY_WLK_KEYIVT']/100,0.0,0.0,0.1107988953590393,0.1937454789876938,0.16420377790927887,0.16420377790927887,0.14033517241477966,0.14033517241477966,0.14033517241477966,0.11621346324682236,0.11621346324682236,0.11621346324682236,0.0981854647397995,0.0981854647397995,0.07143831253051758,0.0,0.0981854647397995,0.0,0.09734374284744263,0.09734374284744263,0.0,0.11766061931848526,0.13230544328689575,0.18537862598896027
@c_short_i_wait * (odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),-0.10390682518482208,-0.08966848254203796,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.2224096953868866,-0.4250147342681885,-0.2224096953868866,-0.5419999957084656,-0.2510327100753784,-0.4250147342681885,-0.5419999957084656,-0.4250147342681885,-0.4250147342681885,-0.2224096953868866,-0.2168000042438507,-0.4250147342681885,-0.5419999957084656,-0.19043169915676117,-0.19043169915676117,-0.5419999957084656,-0.31454968452453613,-0.08084472268819809,-0.2510327100753784
@c_long_i_wait * (odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.14153246581554413,-0.14475737512111664,-0.14475737512111664,-0.0,-0.0,-0.0,-0.14475737512111664,-0.0,-0.0,-0.009257371537387371,-0.0,-0.0,-0.0,-0.0,-0.0,-0.8130000233650208,-0.0,-0.0,-0.1388983577489853,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_HVY_WLK_XWAIT']/100,-0.9289880394935608,-1.091588020324707,-1.01950204372406,-1.335487961769104,-1.1322380304336548,-1.091588020324707,-1.1322380304336548,-1.091588020324707,-1.1322380304336548,-1.1322380304336548,-1.1322380304336548,-1.1322380304336548,-1.1322380304336548,-1.1322380304336548,-1.091588020324707,-2.1679999828338623,-1.1322380304336548,-0.0,-1.091588020324707,-1.091588020324707,-0.9289880394935608,-1.091588020324707,-1.335487961769104,-1.335487961769104
@c_xfers_wlk * (odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0),-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.0,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328
@c_wacc * df.origin_walk_time # (4),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (4),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_HVY_WLK_WAUX']/100,-0.2926799952983856,-0.05420000106096268,-0.7262799739837646,-0.7262799739837646,-0.7262799739837646,-0.10840000212192535,-0.7262799739837646,-0.10840000212192535,-0.7262799739837646,-0.7262799739837646,-0.7262799739837646,-0.7262799739837646,-0.7262799739837646,-0.7262799739837646,-0.10840000212192535,-0.5203199982643127,-0.7262799739837646,-0.0,-0.10840000212192535,-0.10840000212192535,-0.682919979095459,-0.10840000212192535,-0.7262799739837646,-0.7262799739837646
@df.c_cost * odt_skims['WLK_HVY_WLK_FAR'],-1.6367110608110873,-1.6367110608110873,-2.330971695212512,-2.7166720476577475,-2.659655473818017,-2.605992816086506,-2.599284983870067,-2.545622326138556,-2.599284983870067,-2.528852745597459,-2.528852745597459,-2.528852745597459,-2.4584205073248504,-2.4584205073248504,-2.3007864502385367,-0.828417278730202,-2.4584205073248504,-0.35216119136304136,-2.347741275753609,-2.347741275753609,-2.0794279870960537,-2.4047578495933393,-2.4953135845152645,-2.5892232355454086
@c_density_index * df.density_index # (5),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology # (4),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_commuter_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_COM_WLK_TOTIVT']/100,-0.7836940884590149,-1.0400248765945435,-1.6270216703414917,-0.0,-1.5293667316436768,-1.4747196435928345,-1.3956526517868042,-1.3553739786148071,-1.400140404701233,-1.2572178840637207,-1.2178902626037598,-1.7202754020690918,-1.3069679737091064,-1.389083743095398,-1.0108896493911743,-0.40568703413009644,-0.628180742263794,-0.2709999978542328,-0.5466638803482056,-1.1404168605804443,-0.9124218225479126,-1.2420039176940918,-1.2515701055526733,-1.7410098314285278
@(c_ivt_com-c_ivt) * odt_skims['WLK_COM_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_short_i_wait * (odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh),-0.10390682518482208,-0.08966848254203796,-0.5419999957084656,-0.0,-0.5419999957084656,-0.2224096953868866,-0.4250147342681885,-0.2224096953868866,-0.5419999957084656,-0.2510327100753784,-0.4250147342681885,-0.4132966697216034,-0.4250147342681885,-0.4250147342681885,-0.2224096953868866,-0.2168000042438507,-0.5419999957084656,-0.5419999957084656,-0.2777966558933258,-0.19043169915676117,-0.5419999957084656,-0.31454968452453613,-0.08084472268819809,-0.23931469023227692
@c_long_i_wait * (odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.14153246581554413,-0.0,-0.14475737512111664,-0.0,-0.0,-0.0,-0.14475737512111664,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1388983577489853,-0.8130000233650208,-0.0,-0.0,-0.1388983577489853,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_COM_WLK_XWAIT']/100,-0.9289880394935608,-1.091588020324707,-1.01950204372406,-0.0,-1.1322380304336548,-1.091588020324707,-1.1322380304336548,-1.091588020324707,-1.1322380304336548,-1.1322380304336548,-1.1322380304336548,-0.9289880394935608,-1.1322380304336548,-1.1322380304336548,-1.091588020324707,-2.1679999828338623,-2.1679999828338623,-0.0,-2.1679999828338623,-1.091588020324707,-0.9289880394935608,-1.091588020324707,-1.335487961769104,-2.1679999828338623
@c_xfers_wlk * (odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0),-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.0,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164
@c_wacc * df.origin_walk_time # (5),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (5),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_COM_WLK_WAUX']/100,-0.2926799952983856,-0.05420000106096268,-0.7262799739837646,-0.0,-0.7262799739837646,-0.10840000212192535,-0.7262799739837646,-0.10840000212192535,-0.7262799739837646,-0.7262799739837646,-0.7262799739837646,-0.682919979095459,-0.7262799739837646,-0.7262799739837646,-0.10840000212192535,-0.5203199982643127,-0.5419999957084656,-0.0,-0.2926799952983856,-0.10840000212192535,-0.682919979095459,-0.10840000212192535,-0.7262799739837646,-0.05420000106096268
@df.c_cost * odt_skims['WLK_COM_WLK_FAR'],-1.6367110608110873,-1.6367110608110873,-2.330971695212512,-0.0,-2.659655473818017,-2.605992816086506,-2.599284983870067,-2.545622326138556,-2.599284983870067,-2.528852745597459,-2.528852745597459,-2.0794279870960537,-2.4584205073248504,-2.4584205073248504,-2.3007864502385367,-0.828417278730202,-0.804939865972666,-0.35216119136304136,-0.804939865972666,-2.347741275753609,-2.0794279870960537,-2.4047578495933393,-2.4953135845152645,-0.804939865972666
@c_density_index * df.density_index # (6),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology # (5),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (7),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology # (6),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_local_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_LOC_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_LOC_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_wlk * (odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_LOC_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_LOC_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_LOC_WLK_FAR'] + costPerMile*odt_skims['DRV_LOC_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_LOC_WLK_DDIST']/100)/ (od_skims['DIST']),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_local_available_inbound,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * c_ivt * odt_skims['WLK_LOC_DRV_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-1.1284331494140625,-1.1348179252929687,-1.025577798828125,-1.3726230717773436,-0.7527431235351563,-0.47759955603027343,-0.26610302801513674,-0.5046074252929688,-0.19294116595458985,-0.44973535058593744,-0.29756613793945313,-0.47522830603027344,-0.48973494396972655,-0.35648422412109376,-0.4423018060302734,-0.7037625861816406,-1.240881873535156,-0.8675360373535156,-1.644227396484375
@df.inbound * c_short_i_wait * (odt_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.542,-0.4268954523086548,-0.542,-0.4268954523086548,-0.25291345024108886,-0.28459879455566406,-0.42009879455566407,-0.42009879455566407,-0.542,-0.28459879455566406,-0.28459879455566406,-0.42009879455566407,-0.28459879455566406,-0.42009879455566407,-0.42009879455566407,-0.42009879455566407,-0.28459879455566406,-0.29139545230865477,-0.25291345024108886
@df.inbound * c_long_i_wait * (odt_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.006799371433258056,-0.0,-0.010197726154327392,-0.0,-0.0,-0.0,-0.0,-0.0,-0.5453983547210693,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_LOC_DRV_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-1.626,-2.1679999999999997,-2.0325,-2.1679999999999997,-1.8969999999999998,-1.626,-1.626,-1.626,-0.0,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-2.0325,-2.0325
@df.inbound * c_xfers_wlk * (odt_skims['WLK_LOC_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.1355,-0.271,-0.271,-0.271,-0.271,-0.1355,-0.1355,-0.1355,-0.0,-0.1355,-0.1355,-0.1355,-0.1355,-0.1355,-0.1355,-0.1355,-0.1355,-0.271,-0.271
@df.inbound * c_dtim * odt_skims['WLK_LOC_DRV_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001
@df.inbound * c_wacc * df.origin_walk_time,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_LOC_DRV_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * df.c_cost * (odt_skims['WLK_LOC_DRV_FAR'] + costPerMile*odt_skims['WLK_LOC_DRV_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071
@df.outbound * c_dacc_ratio * (odt_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (8),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology # (7),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_lrf_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_LRF_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_lrt-c_ivt)*odt_skims['DRV_LRF_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (c_ivt_ferry-c_ivt_lrt)*odt_skims['DRV_LRF_WLK_FERRYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_LRF_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_LRF_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_LRF_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_LRF_WLK_FAR'] + costPerMile * odt_skims['DRV_LRF_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_LRF_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_lrf_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_LRF_DRV_TOTIVT']/100,-0.8865602241210937,-0.8771213391113281,-0.0,-0.0,-0.0,-1.1284331494140625,-1.1348179252929687,-1.025577798828125,-0.0,-0.6401833132324218,-0.47759955603027343,-0.26610302801513674,-0.11139184231567383,-0.19294116595458985,-0.6825080747070312,-0.29756613793945313,-0.47522830603027344,-0.27099999999999996,-0.35648422412109376,-0.4423018060302734,-0.7037625861816406,-0.7146541264648437,-0.9573996638183593,-1.7410097270507812
@df.inbound * (c_ivt_lrt-c_ivt)*odt_skims['WLK_LRF_DRV_KEYIVT']/100,0.0886560224121094,0.054200000000000005,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.027100000000000003,0.0,0.0,0.027100000000000003,0.0,0.0,0.0,0.027100000000000003,0.027100000000000003,0.027100000000000003
@df.inbound * (c_ivt_ferry-c_ivt_lrt)*odt_skims['WLK_LRF_DRV_FERRYIVT']/100,0.05419999999999994,0.05419999999999994,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.02709999999999997,0.0,0.0,0.02709999999999997,0.0,0.0,0.0,0.02709999999999997,0.02709999999999997,0.02709999999999997
@df.inbound * c_short_i_wait * (odt_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh),-0.17004166078567504,-0.22477281847000122,-0.0,-0.0,-0.0,-0.542,-0.4268954523086548,-0.542,-0.0,-0.4268954523086548,-0.28459879455566406,-0.42009879455566407,-0.42009879455566407,-0.542,-0.542,-0.28459879455566406,-0.42009879455566407,-0.542,-0.42009879455566407,-0.42009879455566407,-0.42009879455566407,-0.2777966577529907,-0.16939668359756468,-0.23931468152999877
@df.inbound * c_long_i_wait * (odt_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.006799371433258056,-0.0,-0.010197726154327392,-0.0,-0.0,-0.0,-0.0,-0.0,-0.5453983547210693,-0.13889835472106934,-0.0,-0.0,-0.813,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_LRF_DRV_XWAIT']/100,-0.9289879999999999,-0.9289879999999999,-0.0,-0.0,-0.0,-1.626,-2.1679999999999997,-2.0325,-0.0,-1.8969999999999998,-1.626,-1.626,-1.626,-0.0,-0.500266,-1.626,-1.626,-0.0,-1.626,-1.626,-1.626,-2.1679999999999997,-2.1679999999999997,-2.1679999999999997
@df.inbound * c_xfers_drv * (odt_skims['WLK_LRF_DRV_BOARDS']-1).clip(0),-0.4065,-0.4065,-0.0,-0.0,-0.0,-0.4065,-0.813,-0.813,-0.0,-0.813,-0.4065,-0.4065,-0.4065,-0.0,-0.4065,-0.4065,-0.4065,-0.0,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065
@df.inbound * c_dtim * odt_skims['WLK_LRF_DRV_DTIM']/100,-0.160974,-0.160974,-0.0,-0.0,-0.0,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.0,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.37939999999999996,-0.6812940000000001,-0.6812940000000001,-0.160974,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.160974,-0.160974,-0.160974
@df.inbound * c_wacc * df.origin_walk_time # (2),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_LRF_DRV_WAUX']/100,-0.1084,-0.46612000000000003,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1084,-0.0,-0.0,-0.0542,-0.0,-0.0,-0.0,-0.6395599999999999,-0.6395599999999999,-0.1084
@df.inbound * df.c_cost * (odt_skims['WLK_LRF_DRV_FAR'] + costPerMile * odt_skims['WLK_LRF_DRV_DDIST']/100),-1.7078690870208106,-1.7078690870208106,-0.0,-0.0,-0.0,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.0,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.980381162337416,-0.8423075558643071,-0.8423075558643071,-0.4233192175727646,-0.8423075558643071,-0.8423075558643071,-0.8423075558643071,-0.8760978921823892,-0.8760978921823892,-0.8760978921823892
@df.inbound * c_dacc_ratio * (odt_skims['WLK_LRF_DRV_DDIST']/100)/ od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (5),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (9),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology # (8),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_express_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_EXP_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_exp-c_ivt) * odt_skims['DRV_EXP_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_EXP_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_EXP_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_EXP_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_EXP_WLK_FAR'] + costPerMile * odt_skims['DRV_EXP_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_EXP_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_express_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_EXP_DRV_TOTIVT']/100,-0.8382463361816406,-1.0700489252929686,-0.0,-0.0,-0.0,-1.1284331494140625,-0.6578173017578125,-0.5615418391113282,-0.7180063620605469,-0.44192782470703124,-0.5008215632324219,-0.26610302801513674,-0.11139184231567383,-0.19294116595458985,-0.3927088060302734,-0.2878318060302734,-0.47522830603027344,-0.42495780603027344,-0.35648422412109376,-0.4423018060302734,-1.0598458017578125,-1.5003346005859373,-1.5654504223632812,-0.23515211206054687
@df.inbound * (c_ivt_exp-c_ivt) * odt_skims['WLK_EXP_DRV_KEYIVT']/100,0.2442239999999999,0.2442239999999999,0.0,0.0,0.0,0.0,0.11471999999999997,0.12451199999999997,0.12451199999999997,0.04857599999999999,0.17426880468749995,0.09112127929687498,0.036315840820312494,0.0,0.06470399999999998,0.027551999999999993,0.0,0.07612799999999999,0.0,0.0,0.37544353124999985,0.4034496093749999,0.5545507031249999,0.028189441406249995
@df.inbound * c_short_i_wait * (odt_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh),-0.10483363616466522,-0.08315363745689391,-0.0,-0.0,-0.0,-0.542,-0.4268954523086548,-0.23039876871109008,-0.542,-0.4268954523086548,-0.42009879455566407,-0.42009879455566407,-0.42009879455566407,-0.542,-0.23039876871109008,-0.23039876871109008,-0.42009879455566407,-0.23039876871109008,-0.42009879455566407,-0.42009879455566407,-0.542,-0.29139545230865477,-0.542,-0.28459879455566406
@df.inbound * c_long_i_wait * (odt_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.006799371433258056,-0.0,-0.0,-0.14569772615432738,-0.0,-0.0,-0.0,-0.0,-0.5453983547210693,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.14229937143325805,-0.0,-0.14229937143325805,-0.0
@df.inbound * c_xwait * odt_skims['WLK_EXP_DRV_XWAIT']/100,-0.6503999999999999,-0.6503999999999999,-0.0,-0.0,-0.0,-1.626,-1.8428,-1.626,-1.8428,-1.8428,-1.626,-1.626,-1.626,-0.0,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-0.6503999999999999,-1.0569,-0.6503999999999999,-0.6503999999999999
@df.inbound * c_xfers_drv * (odt_skims['WLK_EXP_DRV_BOARDS']-1).clip(0),-0.4065,-0.4065,-0.0,-0.0,-0.0,-0.4065,-0.813,-0.4065,-0.813,-0.813,-0.4065,-0.4065,-0.4065,-0.0,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.813,-0.4065,-0.4065
@df.inbound * c_dtim * odt_skims['WLK_EXP_DRV_DTIM']/100,-0.6812940000000001,-0.6812940000000001,-0.0,-0.0,-0.0,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-0.6812940000000001,-1.20866
@df.inbound * c_wacc * df.origin_walk_time # (3),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_EXP_DRV_WAUX']/100,-0.0542,-0.11924,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * df.c_cost * (odt_skims['WLK_EXP_DRV_FAR'] + costPerMile * odt_skims['WLK_EXP_DRV_DDIST']/100),-1.851836202084962,-1.851836202084962,-0.0,-0.0,-0.0,-0.8423075558643071,-0.8993241297040375,-0.9228015424615736,-0.8993241297040375,-0.8993241297040375,-0.8657849686218431,-0.8657849686218431,-0.8657849686218431,-0.8423075558643071,-0.9228015424615736,-0.9228015424615736,-0.8423075558643071,-0.9228015424615736,-0.8423075558643071,-0.8423075558643071,-1.3420410559890037,-1.7948196282452316,-1.3420410559890037,-2.0233960529340904
@df.inbound * c_dacc_ratio * (odt_skims['WLK_EXP_DRV_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (10),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology # (9),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (5),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_heavyrail_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_HVY_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_hvy-c_ivt) * odt_skims['DRV_HVY_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_HVY_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_HVY_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (4),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_HVY_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_HVY_WLK_FAR'] + costPerMile * odt_skims['DRV_HVY_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * park_ride_cost,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_heavyrail_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_HVY_DRV_TOTIVT']/100,-0.2942030186767578,-0.5431734180908203,-1.29955615234375,-0.768873048828125,-0.6301753017578124,-0.46382735058593744,-0.4964584367675781,-0.3444843692626953,-0.5009489252929687,-0.35802623132324213,-0.31869871264648436,-0.47437193676757805,-0.4077763994140625,-0.48989211206054684,-0.14265710272216797,-0.26337134338378904,-0.3783973132324218,-0.12868435165405273,-0.2721842686767578,-0.2721842686767578,-0.5282792686767578,-0.37376861206054685,-0.416101544555664,-1.0276075861816407
@df.inbound * (c_ivt_hvy-c_ivt) * odt_skims['WLK_HVY_DRV_KEYIVT']/100,0.058840603735351535,0.058840603735351535,0.15370631723632808,0.12230718276367183,0.09276547011718746,0.09276547011718746,0.06889687385253904,0.06889687385253904,0.06889687385253904,0.04477516120605467,0.04477516120605467,0.04477516120605467,0.026747157470703112,0.026747157470703112,0.028531420544433583,0.025736870330810534,0.026747157470703112,0.025736870330810534,0.054436853735351544,0.054436853735351544,0.054436853735351544,0.07475372241210934,0.08322030891113277,0.1362940247070312
@df.inbound * c_short_i_wait * (odt_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh),-0.09518603761196136,-0.09394485840797424,-0.542,-0.542,-0.542,-0.14721803321838378,-0.4250147168159485,-0.14721803321838378,-0.542,-0.25103271474838257,-0.4250147168159485,-0.542,-0.4250147168159485,-0.4250147168159485,-0.21496803321838379,-0.24023066492080689,-0.4250147168159485,-0.1829900378704071,-0.1829900378704071,-0.1829900378704071,-0.1743180332183838,-0.30710804872512815,-0.4182180332183838,-0.25103271474838257
@df.inbound * c_long_i_wait * (odt_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.1415324595451355,-0.14475737133026123,-0.14475737133026123,-0.0,-0.0,-0.0,-0.14475737133026123,-0.0,-0.0,-0.00925737133026123,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_HVY_DRV_XWAIT']/100,-0.0,-0.083468,-0.090514,-0.20325,-0.13549999999999998,-0.0,-0.13549999999999998,-0.0,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.0,-0.17127199999999998,-0.13549999999999998,-0.0,-0.0,-0.0,-0.17127199999999998,-0.0,-0.0,-0.4065
@df.inbound * c_xfers_drv * (odt_skims['WLK_HVY_DRV_BOARDS']-1).clip(0),-0.0,-0.4065,-0.4065,-0.4065,-0.4065,-0.0,-0.4065,-0.0,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.0,-0.4065,-0.4065,-0.0,-0.0,-0.0,-0.4065,-0.0,-0.0,-0.4065
@df.outbound * c_dtim * odt_skims['DRV_HVY_WLK_DTIM']/100 # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_wacc * df.origin_walk_time # (4),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_HVY_DRV_WAUX']/100,-0.05420000106096268,-0.24932001531124115,-0.10840000212192535,-0.2168000042438507,-0.2168000042438507,-0.16259999573230743,-0.2168000042438507,-0.16259999573230743,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.05420000106096268,-0.10840000212192535,-0.2168000042438507,-0.05420000106096268,-0.05420000106096268,-0.05420000106096268,-0.10840000212192535,-0.05420000106096268,-0.16259999573230743,-0.2168000042438507
@df.inbound * df.c_cost * (odt_skims['WLK_HVY_DRV_FAR'] + costPerMile * odt_skims['WLK_HVY_DRV_DDIST']/100),-0.9566096882707089,-1.466404936720064,-1.634100742131036,-1.3672285893012313,-1.2599032738382092,-0.8071245992285846,-1.1794092872409427,-0.726630612631318,-1.1794092872409427,-1.0486065590203844,-1.0486065590203844,-1.0486065590203844,-1.0486065590203844,-1.0486065590203844,-0.6614650707473981,-1.1377211581145588,-1.0486065590203844,-0.6614650707473981,-0.6614650707473981,-0.6614650707473981,-0.6648189868556176,-0.6614650707473981,-0.5958278844107598,-1.1894710355656009
@df.inbound * c_dacc_ratio * (odt_skims['WLK_HVY_DRV_DDIST']/100)/ od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (11),0.15115736595743662,0.08967576893742576,0.00901893269089822,0.013567004781765962,0.004087680099137486,0.014884642240378127,0.01917078703680851,0.025817440727090874,0.005640320382747952,0.0034480870022198466,0.008048841472184267,0.002413747052989787,0.0053062509138790325,0.005169167997670124,0.04016941665207687,0.015558311669169956,0.031242037638904197,0.08446108967185093,0.08088813176695302,0.03281629830279769,0.03247226581607813,0.02378300848288237,0.07900577596694912,0.009445781124880195
@c_topology_trn * df.trip_topology # (10),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (6),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_commuter_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_COM_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_com-c_ivt) * odt_skims['DRV_COM_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_COM_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_COM_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (5),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_COM_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_COM_WLK_FAR'] + costPerMile * odt_skims['DRV_COM_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_COM_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_commuter_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_COM_DRV_TOTIVT']/100,-0.7078601379394531,-0.9584782385253906,-0.0,-1.0074262241210936,-1.27927984765625,-0.7348273505859375,-0.7674584367675782,-0.6154843361816407,-0.7719489252929688,-0.6290261982421874,-0.8939883764648436,-1.2199145717773439,-1.0652034108886719,-0.7608921120605469,-0.27099999999999996,-0.369102,-0.6281807126464843,-0.27099999999999996,-0.5466638994140625,-0.521675,-0.27099999999999996,-0.5160842686767578,-0.6476466638183593,-0.9315056005859375
@df.inbound * (c_ivt_com-c_ivt) * odt_skims['WLK_COM_DRV_KEYIVT']/100,0.054199999999999984,0.054199999999999984,0.0,0.14091999999999993,0.14091999999999993,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.07587999999999996,0.11923999999999994
@df.inbound * c_short_i_wait * (odt_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh),-0.21496803321838379,-0.09394485840797424,-0.0,-0.542,-0.542,-0.14721803321838378,-0.4250147168159485,-0.14721803321838378,-0.542,-0.25103271474838257,-0.2777966577529907,-0.4132966577529907,-0.4132966577529907,-0.4250147168159485,-0.542,-0.2168,-0.542,-0.542,-0.2777966577529907,-0.1626,-0.542,-0.30710804872512815,-0.2777966577529907,-0.2777966577529907
@df.inbound * c_long_i_wait * (odt_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.13889835472106934,-0.13889835472106934,-0.0,-0.0,-0.0,-0.14475737133026123,-0.0,-0.0,-0.0,-0.0,-0.0,-0.271,-0.0,-0.13889835472106934,-0.271,-0.0,-0.0,-0.6322430496215821,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_COM_DRV_XWAIT']/100,-1.0839999999999999,-1.28725,-0.0,-2.1679999999999997,-2.1679999999999997,-1.0839999999999999,-1.2195,-1.0839999999999999,-1.2195,-1.2195,-1.0839999999999999,-1.8064859999999998,-1.8064859999999998,-1.2195,-0.0,-1.0839999999999999,-1.0839999999999999,-0.0,-1.0839999999999999,-1.8064859999999998,-0.0,-1.0839999999999999,-1.8064859999999998,-1.8064859999999998
@df.inbound * c_xfers_drv * (odt_skims['WLK_COM_DRV_BOARDS']-1).clip(0),-0.4065,-0.813,-0.0,-0.4065,-0.4065,-0.4065,-0.813,-0.4065,-0.813,-0.813,-0.4065,-0.4065,-0.4065,-0.813,-0.0,-0.4065,-0.4065,-0.0,-0.4065,-0.4065,-0.0,-0.4065,-0.4065,-0.4065
@df.inbound * c_dtim * odt_skims['WLK_COM_DRV_DTIM']/100,-0.6975539999999999,-0.6975539999999999,-0.0,-0.39728600000000003,-0.39728600000000003,-0.6975539999999999,-0.6975539999999999,-0.6975539999999999,-0.6975539999999999,-0.6975539999999999,-0.6975539999999999,-0.39728600000000003,-0.39728600000000003,-0.6975539999999999,-0.6975539999999999,-0.6975539999999999,-0.6975539999999999,-0.6975539999999999,-0.6975539999999999,-0.39728600000000003,-0.39728600000000003,-0.6975539999999999,-0.39728600000000003,-0.39728600000000003
@df.inbound * c_wacc * df.origin_walk_time # (5),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_COM_DRV_WAUX']/100,-0.7804800000000001,-0.96476,-0.0,-0.1084,-0.71544,-0.7804800000000001,-0.8346800000000001,-0.7804800000000001,-0.8346800000000001,-0.8346800000000001,-0.80216,-0.1084,-0.1084,-0.8346800000000001,-0.0542,-0.80216,-0.89972,-0.0542,-0.6503999999999999,-0.1084,-0.0542,-0.9322400000000001,-0.1084,-0.1084
@df.inbound * df.c_cost * (odt_skims['WLK_COM_DRV_FAR'] + costPerMile * odt_skims['WLK_COM_DRV_DDIST']/100),-2.5073089932133503,-3.0171042416627056,-0.0,-2.426285634847538,-2.426285634847538,-2.376506264992792,-2.7487909530051504,-2.296012278395526,-2.7487909530051504,-2.6179882247845923,-2.185333046824284,-1.8896590575324275,-1.8896590575324275,-2.6179882247845923,-1.7325543722146595,-2.2088104595818203,-2.185333046824284,-1.7325543722146595,-2.185333046824284,-1.4402342990310222,-1.4368803829228027,-2.1652095501749673,-2.2485280811119077,-2.426285634847538
@df.inbound * c_dacc_ratio * (odt_skims['WLK_COM_DRV_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV2TOLL_TIME'] # (2),-0.8284469842910767,-0.974515974521637,-1.2059500217437744,-0.7322420477867126,-0.6615110039710999,-0.6295329928398132,-0.5468780398368835,-0.5138159990310669,-0.44254299998283386,-0.46801701188087463,-0.526282012462616,-0.43414202332496643,-0.44769200682640076,-0.4986400008201599,-0.2008109986782074,-0.2739810049533844,-0.21571600437164307,-0.17587900161743164,-0.33495599031448364,-0.3395630121231079,-0.4024350047111511,-0.34064701199531555,-0.5124610066413879,-0.7018899917602539
@c_ivt * 1.5 * df.origTaxiWaitTime,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005,-0.38617500000000005
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * odt_skims['HOV2TOLL_BTOLL'],-0.05490360950627067,-0.06154436186524421,-0.10501111155716626,-0.06100773579969609,-0.05557438888966217,-0.05272356211680184,-0.04396983902728116,-0.03863711510198892,-0.034411180037981944,-0.03971036723308517,-0.04843054719532953,-0.037798636074934056,-0.03833526214048218,-0.04997334873305222,-0.01334858617468425,-0.02025765316570368,-0.012778420180403453,-0.010933766480809943,-0.026194084613281217,-0.02683132886575553,-0.028977836326491688,-0.02988339201246824,-0.040917775880568455,-0.06704478223565616
@df.c_cost * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,-11.374806788086426,-12.68182768051741,-21.53851444902413,-13.608514864983876,-13.0427091254092,-10.88178071076458,-9.637813349050067,-8.948918693832281,-7.719037718360251,-7.148871724079453,-7.676107505174655,-6.358689426749163,-6.6608775956306046,-8.05074076864295,-3.1617367305714765,-3.9928367174216577,-3.4578873284558,-2.853176423026939,-4.723990851221258,-4.829974595123322,-5.856608272349099,-6.227551695860691,-7.311872707118328,-14.041505557379082
@c_ivt * odt_skims['HOV2TOLL_TIME'] ,-0.8284469842910767,-0.974515974521637,-1.2059500217437744,-0.7322420477867126,-0.6615110039710999,-0.6295329928398132,-0.5468780398368835,-0.5138159990310669,-0.44254299998283386,-0.46801701188087463,-0.526282012462616,-0.43414202332496643,-0.44769200682640076,-0.4986400008201599,-0.2008109986782074,-0.2739810049533844,-0.21571600437164307,-0.17587900161743164,-0.33495599031448364,-0.3395630121231079,-0.4024350047111511,-0.34064701199531555,-0.5124610066413879,-0.7018899917602539
@c_ivt * 1.5 * df.origSingleTNCWaitTime
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),-1.5499452674679939,-1.5645348230094278,-1.6506633641036879,-0.1223173245608989,-0.11128293749425504,-0.10068456310404858,-0.0891135499718566,-0.07727423020397783,-0.06882236007596389,-0.0766369843522317,-0.09763249995733587,-0.07559727214986811,-0.07895118825808756,-0.10205966819665158,-0.02552330203134606,-0.03934143441411309,-0.025556840360806906,-0.022404160626439837,-0.0526564822593365,-0.0545346766872986,-0.05835814540068812,-0.05976678402493648,-0.08247279761288305,-0.13120519457117566
"@df.c_cost * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",-8.756605617059671,-9.84173202160883,-15.484998072092262,-9.83136874017703,-9.344715441227013,-8.023036902657337,-7.11734559842995,-6.644443478347707,-5.77255886139355,-5.500288590413493,-5.9365315619938395,-4.96698229332156,-5.172275380087498,-6.090845940183183,-2.5922417907488255,-3.237803536135253,-2.797098916015025,-2.414819533947125,-3.7980754753379684,-3.869748441487281,-4.6051617560136044,-4.680356318723537,-5.694748529685184,-10.01331853551784
@c_ivt * odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,-1.2426705360412598,-1.4617739915847778,-1.8089250326156616,-1.0983630418777466,-0.9922665357589722,-0.9442994594573975,-0.8203170299530029,-0.7707239985466003,-0.6638144850730896,-0.7020255327224731,-0.7894229888916016,-0.6512130498886108,-0.6715379953384399,-0.7479599714279175,-0.3012164831161499,-0.4109715223312378,-0.3235740065574646,-0.26381850242614746,-0.5024340152740479,-0.5093445181846619,-0.6036524772644043,-0.5109705328941345,-0.7686915397644043,-1.0528349876403809
@c_ivt  * 1.5 * df.origSharedTNCWaitTime
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) # (2),-1.5499452674679939,-1.5645348230094278,-1.6506633641036879,-0.1223173245608989,-0.11128293749425504,-0.10068456310404858,-0.0891135499718566,-0.07727423020397783,-0.06882236007596389,-0.0766369843522317,-0.09763249995733587,-0.07559727214986811,-0.07895118825808756,-0.10205966819665158,-0.02552330203134606,-0.03934143441411309,-0.025556840360806906,-0.022404160626439837,-0.0526564822593365,-0.0545346766872986,-0.05835814540068812,-0.05976678402493648,-0.08247279761288305,-0.13120519457117566
"@df.c_cost * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",-3.978012747013071,-4.41831467048754,-6.679625539391207,-4.40110906447583,-4.20336230174756,-3.6749529749865166,-3.3095772564095967,-3.1193429131562858,-2.76805422053058,-2.660929875962287,-2.837916171264249,-2.446581232336583,-2.5291209306884865,-2.8979176516281786,-1.4876631231269406,-1.7488659532902568,-1.5701022272809957,-1.3928143093126704,-1.9754231181804787,-2.004233360415247,-2.3006857408931167,-2.327316015702008,-2.7408202206074135,-4.471977596896717
tour_mode_is_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
tour_mode_is_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_drive_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sov_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sov_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sov_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sov_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr2_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr2_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sr2_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr2_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr3p_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407
@sr3p_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718
@sr3p_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127
@sr3p_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714
@walk_ASC_rh * df.is_indiv * (df.i_tour_mode == I_WALK_MODE),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@bike_ASC_walk * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@bike_ASC_rh * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_express * (df.is_indiv & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_sr2 * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_sr3p * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_walk * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@drive_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_express * (df.is_indiv & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_drive_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_sr2 * (df.is_indiv & df.tour_mode_is_ride_hail),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_sr3p * (df.is_indiv & df.tour_mode_is_ride_hail),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_walk * (df.is_indiv & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ride_hail_ASC_walk_transit * (df.is_indiv & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ride_hail_ASC_taxi * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_tnc_single * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ride_hail_ASC_tnc_shared * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_sr2 * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_sr3p * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_walk * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_bike_ASC_walk * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_bike_ASC_rh * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_walk_transit & df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_express * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_sr2 * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_sr3p * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_walk * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_rh * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_drive_transit & df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_express * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_rh * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_sr2 * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_sr3p * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_walk * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_walk_transit * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_taxi * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_tnc_single * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_tnc_shared * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(c_origin_density_index*df.origin_density_index).clip(c_origin_density_index_max) if origin_density_applied else 0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_walk_express_penalty * ~(df.first_trip | df.first_trip),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@adjust_tnc_shared,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813
