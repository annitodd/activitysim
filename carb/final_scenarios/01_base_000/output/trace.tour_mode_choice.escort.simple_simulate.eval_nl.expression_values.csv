Expression,Label,0
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0
@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,9.119999885559082
@2 * walktimeshort_multiplier * df.terminal_time,util_DRIVEALONEFREE_Terminal_time,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),util_DRIVEALONEFREE_Operating_cost,5.344729143507074
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,util_DRIVEALONEFREE_Parking_cost,3.0869810231318087
@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),util_DRIVEALONEFREE_Bridge_toll,0.401185307505768
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True),util_DRIVEALONEFREE_Congestion Pricing ,0.0
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0
@odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,9.119999885559082
@2 * walktimeshort_multiplier * df.terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),util_DRIVEALONEPAY_Operating_cost,5.344729143507074
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,3.0869810231318087
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),util_DRIVEALONEPAY_Bridge_toll,0.401185307505768
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),util_DRIVEALONEPAY_Value_toll,0.0
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (2),util_DRIVEALONEPAY_Congestion Pricing ,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0
@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),util_SHARED2FREE_In_vehicle_time,9.119999885559082
@2 * walktimeshort_multiplier * df.terminal_time # (3),util_SHARED2FREE_Terminal_time,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),util_SHARED2FREE_Operating_cost,5.344729143507074
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,1.7639891560753191
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,util_SHARED2FREE_Bridge_toll,0.22924874714615312
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr2,util_SHARED2FREE_Congestion Pricing ,0.0
@(df.age >= 16),util_SHARED2FREE_Person_is_16_years_old_or_older,1.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),util_SHARED2PAY_In_vehicle_time,9.119999885559082
@2 * walktimeshort_multiplier * df.terminal_time # (4),util_SHARED2PAY_Terminal_time,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),util_SHARED2PAY_Operating_cost,5.344729143507074
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,1.7639891560753191
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,util_SHARED2PAY_Bridge_toll,0.22924874714615312
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,util_SHARED2PAY_Value_toll,0.0
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr2 # (2),util_SHARED2PAY_Congestion Pricing ,0.0
@(df.age >= 16) # (2),util_SHARED2PAY_Person_is_16_years_old_or_older,1.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0
@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),util_SHARED3FREE_In_vehicle_time,9.119999885559082
@2 * walktimeshort_multiplier * df.terminal_time # (5),util_SHARED3FREE_Terminal_time,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),util_SHARED3FREE_Operating_cost,5.344729143507074
@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,1.2347924092527234
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,util_SHARED3FREE_Bridge_toll,0.16047412300230718
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr3,util_SHARED3FREE_Congestion Pricing ,0.0
@(df.age >= 16) # (3),util_SHARED3FREE_Person_is_16_years_old_or_older,1.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0
@(odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),util_SHARED3PAY_In_vehicle_time,9.119999885559082
@2 * walktimeshort_multiplier * df.terminal_time # (6),util_SHARED3PAY_Terminal_time,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),util_SHARED3PAY_Operating_cost,5.344729143507074
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,1.2347924092527234
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,util_SHARED3PAY_Bridge_toll,0.16047412300230718
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,util_SHARED3PAY_Value_toll,0.0
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr3 # (2),util_SHARED3PAY_Congestion Pricing ,0.0
@(df.age >= 16) # (4),util_SHARED3PAY_Person_is_16_years_old_or_older,1.0
@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,util_WALK_Time_up_to_2_miles,120.0
@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,107.99999237060547
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-0.31699654472655664
@coef_topology_walk_multiplier * df.dest_topology,util_WALK_Topology,15.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0
@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,70.79999542236328
@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,0.0
@density_index_multiplier * df.density_index # (2),util_BIKE_Destination_zone_densityIndex,-0.31699654472655664
@coef_topology_bike_multiplier * df.dest_topology,util_BIKE_Topology,20.0
walk_local_available == False,util_WALK_LOC_Unavailable,1.0
@(odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),util_WALK_LOC_In_vehicle_time,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LOC_Short_iwait_time,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LOC_Long_iwait_time,0.0
@xwait_multiplier * (odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),util_WALK_LOC_transfer_wait_time,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),util_WALK_LOC_number_of_transfers,0.0
@2 * wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,26.64
@2 * wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,26.64
@waux_multiplier * (odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),util_WALK_LOC_Walk_other_time,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),util_WALK_LOC_Fare,0.0
@density_index_multiplier * df.dest_density_index,util_WALK_LOC_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology,util_WALK_LOC_Topology,2.2
walk_lrf_available == False,util_WALK_LRF_Unavailable,0.0
@(odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),util_WALK_LRF_In_vehicle_time,36.518699645996094
@(ivt_lrt_multiplier-1)*(odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Light_Rail,-2.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Ferry,-2.0
@short_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LRF_Short_iwait_time,32.25080108642578
@long_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LRF_Long_iwait_time,15.12540054321289
@xwait_multiplier * (odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),util_WALK_LRF_transfer_wait_time,87.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),util_WALK_LRF_number_of_transfers,20.0
@2 * wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,26.64
@2 * wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,26.64
@waux_multiplier * (odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),util_WALK_LRF_Walk_other_time,24.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),util_WALK_LRF_Fare,28.479203145495084
@density_index_multiplier * df.dest_density_index # (2),util_WALK_LRF_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology # (2),util_WALK_LRF_Topology,2.2
walk_express_available == False,util_WALK_EXP_Unavailable,1.0
@(odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),util_WALK_EXP_In_vehicle_time,36.518699645996094
@(ivt_exp_multiplier - 1)*(odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),util_WALK_EXP_In_vehicle_time_on_Express_bus,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_EXP_Short_iwait_time,32.25080108642578
@long_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_EXP_Long_iwait_time,15.12540054321289
@xwait_multiplier * (odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),util_WALK_EXP_transfer_wait_time,87.0
@xfers_wlk_multiplier * ((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),util_WALK_EXP_number_of_transfers,20.0
@2 * wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,26.64
@2 * wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,26.64
@waux_multiplier * (odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),util_WALK_EXP_Walk_other_time,24.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),util_WALK_EXP_Fare,28.479203145495084
@density_index_multiplier * df.dest_density_index # (3),util_WALK_EXP_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology # (3),util_WALK_EXP_Topology,2.2
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0
@(odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),util_WALK_HVY_In_vehicle_time,36.518699645996094
@(ivt_hvy_multiplier-1) * (odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_HVY_Short_iwait_time,32.25080108642578
@long_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_HVY_Long_iwait_time,15.12540054321289
@xwait_multiplier * (odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),util_WALK_HVY_transfer_wait_time,87.0
@xfers_wlk_multiplier * ((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),util_WALK_HVY_number_of_transfers,20.0
@2 * wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,26.64
@wegr_multiplier * 2 *df.destination_walk_time,util_WALK_HVY_Walk_egress_time,26.64
@waux_multiplier * (odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),util_WALK_HVY_Walk_other_time,24.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),util_WALK_HVY_Fare,28.479203145495084
@density_index_multiplier * df.dest_density_index # (4),util_WALK_HVY_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology # (4),util_WALK_HVY_Topology,2.2
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0
@(odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),util_WALK_COM_In_vehicle_time,36.518699645996094
@(ivt_com_multiplier - 1) * (odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_COM_Short_iwait_time,32.25080108642578
@long_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_COM_Long_iwait_time,15.12540054321289
@xwait_multiplier * (odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),util_WALK_COM_transfer_wait_time,87.0
@xfers_wlk_multiplier * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),util_WALK_COM_number_of_transfers,20.0
@2 * wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,26.64
@2 * wegr_multiplier * df.destination_walk_time # (4),util_WALK_COM_Walk_egress_time,26.64
@waux_multiplier * (odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),util_WALK_COM_Walk_other_time,24.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),util_WALK_COM_Fare,28.479203145495084
@density_index_multiplier * df.dest_density_index # (5),util_WALK_COM_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology # (5),util_WALK_COM_Topology,2.2
drive_local_available == False,util_DRIVE_LOC_Unavailable,0.0
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0
@(odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),util_DRIVE_LOC_In_vehicle_time,40.410400390625
@short_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LOC_Short_iwait_time,32.501800537109375
@long_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LOC_Long_iwait_time,20.250900268554688
@xwait_multiplier * (odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),util_DRIVE_LOC_transfer_wait_time,72.0
@xfers_wlk_multiplier * ((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),util_DRIVE_LOC_number_of_transfers,20.0
@dtim_multiplier * (odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),util_DRIVE_LOC_Drive_time,48.2400016784668
@wacc_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_access_time,13.32
@wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_egress_time,13.32
@waux_multiplier * (odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),util_DRIVE_LOC_Walk_other_time,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),util_DRIVE_LOC_Fare_and_operating_cost,41.46266714106958
@dacc_ratio * ((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LOC_Ratio_of_drive_access_distance_to_OD_distance,0.0
@density_index_multiplier * df.dest_density_index # (6),util_DRIVE_LOC_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology # (6),util_DRIVE_LOC_Topology,2.2
drive_lrf_available == False,util_DRIVE_LRF_Unavailable,0.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0
@(odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),util_DRIVE_LRF_In_vehicle_time,37.947998046875
@(ivt_lrt_multiplier-1) * (odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Light_Rail,-1.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Ferry,-1.0
@short_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LRF_Short_iwait_time,32.501800537109375
@long_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LRF_Long_iwait_time,15.12540054321289
@xwait_multiplier * (odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),util_DRIVE_LRF_transfer_wait_time,72.0
@xfers_drv_multiplier * ((odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_DRV_BOARDS']-1).clip(0)),util_DRIVE_LRF_number_of_transfers,40.0
@dtim_multiplier * (odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),util_DRIVE_LRF_Drive_time,30.060001373291016
@wacc_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_access_time,13.32
@wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_egress_time,13.32
@waux_multiplier * (odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),util_DRIVE_LRF_Walk_other_time,12.800000190734863
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),util_DRIVE_LRF_Fare_and_operating_cost,31.150297338838627
@dacc_ratio * ((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LRF_Ratio_of_drive_access_distance_to_OD_distance,0.0
@density_index_multiplier * df.dest_density_index # (7),util_DRIVE_LRF_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology # (7),util_DRIVE_LRF_Topology,2.2
drive_express_available == False,util_DRIVE_EXP_Unavailable,1.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0
@(odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),util_DRIVE_EXP_In_vehicle_time,40.410400390625
@(ivt_exp_multiplier-1) * (odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),util_DRIVE_EXP_In_vehicle_time_on_Express_bus,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_EXP_Short_iwait_time,32.501800537109375
@long_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_EXP_Long_iwait_time,20.250900268554688
@xwait_multiplier * (odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),util_DRIVE_EXP_transfer_wait_time,72.0
@xfers_drv_multiplier * ((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),util_DRIVE_EXP_number_of_transfers,40.0
@dtim_multiplier * (odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),util_DRIVE_EXP_Drive_time,48.2400016784668
@wacc_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_access_time,13.32
@wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_egress_ime,13.32
@waux_multiplier * (odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),util_DRIVE_EXP_Walk_other_time,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),util_DRIVE_EXP_Fare_and_operating_cost,41.46266714106958
@dacc_ratio * ((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_EXP_Ratio_of_drive_access_distance_to_OD_distance,0.0
@density_index_multiplier * df.dest_density_index # (8),util_DRIVE_EXP_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology # (8),util_DRIVE_EXP_Topology,2.2
drive_heavyrail_available == False,util_DRIVE_HVY_Unavailable,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0
@(odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),util_DRIVE_HVY_In_vehicle_time,33.29419708251953
@(ivt_hvy_multiplier-1) * (odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),util_DRIVE_HVY_In_vehicle_time_on_heavy_rail,-1.9739599227905273
@short_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_HVY_Short_iwait_time,18.36639976501465
@long_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_HVY_Long_iwait_time,0.0
@xwait_multiplier * (odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),util_DRIVE_HVY_transfer_wait_time,17.0
@xfers_drv_multiplier * ((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),util_DRIVE_HVY_number_of_transfers,40.0
@dtim_multiplier * (odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),util_DRIVE_HVY_Drive_time,22.799999237060547
@wacc_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_access_time,13.32
@wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_egress_time,13.32
@waux_multiplier * (odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),util_DRIVE_HVY_Walk_other_time,16.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),util_DRIVE_HVY_Fare_and_operating_cost,40.473718589246246
@ivt_cost_multiplier * df.ivot *  park_ride_cost,util_DRIVE_HVY_Park_and_ride,0.0
@dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_Ratio_of_drive_access_distance_to_OD_distance,0.0
@density_index_multiplier * df.dest_density_index # (9),util_DRIVE_HVY_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology # (9),util_DRIVE_HVY_Topology,2.2
drive_commuter_available == False,util_DRIVE_COM_Unavailable,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0
@(odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),util_DRIVE_COM_In_vehicle_time,51.947200775146484
@(ivt_com_multiplier - 1) * (odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),util_DRIVE_COM_In_vehicle_time_on_commuter_rail,-6.0
@short_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_COM_Short_iwait_time,32.376197814941406
@long_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_COM_Long_iwait_time,23.455398559570312
@xwait_multiplier * (odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),util_DRIVE_COM_transfer_wait_time,85.31999969482422
@xfers_drv_multiplier * ((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),util_DRIVE_COM_number_of_transfers,60.0
@dtim_multiplier * (odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),util_DRIVE_COM_Drive_time,39.97999954223633
@wacc_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_access_time,13.32
@wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_egress_time,13.32
@waux_multiplier * (odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),util_DRIVE_COM_Walk_other_time,41.599998474121094
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),util_DRIVE_COM_Fare_and_operating_cost,100.29593112936999
@dacc_ratio * ((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_COM_Ratio_of_drive_access_distance_to_OD_distance,0.0
@density_index_multiplier * df.dest_density_index # (10),util_DRIVE_COM_Destination_zone_densityIndex,-0.4065276191646443
@coef_topology_trn_multiplier * df.dest_topology # (10),util_DRIVE_COM_Topology,2.2
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (2),util_Taxi_In_vehicle_time,9.119999885559082
@1.5 * df.totalWaitTaxi,util_Taxi_Wait_time,22.500000000000004
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),util_Taxi_Tolls,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_Taxi_Bridge_toll,0.401185307505768
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (3),util_Taxi_Congestion Pricing ,0.0
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,util_Taxi_Fare,111.06063345823452
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (3),util_TNC_Single_In_vehicle_time,9.119999885559082
@1.5 * df.totalWaitSingleTNC,util_TNC_Single_Wait_time,13.95
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (2),util_TNC_Single_Tolls,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.802370615011536
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (4),util_TNC_Single_Congestion Pricing ,0.0
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,92.37827779446756
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,13.680000305175781
@1.5 * df.totalWaitSharedTNC,util_TNC_Shared_Wait_time,19.499999999999993
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (3),util_TNC_Shared_Tolls,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.802370615011536
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (5),util_TNC_Shared_Congestion Pricing ,0.0
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,81.16688211825374
@(df.is_indiv & (df.auto_ownership == 0)),util_Walk_ASC_Zero_auto,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_deficient,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_sufficient,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (2),util_Bike_ASC_Zero_auto,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_deficient,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_sufficient,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (4),util_Shared_ride_3p_Zero_auto,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_deficient,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_sufficient,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (5),util_Walk_to_Transit_Zero_auto,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_deficient,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_sufficient,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_deficient,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_sufficient,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (7),util_Taxi_Zero_auto,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_deficient,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_sufficient,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (8),util_TNC_Single_Zero_auto,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_deficient,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_sufficient,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (9),util_TNC_Shared_Zero_auto,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_deficient,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_sufficient,1.0
@(df.is_joint & (df.auto_ownership == 0)),util_Joint_Walk_ASC_Zero_auto,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_deficient,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_sufficient,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (2),util_Joint_Bike_ASC_Zero_auto,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_deficient,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_sufficient,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (4),util_Joint_Shared_ride_3p_Zero_auto,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_deficient,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_sufficient,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (5),util_Joint_Walk_to_Transit_Zero_auto,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_deficient,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_sufficient,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_deficient,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_sufficient,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (7),util_Joint_Taxi_Zero_auto,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_deficient,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_sufficient,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (8),util_Joint_TNC_Single_Zero_auto,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_deficient,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_sufficient,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (9),util_Joint_TNC_Shared_Zero_auto,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_deficient,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_sufficient,0.0
1,util_Local_bus_ASC,1.0
@(df.walk_ferry_available == False),util_Walk_to_Light_Rail_ASC,0.0
@(df.drive_ferry_available == False),util_Drive_to_Light_Rail_ASC,0.0
@df.walk_ferry_available,util_Walk_to_Ferry_ASC,1.0
@df.drive_ferry_available,util_Drive_to_Ferry_ASC,1.0
1 # (2),util_Express_Bus_ASC,1.0
1 # (3),util_Heavy_Rail_ASC,1.0
1 # (4),util_Commuter_Rail,1.0
@df.destination_in_cbd,util_Walk_to_Transit_dest_CBD,0.0
@df.destination_in_cbd # (2),util_Drive_to_Transit_dest_CBD,0.0
@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),util_Drive_to_Transit_distance_penalty,238.13998413085938
@od_skims.max('DISTWALK') > 3,util_Walk_not_available_for_long_distances,0.0
@od_skims.max('DISTBIKE') > 8,util_Bike_not_available_for_long_distances,0.0
is_escort,util_Drive_alone_not_available_for_escort_tours,1.0
