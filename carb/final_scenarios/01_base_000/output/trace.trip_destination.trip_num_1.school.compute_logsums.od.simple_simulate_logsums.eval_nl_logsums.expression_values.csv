Expression,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
sov_available == False,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt*odt_skims['SOV_TIME'],-1.0598810911178589,-1.2181450128555298,-1.4612319469451904,-0.4298059940338135,-0.3051460087299347,-0.23414401710033417,-0.1723560094833374,-0.11381999403238297,-0.1829250007867813,-0.13902300596237183,-0.18834500014781952,-0.24850700795650482,-0.276419997215271,-0.3238449990749359,-0.31978002190589905,-0.3181540071964264,-0.29159602522850037,-0.34606701135635376,-0.4002670347690582,-0.42926400899887085,-0.4829219877719879,-0.46584901213645935,-0.5924060344696045,-0.946603000164032
@c_walktimeshort * df.total_terminal_time,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['SOV_DIST'],-1.1188985972563172,-1.2317699577561092,-1.8930488940535068,-0.5882805840496272,-0.3692856150583609,-0.239851626436717,-0.16562644209726884,-0.10673703916265406,-0.20365917296109207,-0.11348478385830121,-0.17544133283614408,-0.25764111590092836,-0.39382287115623066,-0.42081384993881926,-0.4545525514790437,-0.3815542284819549,-0.3588572790229651,-0.47786294623455405,-0.6600520457043566,-0.6894967179209822,-0.7557472889097534,-0.7177145580459302,-0.814023305049211,-1.299860864634442
c_cost * total_parking_cost,-0.5676784932930529,-0.3413107379369393,-0.14683264183907418,-0.15019356643738435,-0.13972449668963188,-0.14675958524757315,-0.16586130863115942,-0.16956071226276775,-0.14580930002908393,-0.15270147513339072,-0.14784076412430486,-0.1412077559899781,-0.1461838413870578,-0.14001657382451202,-0.22062008578322925,-0.18646823340089516,-0.17504393546940428,-0.4594419477238791,-0.31848554250531075,-0.1957368629146933,-0.2138515928011726,-0.17708422131885146,-0.36806448377024037,-0.1377404691154711
@df.c_cost * odt_skims['SOV_BTOLL'],-1.5175464255801865,-1.5255287622942924,-1.5681570073708102,-0.04259473393467818,-0.027871044266662766,-0.019519792325575006,-0.01666896235417102,-0.010296522228335629,-0.0197545654296164,-0.015092622486987487,-0.019687487171422883,-0.028105817370704157,-0.03394163063135551,-0.038435878728136544,-0.036893077190413855,-0.036155214751013354,-0.02901137305668071,-0.03940851427157844,-0.0495373424537021,-0.0528241787044562,-0.05399805062175047,-0.05436697704363524,-0.06600507003329258,-0.08643041964411596
@c_age1619_da * ((df.age >= 16) & (df.age <= 19)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
sovtoll_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt*odt_skims['SOVTOLL_TIME'],-1.0598810911178589,-1.2181450128555298,-1.4612319469451904,-0.4298059940338135,-0.3051460087299347,-0.23414401710033417,-0.1723560094833374,-0.11381999403238297,-0.1829250007867813,-0.13902300596237183,-0.18834500014781952,-0.24850700795650482,-0.276419997215271,-0.3238449990749359,-0.31978002190589905,-0.3181540071964264,-0.29159602522850037,-0.34606701135635376,-0.4002670347690582,-0.42926400899887085,-0.4829219877719879,-0.46584901213645935,-0.5924060344696045,-0.946603000164032
@c_walktimeshort * df.total_terminal_time # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['SOVTOLL_DIST'],-1.1188985972563172,-1.2317699577561092,-1.8930488940535068,-0.5882805840496272,-0.3692856150583609,-0.239851626436717,-0.16562644209726884,-0.10673703916265406,-0.20365917296109207,-0.11348478385830121,-0.17544133283614408,-0.25764111590092836,-0.39382287115623066,-0.42081384993881926,-0.4545525514790437,-0.3815542284819549,-0.3588572790229651,-0.47786294623455405,-0.6600520457043566,-0.6894967179209822,-0.7557472889097534,-0.7177145580459302,-0.814023305049211,-1.299860864634442
c_cost * total_parking_cost # (2),-0.5676784932930529,-0.3413107379369393,-0.14683264183907418,-0.15019356643738435,-0.13972449668963188,-0.14675958524757315,-0.16586130863115942,-0.16956071226276775,-0.14580930002908393,-0.15270147513339072,-0.14784076412430486,-0.1412077559899781,-0.1461838413870578,-0.14001657382451202,-0.22062008578322925,-0.18646823340089516,-0.17504393546940428,-0.4594419477238791,-0.31848554250531075,-0.1957368629146933,-0.2138515928011726,-0.17708422131885146,-0.36806448377024037,-0.1377404691154711
@df.c_cost * odt_skims['SOVTOLL_BTOLL'],-1.5175464255801865,-1.5255287622942924,-1.5681570073708102,-0.04259473393467818,-0.027871044266662766,-0.019519792325575006,-0.01666896235417102,-0.010296522228335629,-0.0197545654296164,-0.015092622486987487,-0.019687487171422883,-0.028105817370704157,-0.03394163063135551,-0.038435878728136544,-0.036893077190413855,-0.036155214751013354,-0.02901137305668071,-0.03940851427157844,-0.0495373424537021,-0.0528241787044562,-0.05399805062175047,-0.05436697704363524,-0.06600507003329258,-0.08643041964411596
@df.c_cost * odt_skims['SOVTOLL_VTOLL'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_age1619_da * ((df.age >= 16) & (df.age <= 19)) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV2_TIME'],-1.0598810911178589,-1.2181450128555298,-1.4222080707550049,-0.4298059940338135,-0.3051460087299347,-0.23414401710033417,-0.1723560094833374,-0.11381999403238297,-0.1829250007867813,-0.13902300596237183,-0.18834500014781952,-0.24850700795650482,-0.276419997215271,-0.3238449990749359,-0.31978002190589905,-0.3181540071964264,-0.29159602522850037,-0.34606701135635376,-0.4002670347690582,-0.42926400899887085,-0.4829219877719879,-0.46584901213645935,-0.5924060344696045,-0.946603000164032
@c_walktimeshort * df.total_terminal_time # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV2_DIST'],-1.1188985972563172,-1.2317699577561092,-2.3022074296118444,-0.5882805840496272,-0.3692856150583609,-0.239851626436717,-0.16562644209726884,-0.10673703916265406,-0.20365917296109207,-0.11348478385830121,-0.17544133283614408,-0.25764111590092836,-0.39382287115623066,-0.42081384993881926,-0.4545525514790437,-0.3815542284819549,-0.3588572790229651,-0.47786294623455405,-0.6600520457043566,-0.6894967179209822,-0.7557472889097534,-0.7177145580459302,-0.814023305049211,-1.299860864634442
@df.c_cost * df.total_parking_cost / costShareSr2,-0.32438771045317305,-0.19503470739253673,-0.08390436676518524,-0.08582489510707678,-0.0798425695369325,-0.08386262014147038,-0.0947778906463768,-0.09689183557872443,-0.0833196000166194,-0.08725798579050899,-0.08448043664245992,-0.08069014627998748,-0.08353362364974733,-0.08000947075686402,-0.12606862044755957,-0.10655327622908295,-0.10002510598251672,-0.26253825584221663,-0.1819917385744633,-0.11184963595125332,-0.12220091017209864,-0.10119098361077226,-0.21032256215442308,-0.07870883949455491
@df.c_cost * odt_skims['HOV2_BTOLL'] / costShareSr2,-0.8671693860458208,-0.8717307213110242,-0.4287454829071535,-0.024339847962673244,-0.01592631100952158,-0.011154167043185717,-0.009525121345240584,-0.005883726987620359,-0.011288323102637943,-0.008624355706849992,-0.011249992669384505,-0.016060467068973804,-0.01939521750363172,-0.02196335927322088,-0.021081758394522202,-0.020660122714864775,-0.016577927460960405,-0.022519151012330537,-0.028307052830686914,-0.030185244973974974,-0.030856028926714553,-0.031066844024934422,-0.03771718287616719,-0.04938881122520912
@c_hhsize1_sr * (df.hhsize == 1),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV2TOLL_TIME'],-1.0598810911178589,-1.2181450128555298,-1.4222080707550049,-0.4298059940338135,-0.3051460087299347,-0.23414401710033417,-0.1723560094833374,-0.11381999403238297,-0.1829250007867813,-0.13902300596237183,-0.18834500014781952,-0.24850700795650482,-0.276419997215271,-0.3238449990749359,-0.31978002190589905,-0.3181540071964264,-0.29159602522850037,-0.34606701135635376,-0.4002670347690582,-0.42926400899887085,-0.4829219877719879,-0.46584901213645935,-0.5924060344696045,-0.946603000164032
@c_walktimeshort * df.total_terminal_time # (4),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV2TOLL_DIST'],-1.1188985972563172,-1.2317699577561092,-2.3022074296118444,-0.5882805840496272,-0.3692856150583609,-0.239851626436717,-0.16562644209726884,-0.10673703916265406,-0.20365917296109207,-0.11348478385830121,-0.17544133283614408,-0.25764111590092836,-0.39382287115623066,-0.42081384993881926,-0.4545525514790437,-0.3815542284819549,-0.3588572790229651,-0.47786294623455405,-0.6600520457043566,-0.6894967179209822,-0.7557472889097534,-0.7177145580459302,-0.814023305049211,-1.299860864634442
@df.c_cost * df.total_parking_cost / costShareSr2 # (2),-0.32438771045317305,-0.19503470739253673,-0.08390436676518524,-0.08582489510707678,-0.0798425695369325,-0.08386262014147038,-0.0947778906463768,-0.09689183557872443,-0.0833196000166194,-0.08725798579050899,-0.08448043664245992,-0.08069014627998748,-0.08353362364974733,-0.08000947075686402,-0.12606862044755957,-0.10655327622908295,-0.10002510598251672,-0.26253825584221663,-0.1819917385744633,-0.11184963595125332,-0.12220091017209864,-0.10119098361077226,-0.21032256215442308,-0.07870883949455491
@df.c_cost * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,-0.8671693860458208,-0.8717307213110242,-0.4287454829071535,-0.024339847962673244,-0.01592631100952158,-0.011154167043185717,-0.009525121345240584,-0.005883726987620359,-0.011288323102637943,-0.008624355706849992,-0.011249992669384505,-0.016060467068973804,-0.01939521750363172,-0.02196335927322088,-0.021081758394522202,-0.020660122714864775,-0.016577927460960405,-0.022519151012330537,-0.028307052830686914,-0.030185244973974974,-0.030856028926714553,-0.031066844024934422,-0.03771718287616719,-0.04938881122520912
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize1_sr * (df.hhsize == 1) # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV3_TIME'],-0.6547359824180603,-0.8130000233650208,-1.0560870170593262,-0.3674760162830353,-0.3051460087299347,-0.23414401710033417,-0.1723560094833374,-0.11381999403238297,-0.17913100123405457,-0.13902300596237183,-0.18834500014781952,-0.24850700795650482,-0.276419997215271,-0.3238449990749359,-0.31978002190589905,-0.3181540071964264,-0.29159602522850037,-0.34606701135635376,-0.4002670347690582,-0.42926400899887085,-0.47641801834106445,-0.46584901213645935,-0.5924060344696045,-0.7761440277099609
@c_walktimeshort * df.total_terminal_time # (5),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV3_DIST'],-1.1158314877764415,-1.2287028482762332,-1.8899816675709042,-0.5882805840496272,-0.3692856150583609,-0.239851626436717,-0.16562644209726884,-0.10673703916265406,-0.20365917296109207,-0.11348478385830121,-0.17544133283614408,-0.25764111590092836,-0.39382287115623066,-0.42081384993881926,-0.4545525514790437,-0.3815542284819549,-0.3588572790229651,-0.47786294623455405,-0.6600520457043566,-0.6894967179209822,-0.7557472889097534,-0.7177145580459302,-0.814023305049211,-1.299860864634442
@df.c_cost *  df.total_parking_cost / costShareSr3,-0.22707139731722115,-0.1365242951747757,-0.058733056735629674,-0.06007742657495374,-0.05588979867585275,-0.05870383409902926,-0.06634452345246376,-0.0678242849051071,-0.05832372001163357,-0.06108059005335629,-0.05913630564972194,-0.05648310239599123,-0.058473536554823125,-0.056006629529804806,-0.0882480343132917,-0.07458729336035806,-0.07001757418776171,-0.18377677908955165,-0.1273942170021243,-0.07829474516587732,-0.08554063712046904,-0.07083368852754059,-0.14722579350809614,-0.05509618764618844
@df.c_cost * odt_skims['HOV3_BTOLL'] / costShareSr3,-0.27099642154413084,-0.27418935622977314,-0.29124065426038037,-0.017037893573871272,-0.011148417706665106,-0.007807916930230002,-0.006667584941668409,-0.004118608891334251,-0.00790182617184656,-0.006037048994794994,-0.007874994868569154,-0.011242326948281662,-0.013576652252542204,-0.015374351491254618,-0.014757230876165543,-0.014462085900405342,-0.011604549222672284,-0.015763405708631377,-0.01981493698148084,-0.02112967148178248,-0.021599220248700188,-0.021746790817454096,-0.02640202801331703,-0.034572167857646385
@c_hhsize1_sr * (df.hhsize == 1) # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['HOV3TOLL_TIME'],-0.6547359824180603,-0.8130000233650208,-1.0560870170593262,-0.3674760162830353,-0.3051460087299347,-0.23414401710033417,-0.1723560094833374,-0.11381999403238297,-0.17913100123405457,-0.13902300596237183,-0.18834500014781952,-0.24850700795650482,-0.276419997215271,-0.3238449990749359,-0.31978002190589905,-0.3181540071964264,-0.29159602522850037,-0.34606701135635376,-0.4002670347690582,-0.42926400899887085,-0.47641801834106445,-0.46584901213645935,-0.5924060344696045,-0.7761440277099609
@c_walktimeshort * df.total_terminal_time # (6),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV3TOLL_DIST'],-1.1158314877764415,-1.2287028482762332,-1.8899816675709042,-0.5882805840496272,-0.3692856150583609,-0.239851626436717,-0.16562644209726884,-0.10673703916265406,-0.20365917296109207,-0.11348478385830121,-0.17544133283614408,-0.25764111590092836,-0.39382287115623066,-0.42081384993881926,-0.4545525514790437,-0.3815542284819549,-0.3588572790229651,-0.47786294623455405,-0.6600520457043566,-0.6894967179209822,-0.7557472889097534,-0.7177145580459302,-0.814023305049211,-1.299860864634442
@df.c_cost * df.total_parking_cost / costShareSr3,-0.22707139731722115,-0.1365242951747757,-0.058733056735629674,-0.06007742657495374,-0.05588979867585275,-0.05870383409902926,-0.06634452345246376,-0.0678242849051071,-0.05832372001163357,-0.06108059005335629,-0.05913630564972194,-0.05648310239599123,-0.058473536554823125,-0.056006629529804806,-0.0882480343132917,-0.07458729336035806,-0.07001757418776171,-0.18377677908955165,-0.1273942170021243,-0.07829474516587732,-0.08554063712046904,-0.07083368852754059,-0.14722579350809614,-0.05509618764618844
@df.c_cost * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,-0.27099642154413084,-0.27418935622977314,-0.29124065426038037,-0.017037893573871272,-0.011148417706665106,-0.007807916930230002,-0.006667584941668409,-0.004118608891334251,-0.00790182617184656,-0.006037048994794994,-0.007874994868569154,-0.011242326948281662,-0.013576652252542204,-0.015374351491254618,-0.014757230876165543,-0.014462085900405342,-0.011604549222672284,-0.015763405708631377,-0.01981493698148084,-0.02112967148178248,-0.021599220248700188,-0.021746790817454096,-0.02640202801331703,-0.034572167857646385
@df.c_cost * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize1_sr * (df.hhsize == 1) # (4),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_walktimeshort * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312,-1.0839999914169312
@c_walktimelong * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,-406.06640625,-412.0284118652344,-373.92578125,-40.97520446777344,-25.96179962158203,-15.772200584411621,-9.21399974822998,-4.010799884796143,-12.5201997756958,-4.60699987411499,-10.081199645996094,-17.3439998626709,-27.587799072265625,-31.706998825073242,-32.52000045776367,-26.558000564575195,-26.28700065612793,-34.5796012878418,-43.63100051879883,-45.41960144042969,-52.14039611816406,-51.92359924316406,-59.5657958984375,-102.00439453125
@c_density_index * df.density_index,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_walk * df.trip_topology,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065
is_atwork_subtour & ~work_tour_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_biketimeshort * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.1381800174713135,-2.119220018386841,-1.4634002447128296,-0.9430800080299377,-1.7940200567245483,-1.0026999711990356,-1.5501199960708618,-2.276399850845337,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.197800397872925,-3.1707000732421875,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083
@c_biketimelong * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,-189.4832000732422,-192.46417236328125,-173.41290283203125,-6.937601089477539,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.24390041828155518,-2.303499698638916,-2.7100000381469727,-0.0,-0.0,-3.739800214767456,-8.26550006866455,-9.15980052947998,-12.5201997756958,-12.411799430847168,-16.232900619506836,-37.45219802856445
@c_density_index*df.density_index,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_bike * df.trip_topology,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542
walk_local_available == False,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['WLK_LOC_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-1.1586090326309204,-0.7297569513320923,-0.41941043734550476,-0.2655610144138336,-0.11331594735383987,-0.2623659372329712,-0.1504592001438141,-0.2891570031642914,-0.483987033367157,-0.5641353130340576,-0.9123838543891907,-0.9572939276695251,-0.799008309841156,-0.9837245941162109,-0.9951770901679993,-1.0164830684661865,-1.1022980213165283,-1.3583415746688843,-1.4890176057815552,-1.7065058946609497,-2.389686346054077
@c_short_i_wait * (odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656
@c_long_i_wait * (odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.01019772607833147,-0.01019772607833147,-0.00679937144741416,-0.00679937144741416,-0.003398329019546509,-0.003398329019546509,-0.003398329019546509,-0.003398329019546509,-0.003398329019546509,-0.00679937144741416,-0.01019772607833147,-0.00679937144741416,-0.00679937144741416,-0.01019772607833147,-0.00679937144741416,-0.00679937144741416,-0.00679937144741416,-0.00679937144741416,-0.01019772607833147,-0.01019772607833147,-0.01019772607833147
@c_xwait * odt_skims['WLK_LOC_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.9484999775886536,-1.0839999914169312,-0.2709999978542328,-0.4065000116825104,-0.0,-0.5419999957084656,-0.0,-0.0,-0.0,-0.4065000116825104,-0.6775000095367432,-0.2709999978542328,-0.2709999978542328,-0.6775000095367432,-0.2709999978542328,-0.4065000116825104,-0.4065000116825104,-0.4065000116825104,-0.5419999957084656,-0.4336000084877014,-0.5035180449485779
@c_xfers_wlk * (odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.0,-0.1354999989271164,-0.0,-0.0,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328
@c_wacc * df.origin_walk_time,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_LOC_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.08671999722719193,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.06503999978303909,-0.06503999978303909
@df.c_cost * odt_skims['WLK_LOC_WLK_FAR'],-0.0,-0.0,-0.0,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457
@c_density_index * df.density_index # (2),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_lrf_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_LRF_WLK_TOTIVT']/100,-2.115415096282959,-0.0,-0.0,-1.0400166511535645,-0.58575838804245,-0.41941043734550476,-0.2655610144138336,-0.11331594735383987,-0.2623659372329712,-0.1504592001438141,-0.22914676368236542,-0.483987033367157,-0.5641353130340576,-0.6981745958328247,-0.9572939276695251,-0.799008309841156,-0.9837245941162109,-0.9951770901679993,-1.0164830684661865,-1.1022980213165283,-1.3583415746688843,-1.2900466918945312,-1.7059638500213623,-2.389686346054077
@(c_ivt_lrt-c_ivt) * odt_skims['WLK_LRF_WLK_KEYIVT']/100,0.11202380806207657,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(c_ivt_ferry-c_ivt_lrt) * odt_skims['WLK_LRF_WLK_FERRYIVT']/100,0.08129999786615372,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_short_i_wait * (odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),-0.5419999957084656,-0.0,-0.0,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656
@c_long_i_wait * (odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0),-0.009493125602602959,-0.0,-0.0,-0.01019772607833147,-0.01019772607833147,-0.00679937144741416,-0.00679937144741416,-0.003398329019546509,-0.003398329019546509,-0.003398329019546509,-0.003398329019546509,-0.003398329019546509,-0.00679937144741416,-0.01019772607833147,-0.00679937144741416,-0.00679937144741416,-0.01019772607833147,-0.00679937144741416,-0.00679937144741416,-0.00679937144741416,-0.00679937144741416,-0.01019772607833147,-0.01019772607833147,-0.01019772607833147
@c_xwait * odt_skims['WLK_LRF_WLK_XWAIT']/100,-1.3625880479812622,-0.0,-0.0,-1.2195000648498535,-1.0839999914169312,-0.2709999978542328,-0.4065000116825104,-0.0,-0.5419999957084656,-0.0,-0.0,-0.0,-0.4065000116825104,-0.8130000233650208,-0.2709999978542328,-0.2709999978542328,-0.6775000095367432,-0.2709999978542328,-0.4065000116825104,-0.4065000116825104,-0.4065000116825104,-0.6775000095367432,-0.4336000084877014,-0.5035180449485779
@c_xfers_wlk * (odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0),-0.406499981880188,-0.0,-0.0,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.0,-0.1354999989271164,-0.0,-0.0,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328
@c_wacc * df.origin_walk_time # (2),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (2),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_LRF_WLK_WAUX']/100,-0.5745199918746948,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.06503999978303909,-0.06503999978303909
@df.c_cost * odt_skims['WLK_LRF_WLK_FAR'],-1.579694486971357,-0.0,-0.0,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457
@c_density_index * df.density_index # (3),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology # (2),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_express_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_EXP_WLK_TOTIVT']/100,-1.1080377101898193,-1.3227698802947998,-0.0,-0.9910551309585571,-0.5727991461753845,-0.37044888734817505,-0.2165994644165039,-0.1200530081987381,-0.2691030204296112,-0.1504592001438141,-0.22914676368236542,-0.483987033367157,-0.45935043692588806,-0.5414688587188721,-0.4043320119380951,-0.30623000860214233,-0.49037179350852966,-0.4409170150756836,-0.6672670841217041,-0.7032098174095154,-0.8113414645195007,-0.8783381581306458,-1.151706576347351,-1.8354262113571167
@(c_ivt_exp-c_ivt) * odt_skims['WLK_EXP_WLK_KEYIVT']/100,0.31541764736175537,0.31541764736175537,0.0,0.03283200412988663,0.2029104083776474,0.03283200412988663,0.03283200412988663,0.042527999728918076,0.042527999728918076,0.0,0.0,0.0,0.07766400277614594,0.07766400277614594,0.14323200285434723,0.10848000645637512,0.08131200820207596,0.15619200468063354,0.15619200468063354,0.15619200468063354,0.15619200468063354,0.15619200468063354,0.15619200468063354,0.15619200468063354
@c_short_i_wait * (odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),-0.23616567254066467,-0.23616567254066467,-0.0,-0.2371954619884491,-0.2303987741470337,-0.2303987741470337,-0.2303987741470337,-0.2168000042438507,-0.2168000042438507,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.2303987741470337,-0.2303987741470337,-0.2168000042438507,-0.2168000042438507,-0.2303987741470337,-0.2168000042438507,-0.2303987741470337,-0.2303987741470337,-0.2303987741470337,-0.2303987741470337,-0.2303987741470337,-0.2303987741470337
@c_long_i_wait * (odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.003398329019546509,-0.003398329019546509,-0.003398329019546509,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_EXP_WLK_XWAIT']/100,-0.5441679954528809,-0.552839994430542,-0.0,-1.2195000648498535,-0.8130000233650208,-0.2709999978542328,-0.4065000116825104,-0.0,-0.5419999957084656,-0.0,-0.0,-0.0,-0.4065000116825104,-0.4065000116825104,-0.0,-0.0,-0.4065000116825104,-0.0,-0.2709999978542328,-0.2709999978542328,-0.18048600852489471,-0.2709999978542328,-0.16259999573230743,-0.2325180023908615
@c_xfers_wlk * (odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0),-0.406499981880188,-0.406499981880188,-0.0,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.0,-0.1354999989271164,-0.0,-0.0,-0.0,-0.1354999989271164,-0.1354999989271164,-0.0,-0.0,-0.1354999989271164,-0.0,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164
@c_wacc * df.origin_walk_time # (3),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (3),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_EXP_WLK_WAUX']/100,-0.11924000084400177,-0.24932001531124115,-0.0,-0.0,-0.9539200067520142,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.06503999978303909,-0.06503999978303909,-0.06503999978303909,-0.06503999978303909,-0.06503999978303909
@df.c_cost * odt_skims['WLK_EXP_WLK_FAR'],-1.884900852819326,-1.884900852819326,-0.0,-0.5332726612068912,-0.4762560873671607,-0.5332726612068912,-0.5332726612068912,-0.4762560873671607,-0.4762560873671607,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.5332726612068912,-0.5332726612068912,-0.4762560873671607,-0.4762560873671607,-0.5332726612068912,-0.4762560873671607,-0.5332726612068912,-0.5332726612068912,-0.5332726612068912,-0.5332726612068912,-0.5332726612068912,-0.5332726612068912
@c_density_index * df.density_index # (4),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology # (3),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_heavyrail_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_HVY_WLK_TOTIVT']/100,-0.9013974666595459,-1.1681455373764038,-1.9062086343765259,-0.6872208118438721,-0.40574660897254944,-0.23939868807792664,-0.2165994644165039,-0.1200530081987381,-0.2691030204296112,-0.1504592001438141,-0.22914676368236542,-0.483987033367157,-0.45935043692588806,-0.5414688587188721,-0.4043320119380951,-0.30623000860214233,-0.49037179350852966,-0.4409170150756836,-0.6672670841217041,-0.5844142436981201,-0.8113414645195007,-0.6860013008117676,-0.7592228055000305,-1.3756041526794434
@(c_ivt_hvy-c_ivt) * odt_skims['WLK_HVY_WLK_KEYIVT']/100,0.1562688946723938,0.14825975894927979,0.25113406777381897,0.053410306572914124,0.023869138211011887,0.023869138211011887,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.028699440881609917,0.0,0.04901685193181038,0.06366115063428879,0.11673487722873688
@c_short_i_wait * (odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),-0.24023066461086273,-0.23576457798480988,-0.23489739000797272,-0.24457207322120667,-0.24457207322120667,-0.24023066461086273,-0.2303987741470337,-0.2168000042438507,-0.2168000042438507,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.2303987741470337,-0.2303987741470337,-0.2168000042438507,-0.2168000042438507,-0.2303987741470337,-0.2168000042438507,-0.2303987741470337,-0.24023066461086273,-0.2303987741470337,-0.24023066461086273,-0.24023066461086273,-0.24457207322120667
@c_long_i_wait * (odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.003398329019546509,-0.003398329019546509,-0.003398329019546509,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_HVY_WLK_XWAIT']/100,-0.2032500058412552,-0.2845500111579895,-1.0162500143051147,-1.0162500143051147,-0.9484999775886536,-0.1354999989271164,-0.4065000116825104,-0.0,-0.5419999957084656,-0.0,-0.0,-0.0,-0.4065000116825104,-0.4065000116825104,-0.0,-0.0,-0.4065000116825104,-0.0,-0.2709999978542328,-0.10514800250530243,-0.18048600852489471,-0.2168000042438507,-0.2032500058412552,-0.4357680082321167
@c_xfers_wlk * (odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0),-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.0,-0.1354999989271164,-0.0,-0.0,-0.0,-0.1354999989271164,-0.1354999989271164,-0.0,-0.0,-0.1354999989271164,-0.0,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.2709999978542328
@c_wacc * df.origin_walk_time # (4),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (4),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_HVY_WLK_WAUX']/100,-0.05420000106096268,-0.10840000212192535,-0.10840000212192535,-0.10840000212192535,-0.10840000212192535,-0.05420000106096268,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.05420000106096268,-0.06503999978303909,-0.05420000106096268,-0.05420000106096268,-0.10840000212192535
@df.c_cost * odt_skims['WLK_HVY_WLK_FAR'],-1.4958465842658708,-1.3818134365864099,-2.069366238771395,-0.9089112653274686,-0.9089112653274686,-0.9089112653274686,-0.5332726612068912,-0.4762560873671607,-0.4762560873671607,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.5332726612068912,-0.5332726612068912,-0.4762560873671607,-0.4762560873671607,-0.5332726612068912,-0.4762560873671607,-0.5332726612068912,-0.9089112653274686,-0.5332726612068912,-0.9089112653274686,-0.9089112653274686,-1.0497757418726852
@c_density_index * df.density_index # (5),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology # (4),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_commuter_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_COM_WLK_TOTIVT']/100,-0.8638070821762085,-1.1305551528930664,-1.868618130683899,-0.6872208118438721,-0.40574660897254944,-0.23939868807792664,-0.2165994644165039,-0.1200530081987381,-0.2691030204296112,-0.1504592001438141,-0.22914676368236542,-0.483987033367157,-0.45935043692588806,-0.5414688587188721,-0.4043320119380951,-0.30623000860214233,-0.49037179350852966,-0.4409170150756836,-0.6672670841217041,-0.5844142436981201,-0.8113414645195007,-0.6860013008117676,-0.7592228055000305,-1.3756041526794434
@(c_ivt_com-c_ivt) * odt_skims['WLK_COM_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_short_i_wait * (odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh),-0.24023066461086273,-0.23576457798480988,-0.23489739000797272,-0.24457207322120667,-0.24457207322120667,-0.24023066461086273,-0.2303987741470337,-0.2168000042438507,-0.2168000042438507,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.2303987741470337,-0.2303987741470337,-0.2168000042438507,-0.2168000042438507,-0.2303987741470337,-0.2168000042438507,-0.2303987741470337,-0.24023066461086273,-0.2303987741470337,-0.24023066461086273,-0.24023066461086273,-0.24457207322120667
@c_long_i_wait * (odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.003398329019546509,-0.003398329019546509,-0.003398329019546509,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_COM_WLK_XWAIT']/100,-0.17127200961112976,-0.2525720000267029,-1.0162500143051147,-1.0162500143051147,-0.9484999775886536,-0.1354999989271164,-0.4065000116825104,-0.0,-0.5419999957084656,-0.0,-0.0,-0.0,-0.4065000116825104,-0.4065000116825104,-0.0,-0.0,-0.4065000116825104,-0.0,-0.2709999978542328,-0.10514800250530243,-0.18048600852489471,-0.2168000042438507,-0.2032500058412552,-0.4357680082321167
@c_xfers_wlk * (odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0),-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.2709999978542328,-0.1354999989271164,-0.1354999989271164,-0.0,-0.1354999989271164,-0.0,-0.0,-0.0,-0.1354999989271164,-0.1354999989271164,-0.0,-0.0,-0.1354999989271164,-0.0,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.1354999989271164,-0.2709999978542328
@c_wacc * df.origin_walk_time # (5),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (5),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_COM_WLK_WAUX']/100,-0.05420000106096268,-0.10840000212192535,-0.10840000212192535,-0.10840000212192535,-0.10840000212192535,-0.05420000106096268,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.05420000106096268,-0.06503999978303909,-0.05420000106096268,-0.05420000106096268,-0.10840000212192535
@df.c_cost * odt_skims['WLK_COM_WLK_FAR'],-1.2510107083658517,-1.1369775606863906,-1.9050243494686427,-0.9089112653274686,-0.9089112653274686,-0.9089112653274686,-0.5332726612068912,-0.4762560873671607,-0.4762560873671607,-0.45277867460962457,-0.45277867460962457,-0.45277867460962457,-0.5332726612068912,-0.5332726612068912,-0.4762560873671607,-0.4762560873671607,-0.5332726612068912,-0.4762560873671607,-0.5332726612068912,-0.9089112653274686,-0.5332726612068912,-0.9089112653274686,-0.9089112653274686,-1.0497757418726852
@c_density_index * df.density_index # (6),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology # (5),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (7),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology # (6),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_local_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_LOC_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_LOC_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_wlk * (odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_LOC_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_LOC_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_LOC_WLK_FAR'] + costPerMile*odt_skims['DRV_LOC_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_LOC_WLK_DDIST']/100)/ (od_skims['DIST']),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_local_available_inbound,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * c_ivt * odt_skims['WLK_LOC_DRV_TOTIVT']/100,-0.0,-0.0,-0.0,-0.9942366752929688,-0.5857583620605469,-0.3617958505859375,-0.2655610280151367,-0.11331594396972657,-0.26236594396972657,-0.15045920330810547,-0.2291467593383789,-0.48398704455566405,-0.5641352614746094,-0.9123838247070312,-0.9572939367675781,-0.7990083017578126,-0.9837245747070312,-0.9951770373535156,-1.0164830891113281,-1.0164830891113281,-1.358341451171875,-1.3895145229492187,-1.7065059223632812,-2.3666321494140625
@df.inbound * c_short_i_wait * (odt_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542
@df.inbound * c_long_i_wait * (odt_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.006799371433258056,-0.010197726154327392,-0.006799371433258056,-0.006799371433258056,-0.003398328876495361,-0.003398328876495361,-0.003398328876495361,-0.003398328876495361,-0.003398328876495361,-0.006799371433258056,-0.010197726154327392,-0.006799371433258056,-0.006799371433258056,-0.010197726154327392,-0.006799371433258056,-0.006799371433258056,-0.006799371433258056,-0.006799371433258056,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392
@df.inbound * c_xwait * odt_skims['WLK_LOC_DRV_XWAIT']/100,-0.0,-0.0,-0.0,-1.626,-1.0839999999999999,-0.27099999999999996,-0.4065,-0.0,-0.5419999999999999,-0.0,-0.0,-0.0,-0.4065,-0.6775,-0.27099999999999996,-0.27099999999999996,-0.6775,-0.27099999999999996,-0.4065,-0.4065,-0.4065,-0.5419999999999999,-0.4336,-0.503518
@df.inbound * c_xfers_wlk * (odt_skims['WLK_LOC_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.1355,-0.271,-0.1355,-0.1355,-0.0,-0.1355,-0.0,-0.0,-0.0,-0.1355,-0.271,-0.1355,-0.1355,-0.271,-0.1355,-0.1355,-0.1355,-0.1355,-0.271,-0.271,-0.271
@df.inbound * c_dtim * odt_skims['WLK_LOC_DRV_DTIM']/100,-0.0,-0.0,-0.0,-0.12032399999999999,-0.115446,-0.08129999999999998,-0.047154,-0.027641999999999996,-0.069918,-0.10568999999999999,-0.09105599999999998,-0.06504,-0.10081199999999998,-0.11381999999999999,-0.04064999999999999,-0.079674,-0.04552799999999999,-0.027641999999999996,-0.04552799999999999,-0.092682,-0.029268000000000002,-0.08780400000000001,-0.017886,-0.056909999999999995
@df.inbound * c_wacc * df.origin_walk_time,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_LOC_DRV_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.06504,-0.06504
@df.inbound * df.c_cost * (odt_skims['WLK_LOC_DRV_FAR'] + costPerMile*odt_skims['WLK_LOC_DRV_DDIST']/100),-0.0,-0.0,-0.0,-0.4981726108226232,-0.49633229674712925,-0.48345025174876693,-0.4705682067504046,-0.4632070016251273,-0.47915621969041333,-0.4926517197728398,-0.4871308287230564,-0.47731590561491943,-0.4908114056973459,-0.4957188416630651,-0.46811443759084653,-0.4828367966647028,-0.4699547516663405,-0.4632070016251273,-0.4699547516663405,-0.4877442326304221,-0.4638204567091914,-0.4859039697316266,-0.4595264246508378,-0.4742487837246941
@df.outbound * c_dacc_ratio * (odt_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (8),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology # (7),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_lrf_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_LRF_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_lrt-c_ivt)*odt_skims['DRV_LRF_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (c_ivt_ferry-c_ivt_lrt)*odt_skims['DRV_LRF_WLK_FERRYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_LRF_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_LRF_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_LRF_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_LRF_WLK_FAR'] + costPerMile * odt_skims['DRV_LRF_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_LRF_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_lrf_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_LRF_DRV_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.8119051494140624,-0.0
@df.inbound * (c_ivt_lrt-c_ivt)*odt_skims['WLK_LRF_DRV_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (c_ivt_ferry-c_ivt_lrt)*odt_skims['WLK_LRF_DRV_FERRYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * c_short_i_wait * (odt_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.0
@df.inbound * c_long_i_wait * (odt_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.010197726154327392,-0.0
@df.inbound * c_xwait * odt_skims['WLK_LRF_DRV_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-1.8969999999999998,-0.0
@df.inbound * c_xfers_drv * (odt_skims['WLK_LRF_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.0
@df.inbound * c_dtim * odt_skims['WLK_LRF_DRV_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.77777,-0.755548,-0.830886,-0.700806,-0.77506,-0.6807519999999999,-0.415714,-0.310566,-0.19512000000000002,-0.281298,-0.38373599999999997,-0.294848,-0.56097,-0.446066,-0.29647399999999996,-0.34254399999999996,-0.538206,-0.431432,-0.75067,-0.0
@df.inbound * c_wacc * df.origin_walk_time # (2),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_LRF_DRV_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * df.c_cost * (odt_skims['WLK_LRF_DRV_FAR'] + costPerMile * odt_skims['WLK_LRF_DRV_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-1.1919634431324726,-1.1324605005762851,-1.122032122384084,-1.0527145126032516,-0.9484311400948278,-0.8380135238059534,-0.7901658696100952,-0.6202454131184301,-0.5564485408572857,-0.5987753040033605,-0.6852690931943058,-0.6079767720274334,-0.7300496254999387,-0.7067392534860737,-0.6490766761820784,-0.6797482533212208,-0.8466015879226606,-0.8165434658675824,-0.8423075558643071,-0.0
@df.inbound * c_dacc_ratio * (odt_skims['WLK_LRF_DRV_DDIST']/100)/ od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (5),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (9),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology # (8),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_express_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_EXP_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_exp-c_ivt) * odt_skims['DRV_EXP_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_EXP_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_EXP_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_EXP_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_EXP_WLK_FAR'] + costPerMile * odt_skims['DRV_EXP_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_EXP_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_express_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_EXP_DRV_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-0.4395918060302734,-1.6564116782226563
@df.inbound * (c_ivt_exp-c_ivt) * odt_skims['WLK_EXP_DRV_KEYIVT']/100,0.0,0.0,0.0,0.0,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.08131199999999998,0.15619199999999997
@df.inbound * c_short_i_wait * (odt_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.23039876871109008,-0.22719013900756835
@df.inbound * c_long_i_wait * (odt_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_EXP_DRV_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-1.626,-0.38373599999999997
@df.inbound * c_xfers_drv * (odt_skims['WLK_EXP_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.813
@df.inbound * c_dtim * odt_skims['WLK_EXP_DRV_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.77777,-0.755548,-0.830886,-0.700806,-0.77506,-0.6807519999999999,-0.415714,-0.310566,-0.19512000000000002,-0.281298,-0.38373599999999997,-0.294848,-0.56097,-0.446066,-0.29647399999999996,-0.34254399999999996,-0.538206,-0.431432,-0.75067,-0.286718
@df.inbound * c_wacc * df.origin_walk_time # (3),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_EXP_DRV_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.06504
@df.inbound * df.c_cost * (odt_skims['WLK_EXP_DRV_FAR'] + costPerMile * odt_skims['WLK_EXP_DRV_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-1.2724574297297393,-1.2129544871735516,-1.2025261089813506,-1.133208499200518,-1.0289251266920945,-0.91850751040322,-0.8706598562073617,-0.7007393997156967,-0.6369425274545523,-0.6792692906006271,-0.7657630797915724,-0.6884707586247,-0.8105436120972053,-0.7872332400833403,-0.729570662779345,-0.7602422399184874,-0.9270955745199272,-0.897037452464849,-0.9228015424615736,-0.9453683170472704
@df.inbound * c_dacc_ratio * (odt_skims['WLK_EXP_DRV_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (10),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology # (9),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (5),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_heavyrail_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_HVY_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_hvy-c_ivt) * odt_skims['DRV_HVY_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_HVY_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_HVY_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (4),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_HVY_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_HVY_WLK_FAR'] + costPerMile * odt_skims['DRV_HVY_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * park_ride_cost,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_heavyrail_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_HVY_DRV_TOTIVT']/100,-1.3757234282226563,-1.3757234282226563,-1.4583187499999999,-0.38710454455566407,-0.23939869396972654,-0.23939869396972654,-0.23939869396972654,-0.23939869396972654,-0.24066154669189452,-0.24066154669189452,-0.24066154669189452,-0.24066154669189452,-0.3308015819091797,-0.24066154669189452,-0.4645373692626953,-0.3308015819091797,-0.3308015819091797,-0.4645373692626953,-0.5844142126464843,-0.5844142126464843,-0.5844142126464843,-0.6860013017578125,-0.686421298828125,-1.1291215
@df.inbound * (c_ivt_hvy-c_ivt) * odt_skims['WLK_HVY_DRV_KEYIVT']/100,0.25113408564453116,0.25113408564453116,0.20348034999999992,0.05341030560302732,0.023869138793945303,0.023869138793945303,0.023869138793945303,0.023869138793945303,0.0241217093383789,0.0241217093383789,0.0241217093383789,0.0241217093383789,0.04214971307373046,0.0241217093383789,0.06889687385253904,0.04214971307373046,0.04214971307373046,0.06889687385253904,0.028699442529296862,0.028699442529296862,0.028699442529296862,0.04901685373535154,0.04910086307373045,0.13764089999999995
@df.inbound * c_short_i_wait * (odt_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh
@df.inbound * c_long_i_wait * (odt_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_HVY_DRV_XWAIT']/100,-0.20325,-0.20325,-0.20325,-0.20325,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.13549999999999998,-0.10514799999999999,-0.10514799999999999,-0.10514799999999999,-0.2168,-0.20325,-0.20325
@df.inbound * c_xfers_drv * (odt_skims['WLK_HVY_DRV_BOARDS']-1).clip(0),-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065
@df.outbound * c_dtim * odt_skims['DRV_HVY_WLK_DTIM']/100 # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_wacc * df.origin_walk_time # (4),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_HVY_DRV_WAUX']/100,-0.37940001487731934,-0.37940001487731934,-0.16259999573230743,-0.10840000212192535,-0.16259999573230743,-0.16259999573230743,-0.16259999573230743,-0.16259999573230743,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.2168000042438507,-0.10840000212192535,-0.2168000042438507,-0.16259999573230743
@df.inbound * df.c_cost * (odt_skims['WLK_HVY_DRV_FAR'] + costPerMile * odt_skims['WLK_HVY_DRV_DDIST']/100),-2.120294423152467,-2.06508561500803,-1.6677197388627791,-1.0254632277501905,-1.0493870036714212,-0.9211798552417668,-1.0150348495579893,-1.0395721317399826,-1.1272927799223578,-1.0303706637159098,-1.0892601000113349,-1.1009152860182674,-1.0751511960215427,-1.2536596142765182,-1.0458483396818743,-1.0144214456506238,-1.038958727832617,-1.0777467758124466,-0.949397765574748,-0.9205664513344011,-1.042639253630208,-0.9359022654923215,-0.9720947336812472,-1.2802337290559713
@df.inbound * c_dacc_ratio * (odt_skims['WLK_HVY_DRV_DDIST']/100)/ od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (11),0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389,0.013859708926912389
@c_topology_trn * df.trip_topology # (10),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (6),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_commuter_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_COM_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_com-c_ivt) * odt_skims['DRV_COM_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_COM_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_COM_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (5),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_COM_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_COM_WLK_FAR'] + costPerMile * odt_skims['DRV_COM_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_COM_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_commuter_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_COM_DRV_TOTIVT']/100,-0.0,-0.0,-1.4221808735351562,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-1.0823414482421874,-0.0,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-0.6753319999999999,-1.000532
@df.inbound * (c_ivt_com-c_ivt) * odt_skims['WLK_COM_DRV_KEYIVT']/100,0.0,0.0,0.11167475976562495,0.0,0.0,0.0,0.0,0.0,0.0,0.054199999999999984,0.0,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.054199999999999984,0.11923999999999994
@df.inbound * c_short_i_wait * (odt_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.23487569503784178,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.22699501247406004,-0.0,-0.2168,-0.2168,-0.2168,-0.2168,-0.2168,-0.2168,-0.2168,-0.2168,-0.2168,-0.2168,-0.2168,-0.2168,-0.2168
@df.inbound * c_long_i_wait * (odt_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_COM_DRV_XWAIT']/100,-0.0,-0.0,-0.8937579999999999,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-1.9869719999999997,-0.0,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999,-1.0839999999999999
@df.inbound * c_xfers_drv * (odt_skims['WLK_COM_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.813,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.813,-0.0,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065
@df.inbound * c_dtim * odt_skims['WLK_COM_DRV_DTIM']/100,-0.0,-0.0,-0.546878,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.635224,-0.0,-0.622216,-0.57723,-0.719776,-0.42059199999999997,-0.5447099999999999,-0.7674719999999999,-0.42546999999999996,-0.313276,-0.27371,-0.03252,-0.278588,-0.366934,-0.28454999999999997
@df.inbound * c_wacc * df.origin_walk_time # (5),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_COM_DRV_WAUX']/100,-0.0,-0.0,-1.31164,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.5419999999999999,-0.0,-0.80216,-0.80216,-0.80216,-0.80216,-0.80216,-0.80216,-0.80216,-0.80216,-0.80216,-0.80216,-0.80216,-0.80216,-0.85636
@df.inbound * df.c_cost * (odt_skims['WLK_COM_DRV_FAR'] + costPerMile * odt_skims['WLK_COM_DRV_DDIST']/100),-0.0,-0.0,-2.37991463310814,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-2.240676347332192,-0.0,-2.281195191252878,-2.2259863831084408,-2.2676996911704514,-2.0622002727506232,-2.1106613308538473,-2.283035505328372,-2.0241675928396003,-1.890439604536861,-1.874490284118178,-1.7383084754791822,-1.8524067199190446,-1.888599290461367,-2.4105033551725263
@df.inbound * c_dacc_ratio * (odt_skims['WLK_COM_DRV_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV2TOLL_TIME'] # (2),-1.0598810911178589,-1.2181450128555298,-1.4222080707550049,-0.4298059940338135,-0.3051460087299347,-0.23414401710033417,-0.1723560094833374,-0.11381999403238297,-0.1829250007867813,-0.13902300596237183,-0.18834500014781952,-0.24850700795650482,-0.276419997215271,-0.3238449990749359,-0.31978002190589905,-0.3181540071964264,-0.29159602522850037,-0.34606701135635376,-0.4002670347690582,-0.42926400899887085,-0.4829219877719879,-0.46584901213645935,-0.5924060344696045,-0.946603000164032
@c_ivt * 1.5 * df.origTaxiWaitTime
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * odt_skims['HOV2TOLL_BTOLL'],-1.5175464255801865,-1.5255287622942924,-0.7503045950875186,-0.04259473393467818,-0.027871044266662766,-0.019519792325575006,-0.01666896235417102,-0.010296522228335629,-0.0197545654296164,-0.015092622486987487,-0.019687487171422883,-0.028105817370704157,-0.03394163063135551,-0.038435878728136544,-0.036893077190413855,-0.036155214751013354,-0.02901137305668071,-0.03940851427157844,-0.0495373424537021,-0.0528241787044562,-0.05399805062175047,-0.05436697704363524,-0.06600507003329258,-0.08643041964411596
@df.c_cost * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,-16.119926898817045,-17.735172251709127,-31.448662039927296,-8.667525536648588,-5.759344398150546,-4.043816705415714,-3.0339523528475416,-2.220963159862527,-3.5253011138783883,-2.33700872245721,-3.1771645860215214,-4.285298115058005,-6.032353532714167,-6.430463466877871,-6.849702980405302,-5.9297231419766385,-5.6114367028957375,-7.175368459690882,-9.53350628173027,-9.93966567084807,-10.839186344662423,-10.339788128677482,-11.70751546049325,-18.255365479391816
@c_ivt * odt_skims['HOV2TOLL_TIME'] ,-1.0598810911178589,-1.2181450128555298,-1.4222080707550049,-0.4298059940338135,-0.3051460087299347,-0.23414401710033417,-0.1723560094833374,-0.11381999403238297,-0.1829250007867813,-0.13902300596237183,-0.18834500014781952,-0.24850700795650482,-0.276419997215271,-0.3238449990749359,-0.31978002190589905,-0.3181540071964264,-0.29159602522850037,-0.34606701135635376,-0.4002670347690582,-0.42926400899887085,-0.4829219877719879,-0.46584901213645935,-0.5924060344696045,-0.946603000164032
@c_ivt * 1.5 * df.origSingleTNCWaitTime
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),-1.5940828157345694,-1.6087058408367756,-0.8769484489102732,-0.08368020945890998,-0.05550730903219683,-0.03903958465115001,-0.03333792470834204,-0.020593044456671258,-0.038603575173256244,-0.030185244973974974,-0.039374974342845766,-0.05621163474140831,-0.06734663519716289,-0.07633513139072497,-0.07398739395322373,-0.07680467759880774,-0.05802274611336142,-0.07814624276267806,-0.09481520991466456,-0.10122118916959671,-0.1062185234031932,-0.1106456852454216,-0.13335171162754278,-0.174806116772203
"@df.c_cost * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",-12.022314847284967,-13.313169020682345,-21.703224094081794,-6.292315807722136,-4.329570437159893,-3.1774665285422508,-2.454194725790939,-2.414819533947125,-2.762150988366836,-2.414819533947125,-2.573057245779754,-3.3494890039509984,-4.422674925193659,-4.759810701868925,-4.9930753727241335,-4.457421344591785,-4.2134914497840485,-5.240661842634596,-6.726480365637549,-7.026722540561242,-7.667857821387958,-7.340582195228065,-8.41682048667763,-13.0017575313266
@c_ivt * odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,-1.5898215770721436,-1.8272175788879395,-2.133312225341797,-0.6447089910507202,-0.45771902799606323,-0.35121601819992065,-0.2585340142250061,-0.17072999477386475,-0.27438750863075256,-0.20853450894355774,-0.2825174927711487,-0.37276050448417664,-0.4146299958229065,-0.4857674837112427,-0.47967004776000977,-0.4772310256958008,-0.43739402294158936,-0.519100546836853,-0.6004005670547485,-0.6438959836959839,-0.7243829965591431,-0.6987735033035278,-0.8886090517044067,-1.4199044704437256
@c_ivt  * 1.5 * df.origSharedTNCWaitTime
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) # (2),-1.5940828157345694,-1.6087058408367756,-0.8769484489102732,-0.08368020945890998,-0.05550730903219683,-0.03903958465115001,-0.03333792470834204,-0.020593044456671258,-0.038603575173256244,-0.030185244973974974,-0.039374974342845766,-0.05621163474140831,-0.06734663519716289,-0.07633513139072497,-0.07398739395322373,-0.07680467759880774,-0.05802274611336142,-0.07814624276267806,-0.09481520991466456,-0.10122118916959671,-0.1062185234031932,-0.1106456852454216,-0.13335171162754278,-0.174806116772203
"@df.c_cost * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",-5.291875644169599,-5.814818659829732,-9.169236939402504,-2.974487588108382,-2.1856130153501256,-1.722671799908287,-1.4311160699069436,-1.1880241935359757,-1.5544060140185663,-1.2387689286444428,-1.4793453103604604,-1.791997194944368,-2.221164508185407,-2.358071452258613,-2.4508069882821455,-2.2372632581664145,-2.1386246499063204,-2.5508879798020136,-3.145906178475672,-3.2671165894320833,-3.5255023022740852,-3.394163063135551,-3.8298702786542225,-5.676066475923808
tour_mode_is_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
tour_mode_is_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_drive_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sov_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sov_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sov_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sov_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr2_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr2_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sr2_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr2_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr3p_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407
@sr3p_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718
@sr3p_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127
@sr3p_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714
@walk_ASC_rh * df.is_indiv * (df.i_tour_mode == I_WALK_MODE),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@bike_ASC_walk * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@bike_ASC_rh * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_express * (df.is_indiv & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_sr2 * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_sr3p * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_walk * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@drive_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_express * (df.is_indiv & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_drive_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_sr2 * (df.is_indiv & df.tour_mode_is_ride_hail),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_sr3p * (df.is_indiv & df.tour_mode_is_ride_hail),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_walk * (df.is_indiv & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ride_hail_ASC_walk_transit * (df.is_indiv & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ride_hail_ASC_taxi * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_tnc_single * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ride_hail_ASC_tnc_shared * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_sr2 * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_sr3p * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_walk * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_bike_ASC_walk * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_bike_ASC_rh * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_walk_transit & df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_express * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_sr2 * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_sr3p * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_walk * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_rh * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_drive_transit & df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_express * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_rh * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_sr2 * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_sr3p * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_walk * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_walk_transit * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_taxi * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_tnc_single * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_tnc_shared * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(c_origin_density_index*df.origin_density_index).clip(c_origin_density_index_max) if origin_density_applied else 0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_walk_express_penalty * ~(df.first_trip | df.first_trip),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@adjust_tnc_shared,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813
