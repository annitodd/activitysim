Expression,Label,5,12,36,73,82,85,106,166,200,284,858,860,875,889,933,958,960,961,969,971,973,974,986,1005,1014,1097,1146,1453
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,56.10000228881836,54.099998474121094,60.02000045776367,63.349998474121094,59.689998626708984,62.150001525878906,57.81999969482422,68.39999389648438,79.22999572753906,84.77999877929688,40.09000015258789,38.55999755859375,32.37999725341797,34.16999816894531,19.959999084472656,11.640000343322754,9.779999732971191,4.019999980926514,13.619999885559082,13.460000038146973,22.31999969482422,23.239999771118164,18.290000915527344,33.02000045776367,35.27000045776367,72.52000427246094,48.43000030517578,93.69000244140625
@2 * walktimeshort_multiplier * df.terminal_time,util_DRIVEALONEFREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),util_DRIVEALONEFREE_Operating_cost,55.91052581544761,54.55237456924298,57.97038688383785,61.72793593062293,64.0820653330368,67.31898678519016,62.40700939500334,83.91105712133799,97.92264742935147,138.4181632924144,54.43919278021705,46.22238486446128,36.805875889693404,33.22941338790603,19.91953721952195,10.548300960364442,8.284717528851795,3.440647593039106,13.264602373412755,13.083514749054109,21.00606080695193,22.02467100352256,18.810381591730575,38.639377697475574,37.23595805310436,131.58213866322467,87.12534221568619,153.04091367394892
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,util_DRIVEALONEFREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),util_DRIVEALONEFREE_Bridge_toll,39.448736512728665,39.36334129859792,39.60591129539346,39.8410559498192,39.97719352139561,40.16778612160259,39.863335753806695,41.222230060650695,42.02667110677724,52.81489664880615,3.565546910945301,3.4256973763486385,2.576698610686155,3.106394671428983,1.792055487517216,0.7202875396891146,0.668308018606618,0.27474885078241584,1.0433030928348288,1.0321646071703736,1.9430436258057748,2.054428364422885,1.6522059529205535,3.287085241443687,3.2660459058613696,8.410779913062411,5.586559818374821,54.94358292196973
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True),util_DRIVEALONEFREE_Congestion Pricing ,123.76074200071739,123.76074200071739,123.76074200071739,0.0,123.76074200071739,0.0,123.76074200071739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,56.10000228881836,54.099998474121094,60.02000045776367,63.349998474121094,59.689998626708984,62.150001525878906,57.81999969482422,68.39999389648438,79.22999572753906,84.77999877929688,40.09000015258789,38.55999755859375,32.37999725341797,34.16999816894531,19.959999084472656,11.640000343322754,9.779999732971191,4.019999980926514,13.619999885559082,13.460000038146973,22.31999969482422,23.239999771118164,18.290000915527344,33.02000045776367,35.27000045776367,72.52000427246094,48.43000030517578,93.69000244140625
@2 * walktimeshort_multiplier * df.terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),util_DRIVEALONEPAY_Operating_cost,55.91052581544761,54.55237456924298,57.97038688383785,61.72793593062293,64.0820653330368,67.31898678519016,62.40700939500334,83.91105712133799,97.92264742935147,138.4181632924144,54.43919278021705,46.22238486446128,36.805875889693404,33.22941338790603,19.91953721952195,10.548300960364442,8.284717528851795,3.440647593039106,13.264602373412755,13.083514749054109,21.00606080695193,22.02467100352256,18.810381591730575,38.639377697475574,37.23595805310436,131.58213866322467,87.12534221568619,153.04091367394892
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),util_DRIVEALONEPAY_Bridge_toll,39.448736512728665,39.36334129859792,39.60591129539346,39.8410559498192,39.97719352139561,40.16778612160259,39.863335753806695,41.222230060650695,42.02667110677724,52.81489664880615,3.565546910945301,3.4256973763486385,2.576698610686155,3.106394671428983,1.792055487517216,0.7202875396891146,0.668308018606618,0.27474885078241584,1.0433030928348288,1.0321646071703736,1.9430436258057748,2.054428364422885,1.6522059529205535,3.287085241443687,3.2660459058613696,8.410779913062411,5.586559818374821,54.94358292196973
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),util_DRIVEALONEPAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (2),util_DRIVEALONEPAY_Congestion Pricing ,123.76074200071739,123.76074200071739,123.76074200071739,0.0,123.76074200071739,0.0,123.76074200071739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),util_SHARED2FREE_In_vehicle_time,56.10000228881836,54.099998474121094,60.02000045776367,63.349998474121094,59.689998626708984,62.150001525878906,57.81999969482422,68.39999389648438,79.22999572753906,84.77999877929688,40.09000015258789,38.55999755859375,32.37999725341797,34.16999816894531,19.959999084472656,11.640000343322754,9.779999732971191,4.019999980926514,13.619999885559082,13.460000038146973,22.31999969482422,23.239999771118164,18.290000915527344,33.02000045776367,35.27000045776367,72.52000427246094,48.43000030517578,93.69000244140625
@2 * walktimeshort_multiplier * df.terminal_time # (3),util_SHARED2FREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),util_SHARED2FREE_Operating_cost,55.91052581544761,54.55237456924298,57.97038688383785,61.72793593062293,64.0820653330368,67.31898678519016,62.40700939500334,83.91105712133799,97.92264742935147,138.4181632924144,54.43919278021705,46.22238486446128,36.805875889693404,33.22941338790603,19.91953721952195,10.548300960364442,8.284717528851795,3.440647593039106,13.264602373412755,13.083514749054109,21.00606080695193,22.02467100352256,18.810381591730575,38.639377697475574,37.23595805310436,131.58213866322467,87.12534221568619,153.04091367394892
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,util_SHARED2FREE_Bridge_toll,22.542135150130665,22.4933378849131,22.631949311653408,22.76631768561097,22.844110583654636,22.953020640915764,22.779049002175253,23.55556003465754,24.01524063244414,30.17994094217494,2.037455377683029,1.9575413579135077,1.4723992061063742,1.7750826693879902,1.024031707152695,0.4115928798223512,0.3818902963466389,0.15699934330423762,0.5961731959056165,0.5898083469544992,1.1103106433175856,1.1739590653845056,0.9441176873831735,1.878334423682107,1.866311946206497,4.806159950321378,3.192319896214183,31.396333098268418
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr2,util_SHARED2FREE_Congestion Pricing ,70.72042400040993,70.72042400040993,70.72042400040993,0.0,70.72042400040993,0.0,70.72042400040993,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16),util_SHARED2FREE_Person_is_16_years_old_or_older,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),util_SHARED2PAY_In_vehicle_time,56.10000228881836,54.099998474121094,60.02000045776367,63.349998474121094,59.689998626708984,62.150001525878906,57.81999969482422,68.39999389648438,79.22999572753906,84.77999877929688,40.09000015258789,38.55999755859375,32.37999725341797,34.16999816894531,19.959999084472656,11.640000343322754,9.779999732971191,4.019999980926514,13.619999885559082,13.460000038146973,22.31999969482422,23.239999771118164,18.290000915527344,33.02000045776367,35.27000045776367,72.52000427246094,48.43000030517578,93.69000244140625
@2 * walktimeshort_multiplier * df.terminal_time # (4),util_SHARED2PAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),util_SHARED2PAY_Operating_cost,55.91052581544761,54.55237456924298,57.97038688383785,61.72793593062293,64.0820653330368,67.31898678519016,62.40700939500334,83.91105712133799,97.92264742935147,138.4181632924144,54.43919278021705,46.22238486446128,36.805875889693404,33.22941338790603,19.91953721952195,10.548300960364442,8.284717528851795,3.440647593039106,13.264602373412755,13.083514749054109,21.00606080695193,22.02467100352256,18.810381591730575,38.639377697475574,37.23595805310436,131.58213866322467,87.12534221568619,153.04091367394892
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,util_SHARED2PAY_Bridge_toll,22.542135150130665,22.4933378849131,22.631949311653408,22.76631768561097,22.844110583654636,22.953020640915764,22.779049002175253,23.55556003465754,24.01524063244414,30.17994094217494,2.037455377683029,1.9575413579135077,1.4723992061063742,1.7750826693879902,1.024031707152695,0.4115928798223512,0.3818902963466389,0.15699934330423762,0.5961731959056165,0.5898083469544992,1.1103106433175856,1.1739590653845056,0.9441176873831735,1.878334423682107,1.866311946206497,4.806159950321378,3.192319896214183,31.396333098268418
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr2 # (2),util_SHARED2PAY_Congestion Pricing ,70.72042400040993,70.72042400040993,70.72042400040993,0.0,70.72042400040993,0.0,70.72042400040993,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) # (2),util_SHARED2PAY_Person_is_16_years_old_or_older,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),util_SHARED3FREE_In_vehicle_time,56.10000228881836,54.099998474121094,60.02000045776367,63.349998474121094,59.689998626708984,62.150001525878906,57.81999969482422,68.39999389648438,79.22999572753906,84.77999877929688,40.09000015258789,38.55999755859375,32.37999725341797,34.16999816894531,19.959999084472656,11.640000343322754,9.779999732971191,4.019999980926514,13.619999885559082,13.460000038146973,22.31999969482422,23.239999771118164,18.290000915527344,33.02000045776367,35.27000045776367,72.52000427246094,48.43000030517578,93.69000244140625
@2 * walktimeshort_multiplier * df.terminal_time # (5),util_SHARED3FREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),util_SHARED3FREE_Operating_cost,55.91052581544761,54.55237456924298,57.97038688383785,61.72793593062293,64.0820653330368,67.31898678519016,62.40700939500334,83.91105712133799,97.92264742935147,138.4181632924144,54.43919278021705,46.22238486446128,36.805875889693404,33.22941338790603,19.91953721952195,10.548300960364442,8.284717528851795,3.440647593039106,13.264602373412755,13.083514749054109,21.00606080695193,22.02467100352256,18.810381591730575,38.639377697475574,37.23595805310436,131.58213866322467,87.12534221568619,153.04091367394892
@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,util_SHARED3FREE_Bridge_toll,15.779494605091466,15.745336519439169,15.842364518157385,15.93642237992768,15.990877408558244,16.067114448641036,15.945334301522678,16.488892024260277,16.8106684427109,21.12595865952246,1.4262187643781203,1.3702789505394555,1.030679444274462,1.2425578685715932,0.7168221950068865,0.28811501587564586,0.2673232074426472,0.10989954031296634,0.41732123713393154,0.4128658428681494,0.7772174503223099,0.821771345769154,0.6608823811682214,1.3148340965774747,1.3064183623445478,3.3643119652249647,2.2346239273499284,21.97743316878789
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr3,util_SHARED3FREE_Congestion Pricing ,49.50429680028695,49.50429680028695,49.50429680028695,0.0,49.50429680028695,0.0,49.50429680028695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) # (3),util_SHARED3FREE_Person_is_16_years_old_or_older,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),util_SHARED3PAY_In_vehicle_time,56.10000228881836,54.099998474121094,60.02000045776367,63.349998474121094,59.689998626708984,62.150001525878906,57.81999969482422,68.39999389648438,79.22999572753906,84.77999877929688,40.09000015258789,38.55999755859375,32.37999725341797,34.16999816894531,19.959999084472656,11.640000343322754,9.779999732971191,4.019999980926514,13.619999885559082,13.460000038146973,22.31999969482422,23.239999771118164,18.290000915527344,33.02000045776367,35.27000045776367,72.52000427246094,48.43000030517578,93.69000244140625
@2 * walktimeshort_multiplier * df.terminal_time # (6),util_SHARED3PAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),util_SHARED3PAY_Operating_cost,55.91052581544761,54.55237456924298,57.97038688383785,61.72793593062293,64.0820653330368,67.31898678519016,62.40700939500334,83.91105712133799,97.92264742935147,138.4181632924144,54.43919278021705,46.22238486446128,36.805875889693404,33.22941338790603,19.91953721952195,10.548300960364442,8.284717528851795,3.440647593039106,13.264602373412755,13.083514749054109,21.00606080695193,22.02467100352256,18.810381591730575,38.639377697475574,37.23595805310436,131.58213866322467,87.12534221568619,153.04091367394892
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,util_SHARED3PAY_Bridge_toll,15.779494605091466,15.745336519439169,15.842364518157385,15.93642237992768,15.990877408558244,16.067114448641036,15.945334301522678,16.488892024260277,16.8106684427109,21.12595865952246,1.4262187643781203,1.3702789505394555,1.030679444274462,1.2425578685715932,0.7168221950068865,0.28811501587564586,0.2673232074426472,0.10989954031296634,0.41732123713393154,0.4128658428681494,0.7772174503223099,0.821771345769154,0.6608823811682214,1.3148340965774747,1.3064183623445478,3.3643119652249647,2.2346239273499284,21.97743316878789
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr3 # (2),util_SHARED3PAY_Congestion Pricing ,49.50429680028695,49.50429680028695,49.50429680028695,0.0,49.50429680028695,0.0,49.50429680028695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) # (4),util_SHARED3PAY_Person_is_16_years_old_or_older,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,util_WALK_Time_up_to_2_miles,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,60.79999923706055,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0
@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,33060.0,33004.0,33382.00390625,33238.0,32785.99609375,33095.99609375,32648.0,31388.0,30064.001953125,24540.0,4040.0,3484.0,2416.0,2332.0,1159.9998779296875,331.9999694824219,132.00001525878906,0.0,554.0,556.0,1256.0001220703125,1346.0001220703125,1034.0,2608.000244140625,2508.0,11570.0,7402.00048828125,52270.0
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex
@coef_topology_walk_multiplier * df.dest_topology,util_WALK_Topology,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,240.0,240.0,240.0,240.0,240.0,240.0,240.0,240.0,240.0,240.0,240.0,240.0,240.0,240.0,175.99998474121094,93.19998931884766,73.20000457763672,30.399999618530273,115.4000015258789,115.5999984741211,185.6000213623047,194.59999084472656,163.40000915527344,240.0,240.0,240.0,240.0,240.0
@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,15630.0,15602.0,15791.0009765625,15719.0,15492.9990234375,15647.9990234375,15424.0,14794.0,14132.0009765625,11370.0,1120.0001220703125,842.0,308.0,265.9999694824219,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,404.0000305175781,354.0,4885.0,2801.0,25235.0
@density_index_multiplier * df.density_index # (2),util_BIKE_Destination_zone_densityIndex
@coef_topology_bike_multiplier * df.dest_topology,util_BIKE_Topology,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0
walk_local_available == False,util_WALK_LOC_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),util_WALK_LOC_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LOC_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),util_WALK_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),util_WALK_LOC_Fare,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index,util_WALK_LOC_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology,util_WALK_LOC_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_lrf_available == False,util_WALK_LRF_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0
@(odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),util_WALK_LRF_In_vehicle_time,56.726402282714844,56.726402282714844,43.511600494384766,66.40469360351562,93.38119506835938,82.36509704589844,82.177001953125,126.34019470214844,66.60299682617188,0.0,0.0,0.0,80.71430206298828,68.91549682617188,37.25199890136719,39.794097900390625,36.518699645996094,0.0,20.0,29.26259994506836,39.818599700927734,43.42680358886719,33.111602783203125,0.0,75.2550048828125,0.0,0.0,0.0
@(ivt_lrt_multiplier-1)*(odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Light_Rail,-5.672640323638916,-5.672640323638916,-4.351160049438477,-4.836320400238037,-9.338119506835938,-5.271440029144287,-8.217700004577637,-12.63401985168457,-2.0,-0.0,-0.0,-0.0,-2.0,-2.0,-2.0,-2.0,-2.0,-0.0,-2.0,-2.0,-2.0,-2.0,-2.0,-0.0,-2.0,-0.0,-0.0,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Ferry,-4.0,-4.0,-4.0,-4.0,-4.0,-4.0,-4.0,-4.0,-2.0,-0.0,-0.0,-0.0,-2.0,-2.0,-2.0,-2.0,-2.0,-0.0,-2.0,-2.0,-2.0,-2.0,-2.0,-0.0,-2.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LRF_Short_iwait_time,27.274600982666016,27.274600982666016,25.234600067138672,23.648799896240234,27.274600982666016,24.428800582885742,27.274600982666016,30.091800689697266,20.0,0.0,0.0,0.0,35.376197814941406,30.25079917907715,30.25079917907715,40.0,32.25080108642578,0.0,40.0,25.25080108642578,32.25080108642578,32.25080108642578,32.25080108642578,0.0,32.376197814941406,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LRF_Long_iwait_time,27.637298583984375,27.637298583984375,27.637298583984375,27.517101287841797,27.637298583984375,27.517101287841797,27.637298583984375,27.705902099609375,27.523502349853516,0.0,0.0,0.0,15.188100814819336,15.12540054321289,15.12540054321289,20.25080108642578,15.12540054321289,0.0,42.5,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.188100814819336,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),util_WALK_LRF_transfer_wait_time,107.0,107.0,104.95999908447266,112.0,107.0,119.0,107.0,124.0,24.0,0.0,0.0,0.0,110.0,85.0,85.0,105.0,87.0,0.0,0.0,80.0,87.0,87.0,87.0,0.0,100.32000732421875,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),util_WALK_LRF_number_of_transfers,20.0,20.0,20.0,30.0,20.0,30.0,20.0,40.0,20.0,0.0,0.0,0.0,40.0,20.0,20.0,20.0,20.0,0.0,0.0,20.0,20.0,20.0,20.0,0.0,40.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),util_WALK_LRF_Walk_other_time,4.0,4.0,4.0,22.399999618530273,4.0,12.800000190734863,4.0,8.0,14.0,0.0,0.0,0.0,40.80000305175781,40.80000305175781,40.80000305175781,30.799999237060547,24.0,0.0,0.0,4.0,24.0,24.0,24.0,0.0,4.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),util_WALK_LRF_Fare,101.97885140859113,101.97885140859113,101.97885140859113,101.97885140859113,101.97885140859113,101.97885140859113,101.97885140859113,101.97885140859113,54.57848722231637,0.0,0.0,0.0,42.6974559902475,42.6974559902475,42.6974559902475,42.6974559902475,42.6974559902475,0.0,25.989755820150652,42.6974559902475,42.6974559902475,42.6974559902475,42.6974559902475,0.0,42.6974559902475,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (2),util_WALK_LRF_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology # (2),util_WALK_LRF_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),util_WALK_EXP_In_vehicle_time,56.726402282714844,54.29800033569336,43.511600494384766,61.462501525878906,83.41130065917969,80.189697265625,82.177001953125,63.17009735107422,0.0,0.0,96.66919708251953,98.78620147705078,52.98240280151367,68.91549682617188,37.25199890136719,39.794097900390625,36.518699645996094,0.0,20.0,29.26259994506836,39.818599700927734,43.42680358886719,33.111602783203125,0.0,75.2550048828125,0.0,0.0,0.0
@(ivt_exp_multiplier - 1)*(odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),util_WALK_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_EXP_Short_iwait_time,27.274600982666016,24.154199600219727,25.234600067138672,25.03420066833496,23.574600219726562,32.034202575683594,27.274600982666016,20.0,0.0,0.0,30.37619972229004,35.376197814941406,35.376197814941406,30.25079917907715,30.25079917907715,40.0,32.25080108642578,0.0,40.0,25.25080108642578,32.25080108642578,32.25080108642578,32.25080108642578,0.0,32.376197814941406,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_EXP_Long_iwait_time,27.637298583984375,27.637298583984375,27.637298583984375,27.517101287841797,27.637298583984375,27.517101287841797,27.637298583984375,27.705902099609375,0.0,0.0,15.188100814819336,15.188100814819336,15.188100814819336,15.12540054321289,15.12540054321289,20.25080108642578,15.12540054321289,0.0,42.5,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.188100814819336,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),util_WALK_EXP_transfer_wait_time,107.0,107.0,104.95999908447266,105.0,114.0,112.0,107.0,17.0,0.0,0.0,105.0,110.0,110.0,85.0,85.0,105.0,87.0,0.0,0.0,80.0,87.0,87.0,87.0,0.0,100.32000732421875,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),util_WALK_EXP_number_of_transfers,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,0.0,40.0,40.0,40.0,20.0,20.0,20.0,20.0,0.0,0.0,20.0,20.0,20.0,20.0,0.0,40.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),util_WALK_EXP_Walk_other_time,4.0,12.800000190734863,4.0,38.400001525878906,6.0,21.600000381469727,4.0,4.0,0.0,0.0,38.400001525878906,38.400001525878906,38.400001525878906,40.80000305175781,40.80000305175781,30.799999237060547,24.0,0.0,0.0,4.0,24.0,24.0,24.0,0.0,4.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),util_WALK_EXP_Fare,101.97885140859113,101.97885140859113,101.97885140859113,101.97885140859113,83.16721862448209,101.97885140859113,101.97885140859113,41.583609312241045,0.0,0.0,44.80138860425969,44.80138860425969,44.80138860425969,42.6974559902475,42.6974559902475,42.6974559902475,42.6974559902475,0.0,25.989755820150652,42.6974559902475,42.6974559902475,42.6974559902475,42.6974559902475,0.0,42.6974559902475,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (3),util_WALK_EXP_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology # (3),util_WALK_EXP_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0
@(odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),util_WALK_HVY_In_vehicle_time,55.61620330810547,55.61620330810547,43.511600494384766,67.44850158691406,70.30220031738281,78.13459777832031,67.86859893798828,83.10240173339844,103.74119567871094,0.0,82.81489562988281,83.90940856933594,46.24259948730469,68.91549682617188,37.25199890136719,39.794097900390625,36.518699645996094,0.0,20.0,29.26259994506836,39.818599700927734,43.42680358886719,33.111602783203125,0.0,75.2550048828125,0.0,82.05670166015625,0.0
@(ivt_hvy_multiplier-1) * (odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),util_WALK_HVY_In_vehicle_time_on_heavy_rail,-5.6508402824401855,-5.6508402824401855,-0.0,-5.946380138397217,-6.95296049118042,-6.95296049118042,-8.101320266723633,-11.531200408935547,-15.017000198364258,-0.0,-5.084640026092529,-5.084640026092529,-3.3044400215148926,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-10.344400405883789,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_HVY_Short_iwait_time,28.18320083618164,28.18320083618164,25.234600067138672,23.80660057067871,24.006999969482422,24.586599349975586,28.18320083618164,24.346599578857422,35.44519805908203,0.0,32.68320083618164,35.68320083618164,29.263198852539062,30.25079917907715,30.25079917907715,40.0,32.25080108642578,0.0,40.0,25.25080108642578,32.25080108642578,32.25080108642578,32.25080108642578,0.0,32.376197814941406,0.0,29.931400299072266,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_HVY_Long_iwait_time,15.341598510742188,15.341598510742188,27.637298583984375,15.358701705932617,15.478899002075195,15.358701705932617,15.341598510742188,15.358701705932617,15.347999572753906,0.0,15.341598510742188,15.341598510742188,15.341598510742188,15.12540054321289,15.12540054321289,20.25080108642578,15.12540054321289,0.0,42.5,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.188100814819336,0.0,15.35110092163086,0.0
@xwait_multiplier * (odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),util_WALK_HVY_transfer_wait_time,92.5,92.5,104.95999908447266,98.33999633789062,98.33999633789062,99.12000274658203,92.5,98.62000274658203,110.0,0.0,95.0,100.0,93.58000183105469,85.0,85.0,105.0,87.0,0.0,0.0,80.0,87.0,87.0,87.0,0.0,100.32000732421875,0.0,119.47999572753906,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),util_WALK_HVY_number_of_transfers,40.0,40.0,20.0,50.0,50.0,50.0,40.0,50.0,50.0,0.0,40.0,40.0,40.0,20.0,20.0,20.0,20.0,0.0,0.0,20.0,20.0,20.0,20.0,0.0,40.0,0.0,50.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@wegr_multiplier * 2 *df.destination_walk_time,util_WALK_HVY_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),util_WALK_HVY_Walk_other_time,8.0,8.0,4.0,34.400001525878906,33.20000076293945,29.200000762939453,8.0,29.200000762939453,29.200000762939453,0.0,69.5999984741211,69.5999984741211,69.5999984741211,40.80000305175781,40.80000305175781,30.799999237060547,24.0,0.0,0.0,4.0,24.0,24.0,24.0,0.0,4.0,0.0,29.200000762939453,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),util_WALK_HVY_Fare,83.16721862448209,83.16721862448209,101.97885140859113,101.97885140859113,97.89474692256745,101.97885140859113,86.63251940050218,113.1173181886557,130.44382206875613,0.0,84.28106530248854,84.28106530248854,74.62772742643259,42.6974559902475,42.6974559902475,42.6974559902475,42.6974559902475,0.0,25.989755820150652,42.6974559902475,42.6974559902475,42.6974559902475,42.6974559902475,0.0,42.6974559902475,0.0,110.02329963863777,0.0
@density_index_multiplier * df.dest_density_index # (4),util_WALK_HVY_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology # (4),util_WALK_HVY_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),util_WALK_COM_In_vehicle_time,55.61620330810547,55.61620330810547,43.511600494384766,61.462501525878906,80.00370025634766,75.72789764404297,67.86859893798828,83.10240173339844,103.74119567871094,0.0,82.81489562988281,83.90940856933594,46.24259948730469,68.91549682617188,37.25199890136719,39.794097900390625,36.518699645996094,0.0,20.0,29.26259994506836,39.818599700927734,43.42680358886719,33.111602783203125,0.0,75.2550048828125,0.0,82.05670166015625,0.0
@(ivt_com_multiplier - 1) * (odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_COM_Short_iwait_time,28.18320083618164,28.18320083618164,25.234600067138672,25.03420066833496,24.006999969482422,24.586599349975586,28.18320083618164,24.346599578857422,35.44519805908203,0.0,32.68320083618164,35.68320083618164,29.263198852539062,30.25079917907715,30.25079917907715,40.0,32.25080108642578,0.0,40.0,25.25080108642578,32.25080108642578,32.25080108642578,32.25080108642578,0.0,32.376197814941406,0.0,29.931400299072266,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_COM_Long_iwait_time,15.341598510742188,15.341598510742188,27.637298583984375,27.517101287841797,27.637298583984375,27.517101287841797,15.341598510742188,15.358701705932617,15.347999572753906,0.0,15.341598510742188,15.341598510742188,15.341598510742188,15.12540054321289,15.12540054321289,20.25080108642578,15.12540054321289,0.0,42.5,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.188100814819336,0.0,15.35110092163086,0.0
@xwait_multiplier * (odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),util_WALK_COM_transfer_wait_time,92.5,92.5,104.95999908447266,105.0,89.5,94.5,92.5,98.62000274658203,110.0,0.0,95.0,100.0,93.58000183105469,85.0,85.0,105.0,87.0,0.0,0.0,80.0,87.0,87.0,87.0,0.0,100.32000732421875,0.0,119.47999572753906,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),util_WALK_COM_number_of_transfers,40.0,40.0,20.0,20.0,30.0,30.0,40.0,50.0,50.0,0.0,40.0,40.0,40.0,20.0,20.0,20.0,20.0,0.0,0.0,20.0,20.0,20.0,20.0,0.0,40.0,0.0,50.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (4),util_WALK_COM_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),util_WALK_COM_Walk_other_time,8.0,8.0,4.0,38.400001525878906,27.200000762939453,34.0,8.0,29.200000762939453,29.200000762939453,0.0,69.5999984741211,69.5999984741211,69.5999984741211,40.80000305175781,40.80000305175781,30.799999237060547,24.0,0.0,0.0,4.0,24.0,24.0,24.0,0.0,4.0,0.0,29.200000762939453,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),util_WALK_COM_Fare,83.16721862448209,83.16721862448209,101.97885140859113,101.97885140859113,83.16721862448209,101.97885140859113,86.63251940050218,113.1173181886557,130.44382206875613,0.0,84.28106530248854,84.28106530248854,74.62772742643259,42.6974559902475,42.6974559902475,42.6974559902475,42.6974559902475,0.0,25.989755820150652,42.6974559902475,42.6974559902475,42.6974559902475,42.6974559902475,0.0,42.6974559902475,0.0,110.02329963863777,0.0
@density_index_multiplier * df.dest_density_index # (5),util_WALK_COM_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology # (5),util_WALK_COM_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_local_available == False,util_DRIVE_LOC_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),util_DRIVE_LOC_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,103.82059478759766,102.38059997558594,55.282997131347656,35.17720031738281,18.498001098632812,43.40979766845703,40.410400390625,0.0,37.832000732421875,35.007598876953125,26.32069969177246,28.39150047302246,82.15390014648438,0.0,134.36830139160156,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LOC_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,35.752601623535156,35.752601623535156,29.332599639892578,30.501800537109375,30.501800537109375,40.0,32.501800537109375,0.0,30.501800537109375,30.501800537109375,35.501800537109375,35.501800537109375,40.0,0.0,32.752601623535156,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,20.376298904418945,20.376298904418945,20.376298904418945,20.250900268554688,20.250900268554688,25.501800537109375,20.250900268554688,0.0,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.501800537109375,0.0,20.376298904418945,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),util_DRIVE_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,115.0,115.0,88.58000183105469,70.0,70.0,90.0,72.0,0.0,70.0,70.0,75.0,75.0,80.0,0.0,96.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),util_DRIVE_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,40.0,40.0,40.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0,20.0,20.0,20.0,0.0,40.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),util_DRIVE_LOC_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,0.0,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,0.0,48.2400016784668,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),util_DRIVE_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),util_DRIVE_LOC_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,62.16291925197837,62.16291925197837,62.16291925197837,62.16291925197837,62.16291925197837,62.16291925197837,62.16291925197837,0.0,62.16291925197837,62.16291925197837,62.16291925197837,62.16291925197837,62.16291925197837,0.0,62.16291925197837,0.0,0.0,0.0
@dacc_ratio * ((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LOC_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (6),util_DRIVE_LOC_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology # (6),util_DRIVE_LOC_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_lrf_available == False,util_DRIVE_LRF_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),util_DRIVE_LRF_In_vehicle_time,66.72640228271484,66.72640228271484,80.0,71.4625015258789,103.38119506835938,90.189697265625,92.177001953125,128.0968017578125,0.0,0.0,0.0,0.0,46.97599792480469,35.17720031738281,18.498001098632812,41.933998107910156,37.947998046875,0.0,20.0,29.26259994506836,32.74089813232422,35.58040237426758,33.111602783203125,0.0,75.2550048828125,0.0,0.0,0.0
@(ivt_lrt_multiplier-1) * (odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Light_Rail,-6.672640323638916,-6.672640323638916,-8.0,-5.0,-10.338119506835938,-5.0,-9.217700004577637,-12.809679985046387,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-1.0,-1.0,-0.0,-2.0,-2.0,-1.0,-1.0,-2.0,-0.0,-2.0,-0.0,-0.0,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Ferry,-5.0,-5.0,-8.0,-5.0,-5.0,-5.0,-5.0,-5.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-1.0,-1.0,-0.0,-2.0,-2.0,-1.0,-1.0,-2.0,-0.0,-2.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LRF_Short_iwait_time,27.274600982666016,27.274600982666016,40.0,25.03420066833496,27.274600982666016,32.034202575683594,27.274600982666016,29.954601287841797,0.0,0.0,0.0,0.0,35.752601623535156,30.501800537109375,30.501800537109375,40.0,32.501800537109375,0.0,40.0,25.25080108642578,35.501800537109375,35.501800537109375,32.25080108642578,0.0,32.376197814941406,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LRF_Long_iwait_time,11.567298889160156,11.567298889160156,55.0,11.447099685668945,11.567298889160156,11.447099685668945,11.567298889160156,11.567298889160156,0.0,0.0,0.0,0.0,20.376298904418945,20.250900268554688,20.250900268554688,20.376300811767578,15.12540054321289,0.0,42.5,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.188100814819336,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),util_DRIVE_LRF_transfer_wait_time,107.0,107.0,0.0,105.0,107.0,112.0,107.0,110.0,0.0,0.0,0.0,0.0,95.0,70.0,70.0,90.0,72.0,0.0,0.0,80.0,72.0,72.0,87.0,0.0,100.32000732421875,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_DRV_BOARDS']-1).clip(0)),util_DRIVE_LRF_number_of_transfers,40.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0,0.0,80.0,40.0,40.0,40.0,40.0,0.0,0.0,40.0,40.0,40.0,40.0,0.0,80.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),util_DRIVE_LRF_Drive_time,19.559999465942383,19.559999465942383,19.559999465942383,19.559999465942383,19.559999465942383,19.559999465942383,19.559999465942383,19.559999465942383,0.0,0.0,0.0,0.0,48.2400016784668,48.2400016784668,48.2400016784668,30.060001373291016,30.060001373291016,0.0,11.880000114440918,11.880000114440918,30.060001373291016,30.060001373291016,11.880000114440918,0.0,11.880000114440918,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),util_DRIVE_LRF_Walk_other_time,8.0,8.0,4.0,42.400001525878906,8.0,25.600000381469727,8.0,53.599998474121094,0.0,0.0,0.0,0.0,0.0,0.0,0.0,12.800000190734863,12.800000190734863,0.0,4.0,8.0,15.199999809265137,15.199999809265137,28.0,0.0,8.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),util_DRIVE_LRF_Fare_and_operating_cost,111.0784611845273,111.0784611845273,92.26682840041826,111.0784611845273,111.0784611845273,111.0784611845273,111.0784611845273,111.0784611845273,0.0,0.0,0.0,0.0,62.16291925197837,62.16291925197837,62.16291925197837,46.70209496077755,46.70209496077755,0.0,31.24127066957672,47.94897083967357,46.70209496077755,46.70209496077755,47.94897083967357,0.0,47.94897083967357,0.0,0.0,0.0
@dacc_ratio * ((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LRF_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (7),util_DRIVE_LRF_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology # (7),util_DRIVE_LRF_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_express_available == False,util_DRIVE_EXP_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),util_DRIVE_EXP_In_vehicle_time,66.2886962890625,66.2886962890625,82.80390167236328,86.98719787597656,91.4666976928711,100.79969787597656,93.89920043945312,0.0,0.0,0.0,75.94139862060547,78.05859375,32.254600524902344,31.83089828491211,18.498001098632812,43.40979766845703,40.410400390625,0.0,33.21220016479492,30.202199935913086,26.32069969177246,28.39150047302246,46.92449951171875,0.0,0.0,0.0,0.0,0.0
@(ivt_exp_multiplier-1) * (odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),util_DRIVE_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_EXP_Short_iwait_time,40.0,40.0,28.035999298095703,23.875999450683594,24.076400756835938,24.6560001373291,29.535999298095703,0.0,0.0,0.0,30.752599716186523,35.752601623535156,35.752601623535156,30.501800537109375,30.501800537109375,40.0,32.501800537109375,0.0,30.501800537109375,30.501800537109375,35.501800537109375,35.501800537109375,40.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_EXP_Long_iwait_time,20.501800537109375,20.501800537109375,20.26799964904785,20.26799964904785,20.388200759887695,20.26799964904785,20.26799964904785,0.0,0.0,0.0,20.376298904418945,20.376298904418945,20.376298904418945,20.250900268554688,20.250900268554688,25.501800537109375,20.250900268554688,0.0,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.501800537109375,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),util_DRIVE_EXP_transfer_wait_time,80.0,80.0,107.5,103.33999633789062,103.33999633789062,104.12000274658203,109.0,0.0,0.0,0.0,90.0,95.0,95.0,80.0,70.0,90.0,72.0,0.0,70.0,70.0,75.0,75.0,80.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),util_DRIVE_EXP_number_of_transfers,40.0,40.0,80.0,80.0,80.0,80.0,80.0,0.0,0.0,0.0,80.0,80.0,80.0,40.0,40.0,40.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),util_DRIVE_EXP_Drive_time,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,0.0,0.0,0.0,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,0.0,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,0.0,0.0,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_egress_ime,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),util_DRIVE_EXP_Walk_other_time,0.0,0.0,18.399999618530273,11.200000762939453,23.200000762939453,11.200000762939453,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),util_DRIVE_EXP_Fare_and_operating_cost,98.17729517418714,98.17729517418714,149.2904740667272,149.2904740667272,128.37490866860597,149.2904740667272,149.2904740667272,0.0,0.0,0.0,66.37078448000277,66.37078448000277,66.37078448000277,79.73694461608025,62.16291925197837,62.16291925197837,62.16291925197837,0.0,65.13317705999559,65.13317705999559,62.16291925197837,62.16291925197837,80.60326981008527,0.0,0.0,0.0,0.0,0.0
@dacc_ratio * ((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_EXP_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (8),util_DRIVE_EXP_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology # (8),util_DRIVE_EXP_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_heavyrail_available == False,util_DRIVE_HVY_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),util_DRIVE_HVY_In_vehicle_time,18.757200241088867,18.757200241088867,32.698299407958984,34.255401611328125,37.10919952392578,44.94160461425781,31.009599685668945,49.909400939941406,70.5479965209961,145.20599365234375,62.814903259277344,63.909400939941406,26.242599487304688,23.520200729370117,26.74919891357422,36.293601989746094,33.29419708251953,0.0,9.496999740600586,12.590200424194336,20.087400436401367,25.853797912597656,22.222801208496094,0.0,46.379600524902344,0.0,67.85769653320312,0.0
@(ivt_hvy_multiplier-1) * (odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),util_DRIVE_HVY_In_vehicle_time_on_heavy_rail,-3.7514400482177734,-3.7514400482177734,-4.046960353851318,-4.046960353851318,-5.05355978012085,-5.05355978012085,-6.201920032501221,-9.631800651550293,-13.117599487304688,-17.92767906188965,-5.084640026092529,-5.084640026092529,-3.3044400215148926,-3.3044400215148926,-1.899399995803833,-1.9739599227905273,-1.9739599227905273,-0.0,-1.899399995803833,-2.518040180206299,-4.017480373382568,-2.518040180206299,-2.105639934539795,-0.0,-6.141720294952393,-0.0,-12.243800163269043,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_HVY_Short_iwait_time,8.38479995727539,8.38479995727539,9.267800331115723,8.03320026397705,8.473999977111816,8.813199996948242,8.38479995727539,8.573200225830078,20.890399932861328,27.945199966430664,18.36639976501465,21.36639976501465,14.946399688720703,21.36639976501465,18.86639976501465,25.68320083618164,18.36639976501465,0.0,15.864799499511719,15.864799499511719,15.864799499511719,20.86639976501465,28.18320083618164,0.0,28.36639976501465,0.0,25.382801055908203,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.22259998321533203,0.0,0.0,0.0,0.0,0.0,5.34160041809082,0.0,0.0,0.0,0.0,0.0,0.0,5.34160041809082,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),util_DRIVE_HVY_transfer_wait_time,0.0,0.0,11.260000228881836,7.099999904632568,7.099999904632568,7.880000114440918,0.0,7.380000114440918,20.0,27.5,15.0,20.0,13.579999923706055,20.0,17.5,35.0,17.0,0.0,0.0,0.0,0.0,19.5,37.5,0.0,27.0,0.0,24.479999542236328,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),util_DRIVE_HVY_number_of_transfers,0.0,0.0,40.0,40.0,40.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0,0.0,40.0,40.0,0.0,40.0,0.0,40.0,0.0
@dtim_multiplier * (odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),util_DRIVE_HVY_Drive_time,33.15999984741211,33.15999984741211,33.15999984741211,33.15999984741211,33.15999984741211,33.15999984741211,33.15999984741211,33.15999984741211,33.15999984741211,33.15999984741211,22.799999237060547,22.799999237060547,22.799999237060547,22.799999237060547,33.15999984741211,22.799999237060547,22.799999237060547,0.0,33.15999984741211,33.15999984741211,33.15999984741211,33.15999984741211,22.799999237060547,0.0,22.799999237060547,0.0,33.15999984741211,0.0
@wacc_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),util_DRIVE_HVY_Walk_other_time,4.0,4.0,8.0,13.199999809265137,12.0,8.0,4.0,8.0,8.0,8.0,16.0,16.0,16.0,16.0,8.0,16.0,16.0,0.0,4.0,4.0,4.0,8.0,16.0,0.0,16.0,0.0,8.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),util_DRIVE_HVY_Fare_and_operating_cost,70.5985009793881,70.5985009793881,129.26108513397193,89.41013376349716,85.32602927747348,89.41013376349716,74.80636620741251,101.53868647956746,119.6077548116722,204.5076162704081,70.33357564104283,70.33357564104283,60.68023776498687,60.68023776498687,65.5243105573587,60.68023776498687,60.68023776498687,0.0,48.81661038726185,48.81661038726185,48.81661038726185,65.5243105573587,60.68023776498687,0.0,60.68023776498687,0.0,102.65253315757391,0.0
@ivt_cost_multiplier * df.ivot *  park_ride_cost,util_DRIVE_HVY_Park_and_ride,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (9),util_DRIVE_HVY_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology # (9),util_DRIVE_HVY_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_commuter_available == False,util_DRIVE_COM_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),util_DRIVE_COM_In_vehicle_time,46.76689910888672,46.76689910888672,62.213600158691406,65.82569885253906,68.53190612792969,77.79800415039062,98.41709899902344,0.0,0.0,0.0,0.0,0.0,23.121299743652344,82.48649597167969,49.41490173339844,55.21139907836914,51.947200775146484,0.0,36.3843994140625,37.32469940185547,42.22119903564453,52.62940216064453,38.097999572753906,0.0,30.086999893188477,0.0,0.0,0.0
@(ivt_com_multiplier - 1) * (odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),util_DRIVE_COM_In_vehicle_time_on_commuter_rail,-6.0,-6.0,-6.0,-6.0,-6.0,-6.0,-9.600000381469727,-0.0,-0.0,-0.0,-0.0,-0.0,-3.0,-6.0,-6.0,-6.0,-6.0,-0.0,-6.0,-6.0,-6.0,-6.0,-6.0,-0.0,-8.40000057220459,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_COM_Short_iwait_time,40.0,40.0,27.785200119018555,23.625200271606445,23.82539939880371,24.405200958251953,35.43239974975586,0.0,0.0,0.0,0.0,0.0,20.0,35.25080108642578,30.37619972229004,40.0,32.376197814941406,0.0,26.91080093383789,26.91080093383789,35.25080108642578,35.25080108642578,40.0,0.0,32.25080108642578,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_COM_Long_iwait_time,28.671600341796875,28.671600341796875,23.56330108642578,23.56330108642578,23.683502197265625,23.56330108642578,23.546199798583984,0.0,0.0,0.0,0.0,0.0,23.671600341796875,23.455398559570312,23.455398559570312,28.64349937438965,23.455398559570312,0.0,23.455398559570312,23.455398559570312,23.455398559570312,23.455398559570312,28.580799102783203,0.0,65.12539672851562,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),util_DRIVE_COM_transfer_wait_time,74.16000366210938,74.16000366210938,111.66000366210938,107.5,107.5,108.2800064086914,74.16000366210938,0.0,0.0,0.0,0.0,0.0,13.579999923706055,76.66000366210938,83.31999969482422,103.31999969482422,85.31999969482422,0.0,71.66000366210938,71.66000366210938,78.66000366210938,86.66000366210938,78.66000366210938,0.0,78.66000366210938,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),util_DRIVE_COM_number_of_transfers,40.0,40.0,80.0,80.0,80.0,80.0,40.0,0.0,0.0,0.0,0.0,0.0,40.0,40.0,60.0,60.0,60.0,0.0,40.0,40.0,40.0,40.0,40.0,0.0,40.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),util_DRIVE_COM_Drive_time,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,0.0,0.0,0.0,0.0,0.0,25.600000381469727,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,0.0,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,0.0,28.760000228881836,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),util_DRIVE_COM_Walk_other_time,32.79999923706055,32.79999923706055,44.0,39.19999694824219,48.400001525878906,39.19999694824219,34.79999923706055,0.0,0.0,0.0,0.0,0.0,30.799999237060547,36.0,52.0,44.0,41.599998474121094,0.0,32.79999923706055,32.79999923706055,30.399999618530273,8.0,30.399999618530273,0.0,8.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),util_DRIVE_COM_Fare_and_operating_cost,163.11606876395993,163.11606876395993,199.50172691217082,199.50172691217082,195.41762242614718,199.50172691217082,206.92737143221387,0.0,0.0,0.0,0.0,0.0,79.89703137177001,150.36871233788602,150.36871233788602,150.36871233788602,150.36871233788602,0.0,150.36871233788602,150.36871233788602,150.36871233788602,150.36871233788602,150.36871233788602,0.0,165.94303181637696,0.0,0.0,0.0
@dacc_ratio * ((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_COM_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (10),util_DRIVE_COM_Destination_zone_densityIndex,-1.9508606102715316,-3.0155942983893014,-8.317382205592642,-3.6088559103463775,-2.7287648670491724,-2.0851981729235938,-5.343649387540896,-1.8781201103448713,-0.11671034681135317,-1.0752585255200562,-0.6734376147828844,-0.2595656145465461,-0.12723568273873972,-1.174850450159808,-0.4898375143757903,-0.39951866067677333,-0.6301402747251095,-0.31699654472655664,-2.129190878913151,-1.0891422955130714,-2.984801910219669,-1.4311951655129436,-0.48634671891576303,-0.13531615254963292,-0.19637170473424814,-0.021697089227853714,-1.1814069762249166,-0.003961054047200356
@coef_topology_trn_multiplier * df.dest_topology # (10),util_DRIVE_COM_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (2),util_Taxi_In_vehicle_time,56.10000228881836,54.099998474121094,60.02000045776367,63.349998474121094,59.689998626708984,62.150001525878906,57.81999969482422,68.39999389648438,79.22999572753906,84.77999877929688,40.09000015258789,38.55999755859375,32.37999725341797,34.16999816894531,19.959999084472656,11.640000343322754,9.779999732971191,4.019999980926514,13.619999885559082,13.460000038146973,22.31999969482422,23.239999771118164,18.290000915527344,33.02000045776367,35.27000045776367,72.52000427246094,48.43000030517578,93.69000244140625
@1.5 * df.totalWaitTaxi,util_Taxi_Wait_time,22.500000000000004,22.500000000000004,22.500000000000004,22.500000000000004,22.500000000000004,22.500000000000004,22.500000000000004,22.500000000000004,34.2,22.500000000000004,22.500000000000004,28.500000000000007,28.500000000000007,22.500000000000004,22.500000000000004,28.500000000000007,28.500000000000007,28.500000000000007,22.500000000000004,22.500000000000004,22.500000000000004,22.500000000000004,22.500000000000004,34.2,22.500000000000004,40.2,22.500000000000004,40.2
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),util_Taxi_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_Taxi_Bridge_toll,39.448736512728665,39.36334129859792,39.60591129539346,39.8410559498192,39.97719352139561,40.16778612160259,39.863335753806695,41.222230060650695,42.02667110677724,52.81489664880615,3.565546910945301,3.4256973763486385,2.576698610686155,3.106394671428983,1.792055487517216,0.7202875396891146,0.668308018606618,0.27474885078241584,1.0433030928348288,1.0321646071703736,1.9430436258057748,2.054428364422885,1.6522059529205535,3.287085241443687,3.2660459058613696,8.410779913062411,5.586559818374821,54.94358292196973
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (3),util_Taxi_Congestion Pricing ,123.76074200071739,123.76074200071739,123.76074200071739,0.0,123.76074200071739,0.0,123.76074200071739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,util_Taxi_Fare,826.9692742719154,807.4151487964864,857.72382621285,909.0969223033577,934.1708607187131,977.9202339165512,910.7923628882004,1194.3034351607896,1383.904982550963,1900.0119774768127,788.6529402393616,683.4315709871129,557.3688689876111,514.6095571760711,329.6490848219006,201.50723502678258,170.74032561277275,102.69666786676122,238.11566477672164,235.64044049451206,346.2330733494122,360.18084816515545,313.6344606698958,581.217540932193,566.3539203850685,1798.874735371856,1210.0087329953546,2094.92268243017
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (3),util_TNC_Single_In_vehicle_time,56.10000228881836,54.099998474121094,60.02000045776367,63.349998474121094,59.689998626708984,62.150001525878906,57.81999969482422,68.39999389648438,79.22999572753906,84.77999877929688,40.09000015258789,38.55999755859375,32.37999725341797,34.16999816894531,19.959999084472656,11.640000343322754,9.779999732971191,4.019999980926514,13.619999885559082,13.460000038146973,22.31999969482422,23.239999771118164,18.290000915527344,33.02000045776367,35.27000045776367,72.52000427246094,48.43000030517578,93.69000244140625
@1.5 * df.totalWaitSingleTNC,util_TNC_Single_Wait_time,13.95,13.95,13.95,13.95,13.95,13.95,13.95,13.95,22.049999999999997,13.95,13.95,18.9,18.9,13.95,13.95,18.9,18.9,18.9,13.95,13.95,13.95,13.95,13.95,22.049999999999997,13.95,22.2,13.95,22.2
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (2),util_TNC_Single_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,78.89747302545733,78.72668259719585,79.21181503703069,79.68211945339462,79.95437948903499,80.33556468944894,79.72667150761339,82.44446012130139,84.0533497673107,105.62978574385606,7.131093349780838,6.851394752697277,5.15339722137231,6.212789342857966,3.5841112110893145,1.4405750793782293,1.336616037213236,0.5494977015648317,2.0866061856696576,2.0643292143407472,3.8860872516115497,4.10885672884577,3.304411669786225,6.574170482887374,6.532091811722739,16.821559826124822,11.173119636749641,109.88716584393946
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (4),util_TNC_Single_Congestion Pricing ,123.76074200071739,123.76074200071739,123.76074200071739,0.0,123.76074200071739,0.0,123.76074200071739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,618.4819671993515,602.888040058138,644.7662534169348,681.3647688618278,687.2261060051051,717.5400379032033,669.7659289663968,854.0357047356863,985.7938917183363,1290.1092361216963,560.4702996609255,497.52310222662584,412.2370870843186,392.1334258434748,255.32333390810004,164.0027881555546,142.38920186167206,90.8502831178956,189.19056403777898,187.42821369661905,270.0558495737334,280.0284837812272,242.47946974826795,427.1700605557895,423.8780863816837,1205.1054009853929,817.5658864124875,1420.5084079374028
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,84.1500015258789,81.14999389648438,90.02999877929688,95.02499389648438,89.53499603271484,93.22500610351562,86.72999572753906,102.59999084472656,118.8449935913086,127.16999816894531,60.13500213623047,57.839996337890625,48.56999588012695,51.25499725341797,29.939998626708984,17.46000099182129,14.670000076293945,6.029999732971191,20.43000030517578,20.190000534057617,33.47999954223633,34.86000061035156,27.435001373291016,49.529998779296875,52.904998779296875,108.7800064086914,72.64500427246094,140.53500366210938
@1.5 * df.totalWaitSharedTNC,util_TNC_Shared_Wait_time,19.499999999999993,19.499999999999993,19.499999999999993,19.499999999999993,19.499999999999993,19.499999999999993,19.499999999999993,19.499999999999993,28.5,19.499999999999993,19.499999999999993,23.999999999999993,23.999999999999993,19.499999999999993,19.499999999999993,23.999999999999993,23.999999999999993,23.999999999999993,19.499999999999993,19.499999999999993,19.499999999999993,19.499999999999993,19.499999999999993,28.5,19.499999999999993,34.5,19.499999999999993,34.5
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (3),util_TNC_Shared_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,78.89747302545733,78.72668259719585,79.21181503703069,79.68211945339462,79.95437948903499,80.33556468944894,79.72667150761339,82.44446012130139,84.0533497673107,105.62978574385606,7.131093349780838,6.851394752697277,5.15339722137231,6.212789342857966,3.5841112110893145,1.4405750793782293,1.336616037213236,0.5494977015648317,2.0866061856696576,2.0643292143407472,3.8860872516115497,4.10885672884577,3.304411669786225,6.574170482887374,6.532091811722739,16.821559826124822,11.173119636749641,109.88716584393946
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (5),util_TNC_Shared_Congestion Pricing ,123.76074200071739,123.76074200071739,123.76074200071739,0.0,123.76074200071739,0.0,123.76074200071739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,505.67648506364134,493.2013622350611,526.7039234799032,555.9827547202082,560.6717961082442,584.9229416267228,546.7036733616682,694.119569514662,799.5261002163915,1042.9782813171266,459.267198243877,408.90942141204664,340.68063762478664,324.5976991899164,215.14960203612836,142.09316543409201,124.8023105622789,83.57117674753214,162.2434003031644,160.83351530913885,226.93563345302556,234.91372193463005,204.8745107082627,352.62699751757293,349.9933804095071,974.9753076300365,664.9436582029313,1147.2977320760351
@(df.is_indiv & (df.auto_ownership == 0)),util_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (2),util_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (4),util_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (5),util_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (7),util_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (8),util_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (9),util_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_joint & (df.auto_ownership == 0)),util_Joint_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (2),util_Joint_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (4),util_Joint_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (5),util_Joint_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (7),util_Joint_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (8),util_Joint_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (9),util_Joint_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1,util_Local_bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.walk_ferry_available == False),util_Walk_to_Light_Rail_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0
@(df.drive_ferry_available == False),util_Drive_to_Light_Rail_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0
@df.walk_ferry_available,util_Walk_to_Ferry_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0
@df.drive_ferry_available,util_Drive_to_Ferry_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0
1 # (2),util_Express_Bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (3),util_Heavy_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (4),util_Commuter_Rail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd,util_Walk_to_Transit_dest_CBD,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0
@df.destination_in_cbd # (2),util_Drive_to_Transit_dest_CBD,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0
@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),util_Drive_to_Transit_distance_penalty,46.9799919128418,51.660003662109375,39.24000549316406,22.13998794555664,17.63999366760254,11.520002365112305,25.020004272460938,0.0,0.0,0.0,61.199989318847656,86.2199935913086,133.9199981689453,138.05999755859375,192.41998291015625,228.05999755859375,237.0600128173828,256.32000732421875,217.6199951171875,217.25999450683594,186.3000030517578,182.8800048828125,196.20001220703125,124.91999053955078,129.4199981689453,0.0,0.0,0.0
@od_skims.max('DISTWALK') > 3,util_Walk_not_available_for_long_distances,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@od_skims.max('DISTBIKE') > 8,util_Bike_not_available_for_long_distances,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0
is_escort,util_Drive_alone_not_available_for_escort_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
