Expression,Label,858,879,883,890,903,916,917,926,927,936,943,944,947,948,955,959,960,961,962,963,979,1005,1014
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,40.09000015258789,37.54999923706055,41.08000183105469,33.48999786376953,29.600000381469727,30.489999771118164,23.90999984741211,22.06999969482422,22.119998931884766,20.020000457763672,20.670000076293945,16.690000534057617,17.270000457763672,14.350000381469727,14.15999984741211,9.119999885559082,9.779999732971191,4.019999980926514,8.039999961853027,9.539999961853027,19.220001220703125,33.02000045776367,35.27000045776367
@2 * walktimeshort_multiplier * df.terminal_time,util_DRIVEALONEFREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),util_DRIVEALONEFREE_Operating_cost,36.31094158440477,29.00345849150264,40.68939436367163,21.439308936785025,18.691454271552452,23.371865984867963,14.932026450243981,13.467509853558841,13.64868694182904,13.860060931411354,13.92045185430058,11.504755904163785,11.142401727623392,8.33415397970033,9.3004325037418,5.344729143507074,5.525906591744147,2.294911944557084,4.589823889114168,5.49571041036578,11.731227624468408,25.772464924216205,24.836384021420606
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,util_DRIVEALONEFREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),util_DRIVEALONEFREE_Bridge_toll,2.378219789600516,2.3196104905865673,3.2499310070117993,1.6938935118327645,1.655921159098829,2.0909513434857963,1.297661025774104,1.0813842668693898,1.0103925796593842,1.2398772298031326,1.2596888304887748,0.9781987482262916,0.9682928691591673,0.6339718123728204,0.6257169787538028,0.401185307505768,0.44576144841061427,0.18325748347187137,0.36486400021993926,0.4292517418104276,1.0467139263073646,2.192485856042939,2.178452619209534
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True),util_DRIVEALONEFREE_Congestion Pricing ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,40.09000015258789,37.54999923706055,41.08000183105469,33.48999786376953,29.600000381469727,30.489999771118164,23.90999984741211,22.06999969482422,22.119998931884766,20.020000457763672,20.670000076293945,16.690000534057617,17.270000457763672,14.350000381469727,14.15999984741211,9.119999885559082,9.779999732971191,4.019999980926514,8.039999961853027,9.539999961853027,19.220001220703125,33.02000045776367,35.27000045776367
@2 * walktimeshort_multiplier * df.terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),util_DRIVEALONEPAY_Operating_cost,36.31094158440477,29.00345849150264,40.68939436367163,21.439308936785025,18.691454271552452,23.371865984867963,14.932026450243981,13.467509853558841,13.64868694182904,13.860060931411354,13.92045185430058,11.504755904163785,11.142401727623392,8.33415397970033,9.3004325037418,5.344729143507074,5.525906591744147,2.294911944557084,4.589823889114168,5.49571041036578,11.731227624468408,25.772464924216205,24.836384021420606
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),util_DRIVEALONEPAY_Bridge_toll,2.378219789600516,2.3196104905865673,3.2499310070117993,1.6938935118327645,1.655921159098829,2.0909513434857963,1.297661025774104,1.0813842668693898,1.0103925796593842,1.2398772298031326,1.2596888304887748,0.9781987482262916,0.9682928691591673,0.6339718123728204,0.6257169787538028,0.401185307505768,0.44576144841061427,0.18325748347187137,0.36486400021993926,0.4292517418104276,1.0467139263073646,2.192485856042939,2.178452619209534
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),util_DRIVEALONEPAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (2),util_DRIVEALONEPAY_Congestion Pricing ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),util_SHARED2FREE_In_vehicle_time,40.09000015258789,37.54999923706055,41.08000183105469,33.48999786376953,29.600000381469727,30.489999771118164,23.90999984741211,22.06999969482422,22.119998931884766,20.020000457763672,20.670000076293945,16.690000534057617,17.270000457763672,14.350000381469727,14.15999984741211,9.119999885559082,9.779999732971191,4.019999980926514,8.039999961853027,9.539999961853027,19.220001220703125,33.02000045776367,35.27000045776367
@2 * walktimeshort_multiplier * df.terminal_time # (3),util_SHARED2FREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),util_SHARED2FREE_Operating_cost,36.31094158440477,29.00345849150264,40.68939436367163,21.439308936785025,18.691454271552452,23.371865984867963,14.932026450243981,13.467509853558841,13.64868694182904,13.860060931411354,13.92045185430058,11.504755904163785,11.142401727623392,8.33415397970033,9.3004325037418,5.344729143507074,5.525906591744147,2.294911944557084,4.589823889114168,5.49571041036578,11.731227624468408,25.772464924216205,24.836384021420606
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,util_SHARED2FREE_Bridge_toll,1.3589827369145806,1.3254917089066098,1.857103432578171,0.9679391496187225,0.946240662342188,1.1948293391347407,0.7415205861566309,0.6179338667825085,0.577367188376791,0.7085012741732186,0.7198221888507285,0.5589707132721666,0.5533102109480956,0.3622696070701831,0.3575525592878873,0.22924874714615312,0.25472082766320814,0.1047185619839265,0.20849371441139386,0.2452867096059586,0.5981222436042083,1.2528490605959652,1.2448300681197337
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr2,util_SHARED2FREE_Congestion Pricing ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16),util_SHARED2FREE_Person_is_16_years_old_or_older,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),util_SHARED2PAY_In_vehicle_time,40.09000015258789,37.54999923706055,41.08000183105469,33.48999786376953,29.600000381469727,30.489999771118164,23.90999984741211,22.06999969482422,22.119998931884766,20.020000457763672,20.670000076293945,16.690000534057617,17.270000457763672,14.350000381469727,14.15999984741211,9.119999885559082,9.779999732971191,4.019999980926514,8.039999961853027,9.539999961853027,19.220001220703125,33.02000045776367,35.27000045776367
@2 * walktimeshort_multiplier * df.terminal_time # (4),util_SHARED2PAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),util_SHARED2PAY_Operating_cost,36.31094158440477,29.00345849150264,40.68939436367163,21.439308936785025,18.691454271552452,23.371865984867963,14.932026450243981,13.467509853558841,13.64868694182904,13.860060931411354,13.92045185430058,11.504755904163785,11.142401727623392,8.33415397970033,9.3004325037418,5.344729143507074,5.525906591744147,2.294911944557084,4.589823889114168,5.49571041036578,11.731227624468408,25.772464924216205,24.836384021420606
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,util_SHARED2PAY_Bridge_toll,1.3589827369145806,1.3254917089066098,1.857103432578171,0.9679391496187225,0.946240662342188,1.1948293391347407,0.7415205861566309,0.6179338667825085,0.577367188376791,0.7085012741732186,0.7198221888507285,0.5589707132721666,0.5533102109480956,0.3622696070701831,0.3575525592878873,0.22924874714615312,0.25472082766320814,0.1047185619839265,0.20849371441139386,0.2452867096059586,0.5981222436042083,1.2528490605959652,1.2448300681197337
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr2 # (2),util_SHARED2PAY_Congestion Pricing ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) # (2),util_SHARED2PAY_Person_is_16_years_old_or_older,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),util_SHARED3FREE_In_vehicle_time,40.09000015258789,37.54999923706055,41.08000183105469,33.48999786376953,29.600000381469727,30.489999771118164,23.90999984741211,22.06999969482422,22.119998931884766,20.020000457763672,20.670000076293945,16.690000534057617,17.270000457763672,14.350000381469727,14.15999984741211,9.119999885559082,9.779999732971191,4.019999980926514,8.039999961853027,9.539999961853027,19.220001220703125,33.02000045776367,35.27000045776367
@2 * walktimeshort_multiplier * df.terminal_time # (5),util_SHARED3FREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),util_SHARED3FREE_Operating_cost,36.31094158440477,29.00345849150264,40.68939436367163,21.439308936785025,18.691454271552452,23.371865984867963,14.932026450243981,13.467509853558841,13.64868694182904,13.860060931411354,13.92045185430058,11.504755904163785,11.142401727623392,8.33415397970033,9.3004325037418,5.344729143507074,5.525906591744147,2.294911944557084,4.589823889114168,5.49571041036578,11.731227624468408,25.772464924216205,24.836384021420606
@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,util_SHARED3FREE_Bridge_toll,0.9512879158402064,0.9278441962346269,1.2999724028047197,0.6775574047331058,0.6623684636395316,0.8363805373943185,0.5190644103096416,0.43255370674775595,0.4041570318637537,0.4959508919212531,0.50387553219551,0.39127949929051664,0.3873171476636669,0.25358872494912815,0.2502867915015211,0.16047412300230718,0.1783045793642457,0.07330299338874854,0.1459456000879757,0.17170069672417104,0.41868557052294586,0.8769943424171757,0.8713810476838135
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr3,util_SHARED3FREE_Congestion Pricing ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) # (3),util_SHARED3FREE_Person_is_16_years_old_or_older,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),util_SHARED3PAY_In_vehicle_time,40.09000015258789,37.54999923706055,41.08000183105469,33.48999786376953,29.600000381469727,30.489999771118164,23.90999984741211,22.06999969482422,22.119998931884766,20.020000457763672,20.670000076293945,16.690000534057617,17.270000457763672,14.350000381469727,14.15999984741211,9.119999885559082,9.779999732971191,4.019999980926514,8.039999961853027,9.539999961853027,19.220001220703125,33.02000045776367,35.27000045776367
@2 * walktimeshort_multiplier * df.terminal_time # (6),util_SHARED3PAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),util_SHARED3PAY_Operating_cost,36.31094158440477,29.00345849150264,40.68939436367163,21.439308936785025,18.691454271552452,23.371865984867963,14.932026450243981,13.467509853558841,13.64868694182904,13.860060931411354,13.92045185430058,11.504755904163785,11.142401727623392,8.33415397970033,9.3004325037418,5.344729143507074,5.525906591744147,2.294911944557084,4.589823889114168,5.49571041036578,11.731227624468408,25.772464924216205,24.836384021420606
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,util_SHARED3PAY_Bridge_toll,0.9512879158402064,0.9278441962346269,1.2999724028047197,0.6775574047331058,0.6623684636395316,0.8363805373943185,0.5190644103096416,0.43255370674775595,0.4041570318637537,0.4959508919212531,0.50387553219551,0.39127949929051664,0.3873171476636669,0.25358872494912815,0.2502867915015211,0.16047412300230718,0.1783045793642457,0.07330299338874854,0.1459456000879757,0.17170069672417104,0.41868557052294586,0.8769943424171757,0.8713810476838135
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) / costShareSr3 # (2),util_SHARED3PAY_Congestion Pricing ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) # (4),util_SHARED3PAY_Person_is_16_years_old_or_older,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,util_WALK_Time_up_to_2_miles,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,60.79999923706055,120.0,120.0,120.0,120.0,120.0
@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,4040.0,2888.000244140625,3675.999755859375,2236.0,1872.0,2104.000244140625,1378.0,1179.9998779296875,1204.0001220703125,1220.0,1224.0001220703125,920.0,876.0000610351562,500.0,631.9999389648438,107.99999237060547,132.00001525878906,0.0,7.999992370605469,128.00001525878906,954.0,2608.000244140625,2508.0
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664
@coef_topology_walk_multiplier * df.dest_topology,util_WALK_Topology,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,240.0,240.0,240.0,240.0,240.0,240.0,197.8000030517578,178.0,180.40000915527344,182.0,182.4000244140625,152.0,147.60000610351562,110.0,123.19998931884766,70.79999542236328,73.20000457763672,30.399999618530273,60.79999923706055,72.80000305175781,155.40000915527344,240.0,240.0
@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,1120.0001220703125,544.0000610351562,937.9998168945312,218.0000457763672,35.99996566772461,152.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,404.0000305175781,354.0
@density_index_multiplier * df.density_index # (2),util_BIKE_Destination_zone_densityIndex,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664,-0.31699654472655664
@coef_topology_bike_multiplier * df.dest_topology,util_BIKE_Topology,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0
walk_local_available == False,util_WALK_LOC_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),util_WALK_LOC_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LOC_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),util_WALK_LOC_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),util_WALK_LOC_Fare,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index,util_WALK_LOC_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology,util_WALK_LOC_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_lrf_available == False,util_WALK_LRF_Unavailable,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0
@(odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),util_WALK_LRF_In_vehicle_time,0.0,88.94419860839844,0.0,71.8468017578125,58.624000549316406,0.0,49.234901428222656,61.92629623413086,44.74420166015625,39.07830047607422,36.47450256347656,28.591899871826172,35.033302307128906,46.845794677734375,51.24510192871094,36.518699645996094,36.518699645996094,0.0,33.42230224609375,33.42230224609375,34.509002685546875,0.0,75.2550048828125
@(ivt_lrt_multiplier-1)*(odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Light_Rail,-0.0,-2.0,-0.0,-2.0,-2.0,-0.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-0.0,-2.0,-2.0,-2.0,-0.0,-2.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-2.0,-0.0,-2.0,-2.0,-0.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-0.0,-2.0,-2.0,-2.0,-0.0,-2.0
@short_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LRF_Short_iwait_time,0.0,40.0,0.0,40.0,30.25079917907715,0.0,32.25080108642578,27.75080108642578,30.25079917907715,35.376197814941406,35.376197814941406,26.25080108642578,25.25080108642578,32.25080108642578,32.25080108642578,32.25080108642578,32.25080108642578,0.0,28.830799102783203,28.830799102783203,32.25080108642578,0.0,32.376197814941406
@long_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LRF_Long_iwait_time,0.0,15.250800132751465,0.0,15.250800132751465,15.12540054321289,0.0,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.188100814819336
@xwait_multiplier * (odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),util_WALK_LRF_transfer_wait_time,0.0,95.0,0.0,95.0,85.0,0.0,87.0,87.0,85.0,95.0,95.0,90.0,80.0,87.0,83.58000183105469,87.0,87.0,0.0,81.66000366210938,81.66000366210938,87.0,0.0,100.32000732421875
@xfers_wlk_multiplier * ((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),util_WALK_LRF_number_of_transfers,0.0,20.0,0.0,20.0,20.0,0.0,20.0,20.0,20.0,30.0,30.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0,20.0,0.0,40.0
@2 * wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),util_WALK_LRF_Walk_other_time,0.0,40.80000305175781,0.0,40.80000305175781,40.80000305175781,0.0,24.0,24.0,40.80000305175781,23.600000381469727,23.600000381469727,40.80000305175781,40.80000305175781,24.0,24.0,24.0,24.0,0.0,24.0,24.0,24.0,0.0,4.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),util_WALK_LRF_Fare,0.0,28.479203145495084,0.0,28.479203145495084,28.479203145495084,0.0,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,0.0,28.479203145495084,28.479203145495084,28.479203145495084,0.0,28.479203145495084
@density_index_multiplier * df.dest_density_index # (2),util_WALK_LRF_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology # (2),util_WALK_LRF_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_express_available == False,util_WALK_EXP_Unavailable,0.0,0.0,1.0,0.0,1.0,1.0,1.0,0.0,0.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),util_WALK_EXP_In_vehicle_time,96.66919708251953,53.95000076293945,0.0,46.98999786376953,58.624000549316406,0.0,49.234901428222656,36.19999694824219,35.279998779296875,39.07830047607422,36.47450256347656,28.591899871826172,30.540000915527344,46.845794677734375,51.24510192871094,36.518699645996094,36.518699645996094,0.0,33.42230224609375,33.42230224609375,34.509002685546875,0.0,75.2550048828125
@(ivt_exp_multiplier - 1)*(odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),util_WALK_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_EXP_Short_iwait_time,30.37619972229004,30.0,0.0,30.0,30.25079917907715,0.0,32.25080108642578,30.0,30.0,35.376197814941406,35.376197814941406,26.25080108642578,30.0,32.25080108642578,32.25080108642578,32.25080108642578,32.25080108642578,0.0,28.830799102783203,28.830799102783203,32.25080108642578,0.0,32.376197814941406
@long_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_EXP_Long_iwait_time,15.188100814819336,15.0,0.0,15.0,15.12540054321289,0.0,15.12540054321289,15.0,15.0,15.12540054321289,15.12540054321289,15.12540054321289,15.0,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.188100814819336
@xwait_multiplier * (odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),util_WALK_EXP_transfer_wait_time,105.0,85.0,0.0,85.0,85.0,0.0,87.0,85.0,85.0,95.0,95.0,90.0,85.0,87.0,83.58000183105469,87.0,87.0,0.0,81.66000366210938,81.66000366210938,87.0,0.0,100.32000732421875
@xfers_wlk_multiplier * ((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),util_WALK_EXP_number_of_transfers,40.0,20.0,0.0,20.0,20.0,0.0,20.0,20.0,20.0,30.0,30.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0,20.0,0.0,40.0
@2 * wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),util_WALK_EXP_Walk_other_time,38.400001525878906,38.400001525878906,0.0,38.400001525878906,40.80000305175781,0.0,24.0,38.400001525878906,38.400001525878906,23.600000381469727,23.600000381469727,40.80000305175781,38.400001525878906,24.0,24.0,24.0,24.0,0.0,24.0,24.0,24.0,0.0,4.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),util_WALK_EXP_Fare,29.88252619904122,29.057042049896435,0.0,29.057042049896435,28.479203145495084,0.0,28.479203145495084,29.057042049896435,29.057042049896435,28.479203145495084,28.479203145495084,28.479203145495084,29.057042049896435,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,0.0,28.479203145495084,28.479203145495084,28.479203145495084,0.0,28.479203145495084
@density_index_multiplier * df.dest_density_index # (3),util_WALK_EXP_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology # (3),util_WALK_EXP_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,0.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),util_WALK_HVY_In_vehicle_time,82.81489562988281,53.95000076293945,0.0,46.98999786376953,58.624000549316406,0.0,49.234901428222656,32.74489974975586,35.279998779296875,39.07830047607422,36.47450256347656,28.591899871826172,30.540000915527344,46.845794677734375,51.24510192871094,36.518699645996094,36.518699645996094,0.0,33.42230224609375,33.42230224609375,34.509002685546875,0.0,75.2550048828125
@(ivt_hvy_multiplier-1) * (odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),util_WALK_HVY_In_vehicle_time_on_heavy_rail,-5.084640026092529,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.9869799613952637,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_HVY_Short_iwait_time,32.68320083618164,30.0,0.0,30.0,30.25079917907715,0.0,32.25080108642578,30.0,30.0,35.376197814941406,35.376197814941406,26.25080108642578,30.0,32.25080108642578,32.25080108642578,32.25080108642578,32.25080108642578,0.0,28.830799102783203,28.830799102783203,32.25080108642578,0.0,32.376197814941406
@long_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_HVY_Long_iwait_time,15.341598510742188,15.0,0.0,15.0,15.12540054321289,0.0,15.12540054321289,15.216201782226562,15.0,15.12540054321289,15.12540054321289,15.12540054321289,15.0,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.188100814819336
@xwait_multiplier * (odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),util_WALK_HVY_transfer_wait_time,95.0,85.0,0.0,85.0,85.0,0.0,87.0,80.0,85.0,95.0,95.0,90.0,85.0,87.0,83.58000183105469,87.0,87.0,0.0,81.66000366210938,81.66000366210938,87.0,0.0,100.32000732421875
@xfers_wlk_multiplier * ((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),util_WALK_HVY_number_of_transfers,40.0,20.0,0.0,20.0,20.0,0.0,20.0,20.0,20.0,30.0,30.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0,20.0,0.0,40.0
@2 * wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@wegr_multiplier * 2 *df.destination_walk_time,util_WALK_HVY_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),util_WALK_HVY_Walk_other_time,69.5999984741211,38.400001525878906,0.0,38.400001525878906,40.80000305175781,0.0,24.0,52.0,38.400001525878906,23.600000381469727,23.600000381469727,40.80000305175781,38.400001525878906,24.0,24.0,24.0,24.0,0.0,24.0,24.0,24.0,0.0,4.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),util_WALK_HVY_Fare,56.21547055675986,29.057042049896435,0.0,29.057042049896435,28.479203145495084,0.0,28.479203145495084,39.705787573864164,29.057042049896435,28.479203145495084,28.479203145495084,28.479203145495084,29.057042049896435,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,0.0,28.479203145495084,28.479203145495084,28.479203145495084,0.0,28.479203145495084
@density_index_multiplier * df.dest_density_index # (4),util_WALK_HVY_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology # (4),util_WALK_HVY_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),util_WALK_COM_In_vehicle_time,82.81489562988281,53.95000076293945,0.0,46.98999786376953,58.624000549316406,0.0,49.234901428222656,36.19999694824219,35.279998779296875,39.07830047607422,36.47450256347656,28.591899871826172,30.540000915527344,46.845794677734375,51.24510192871094,36.518699645996094,36.518699645996094,0.0,33.42230224609375,33.42230224609375,34.509002685546875,0.0,75.2550048828125
@(ivt_com_multiplier - 1) * (odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_COM_Short_iwait_time,32.68320083618164,30.0,0.0,30.0,30.25079917907715,0.0,32.25080108642578,30.0,30.0,35.376197814941406,35.376197814941406,26.25080108642578,30.0,32.25080108642578,32.25080108642578,32.25080108642578,32.25080108642578,0.0,28.830799102783203,28.830799102783203,32.25080108642578,0.0,32.376197814941406
@long_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_COM_Long_iwait_time,15.341598510742188,15.0,0.0,15.0,15.12540054321289,0.0,15.12540054321289,15.0,15.0,15.12540054321289,15.12540054321289,15.12540054321289,15.0,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.12540054321289,15.12540054321289,15.12540054321289,0.0,15.188100814819336
@xwait_multiplier * (odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),util_WALK_COM_transfer_wait_time,95.0,85.0,0.0,85.0,85.0,0.0,87.0,85.0,85.0,95.0,95.0,90.0,85.0,87.0,83.58000183105469,87.0,87.0,0.0,81.66000366210938,81.66000366210938,87.0,0.0,100.32000732421875
@xfers_wlk_multiplier * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),util_WALK_COM_number_of_transfers,40.0,20.0,0.0,20.0,20.0,0.0,20.0,20.0,20.0,30.0,30.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0,20.0,0.0,40.0
@2 * wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (4),util_WALK_COM_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),util_WALK_COM_Walk_other_time,69.5999984741211,38.400001525878906,0.0,38.400001525878906,40.80000305175781,0.0,24.0,38.400001525878906,38.400001525878906,23.600000381469727,23.600000381469727,40.80000305175781,38.400001525878906,24.0,24.0,24.0,24.0,0.0,24.0,24.0,24.0,0.0,4.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),util_WALK_COM_Fare,56.21547055675986,29.057042049896435,0.0,29.057042049896435,28.479203145495084,0.0,28.479203145495084,29.057042049896435,29.057042049896435,28.479203145495084,28.479203145495084,28.479203145495084,29.057042049896435,28.479203145495084,28.479203145495084,28.479203145495084,28.479203145495084,0.0,28.479203145495084,28.479203145495084,28.479203145495084,0.0,28.479203145495084
@density_index_multiplier * df.dest_density_index # (5),util_WALK_COM_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology # (5),util_WALK_COM_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_local_available == False,util_DRIVE_LOC_Unavailable,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),util_DRIVE_LOC_In_vehicle_time,103.82059478759766,55.20580291748047,0.0,38.108604431152344,24.885601043701172,0.0,60.11899948120117,16.31100082397461,13.534599304199219,9.713700294494629,13.629499435424805,27.241100311279297,21.46030044555664,30.083200454711914,27.164400100708008,40.410400390625,40.410400390625,0.0,47.10879898071289,47.10879898071289,71.43809509277344,0.0,134.36830139160156
@short_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LOC_Short_iwait_time,35.752601623535156,40.0,0.0,40.0,30.501800537109375,0.0,40.0,40.0,40.0,35.501800537109375,35.501800537109375,30.501800537109375,30.501800537109375,32.501800537109375,27.161800384521484,32.501800537109375,32.501800537109375,0.0,29.081798553466797,29.081798553466797,32.501800537109375,0.0,32.752601623535156
@long_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LOC_Long_iwait_time,20.376298904418945,20.501800537109375,0.0,20.501800537109375,20.250900268554688,0.0,25.501800537109375,40.25080108642578,40.25080108642578,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,0.0,20.250900268554688,20.250900268554688,20.250900268554688,0.0,20.376298904418945
@xwait_multiplier * (odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),util_DRIVE_LOC_transfer_wait_time,115.0,80.0,0.0,80.0,70.0,0.0,90.0,0.0,0.0,75.0,75.0,70.0,70.0,72.0,66.66000366210938,72.0,72.0,0.0,68.58000183105469,68.58000183105469,72.0,0.0,96.0
@xfers_wlk_multiplier * ((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),util_DRIVE_LOC_number_of_transfers,40.0,20.0,0.0,20.0,20.0,0.0,20.0,0.0,0.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,0.0,20.0,20.0,20.0,0.0,40.0
@dtim_multiplier * (odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),util_DRIVE_LOC_Drive_time,48.2400016784668,48.2400016784668,0.0,48.2400016784668,48.2400016784668,0.0,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,0.0,48.2400016784668,48.2400016784668,48.2400016784668,0.0,48.2400016784668
@wacc_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),util_DRIVE_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),util_DRIVE_LOC_Fare_and_operating_cost,41.46266714106958,41.46266714106958,0.0,41.46266714106958,41.46266714106958,0.0,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,0.0,41.46266714106958,41.46266714106958,41.46266714106958,0.0,41.46266714106958
@dacc_ratio * ((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LOC_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (6),util_DRIVE_LOC_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology # (6),util_DRIVE_LOC_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_lrf_available == False,util_DRIVE_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),util_DRIVE_LRF_In_vehicle_time,0.0,44.762596130371094,0.0,38.108604431152344,24.885601043701172,0.0,49.234901428222656,16.31100082397461,13.534599304199219,22.358800888061523,13.629499435424805,28.064300537109375,28.40460205078125,37.947898864746094,39.124298095703125,37.947998046875,37.947998046875,0.0,29.76059913635254,32.133201599121094,34.509002685546875,0.0,75.2550048828125
@(ivt_lrt_multiplier-1) * (odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Light_Rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-2.0,-0.0,-0.0,-1.0,-0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-0.0,-2.0,-2.0,-2.0,-0.0,-2.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-2.0,-0.0,-0.0,-1.0,-0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-0.0,-2.0,-2.0,-2.0,-0.0,-2.0
@short_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LRF_Short_iwait_time,0.0,35.501800537109375,0.0,40.0,30.501800537109375,0.0,32.25080108642578,40.0,40.0,35.501800537109375,35.501800537109375,30.501800537109375,30.501800537109375,32.501800537109375,27.161800384521484,32.501800537109375,32.501800537109375,0.0,40.0,40.0,32.25080108642578,0.0,32.376197814941406
@long_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LRF_Long_iwait_time,0.0,20.250900268554688,0.0,20.501800537109375,20.250900268554688,0.0,15.12540054321289,40.25080108642578,40.25080108642578,15.12540054321289,20.250900268554688,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,15.12540054321289,0.0,20.25080108642578,20.25080108642578,15.12540054321289,0.0,15.188100814819336
@xwait_multiplier * (odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),util_DRIVE_LRF_transfer_wait_time,0.0,75.0,0.0,80.0,70.0,0.0,87.0,0.0,0.0,75.0,75.0,75.0,65.0,72.0,68.58000183105469,72.0,72.0,0.0,56.65999984741211,56.65999984741211,87.0,0.0,100.32000732421875
@xfers_drv_multiplier * ((odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_DRV_BOARDS']-1).clip(0)),util_DRIVE_LRF_number_of_transfers,0.0,40.0,0.0,40.0,40.0,0.0,40.0,0.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,40.0,40.0,40.0,0.0,80.0
@dtim_multiplier * (odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),util_DRIVE_LRF_Drive_time,0.0,48.2400016784668,0.0,48.2400016784668,48.2400016784668,0.0,11.880000114440918,48.2400016784668,48.2400016784668,30.060001373291016,48.2400016784668,30.060001373291016,30.060001373291016,30.060001373291016,30.060001373291016,30.060001373291016,30.060001373291016,0.0,19.559999465942383,19.559999465942383,11.880000114440918,0.0,11.880000114440918
@wacc_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),util_DRIVE_LRF_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,28.0,0.0,0.0,23.600000381469727,0.0,23.600000381469727,23.600000381469727,12.800000190734863,12.800000190734863,12.800000190734863,12.800000190734863,0.0,16.799999237060547,16.799999237060547,28.0,0.0,8.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),util_DRIVE_LRF_Fare_and_operating_cost,0.0,41.46266714106958,0.0,41.46266714106958,41.46266714106958,0.0,31.981963550062275,41.46266714106958,41.46266714106958,31.150297338838627,41.46266714106958,31.150297338838627,31.150297338838627,31.150297338838627,31.150297338838627,31.150297338838627,31.150297338838627,0.0,34.54864286604451,34.54864286604451,31.981963550062275,0.0,31.981963550062275
@dacc_ratio * ((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LRF_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (7),util_DRIVE_LRF_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology # (7),util_DRIVE_LRF_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_express_available == False,util_DRIVE_EXP_Unavailable,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),util_DRIVE_EXP_In_vehicle_time,75.94139862060547,33.222198486328125,0.0,26.26219940185547,24.885601043701172,0.0,42.44139862060547,16.31100082397461,13.534599304199219,9.713700294494629,13.629499435424805,23.712200164794922,21.132200241088867,30.083200454711914,27.154399871826172,40.410400390625,40.410400390625,0.0,44.99180221557617,44.99180221557617,34.24359893798828,0.0,0.0
@(ivt_exp_multiplier-1) * (odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),util_DRIVE_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_EXP_Short_iwait_time,30.752599716186523,30.501800537109375,0.0,30.501800537109375,30.501800537109375,0.0,40.0,40.0,40.0,35.501800537109375,35.501800537109375,30.501800537109375,30.501800537109375,32.501800537109375,27.161800384521484,32.501800537109375,32.501800537109375,0.0,32.501800537109375,32.501800537109375,40.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_EXP_Long_iwait_time,20.376298904418945,20.250900268554688,0.0,20.250900268554688,20.250900268554688,0.0,20.627201080322266,40.25080108642578,40.25080108642578,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,20.250900268554688,0.0,20.250900268554688,20.250900268554688,20.501800537109375,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),util_DRIVE_EXP_transfer_wait_time,90.0,70.0,0.0,70.0,70.0,0.0,105.0,0.0,0.0,75.0,75.0,70.0,70.0,72.0,66.66000366210938,72.0,72.0,0.0,72.0,72.0,80.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),util_DRIVE_EXP_number_of_transfers,80.0,40.0,0.0,40.0,40.0,0.0,60.0,0.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,40.0,40.0,40.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),util_DRIVE_EXP_Drive_time,48.2400016784668,48.2400016784668,0.0,48.2400016784668,48.2400016784668,0.0,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,48.2400016784668,0.0,48.2400016784668,48.2400016784668,48.2400016784668,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_egress_ime,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),util_DRIVE_EXP_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),util_DRIVE_EXP_Fare_and_operating_cost,44.26931324816185,43.443829099017066,0.0,43.443829099017066,41.46266714106958,0.0,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,43.443829099017066,43.443829099017066,41.46266714106958,41.46266714106958,41.46266714106958,41.46266714106958,0.0,41.46266714106958,41.46266714106958,53.762380963326876,0.0,0.0
@dacc_ratio * ((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_EXP_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (8),util_DRIVE_EXP_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology # (8),util_DRIVE_EXP_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_heavyrail_available == False,util_DRIVE_HVY_Unavailable,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),util_DRIVE_HVY_In_vehicle_time,62.814903259277344,33.133201599121094,0.0,20.58879852294922,48.12099838256836,0.0,31.66189956665039,9.869799613952637,9.869799613952637,24.393699645996094,21.789899826049805,18.08890151977539,21.961299896240234,22.966999053955078,20.03820037841797,33.29419708251953,33.29419708251953,0.0,25.53289794921875,25.53289794921875,12.590200424194336,0.0,46.379600524902344
@(ivt_hvy_multiplier-1) * (odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),util_DRIVE_HVY_In_vehicle_time_on_heavy_rail,-5.084640026092529,-5.084640026092529,-0.0,-3.3044400215148926,-1.899399995803833,-0.0,-2.518040180206299,-1.9739599227905273,-1.9739599227905273,-1.899399995803833,-1.899399995803833,-1.899399995803833,-1.899399995803833,-1.9739599227905273,-1.9739599227905273,-1.9739599227905273,-1.9739599227905273,-0.0,-1.899399995803833,-1.899399995803833,-2.518040180206299,-0.0,-6.141720294952393
@short_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_HVY_Short_iwait_time,18.36639976501465,16.729198455810547,0.0,21.36639976501465,18.86639976501465,0.0,20.86639976501465,10.864799499511719,10.864799499511719,23.86639976501465,23.86639976501465,14.866399765014648,19.04779815673828,18.36639976501465,13.026399612426758,18.36639976501465,18.36639976501465,0.0,15.526399612426758,15.526399612426758,15.864799499511719,0.0,28.36639976501465
@long_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),util_DRIVE_HVY_transfer_wait_time,15.0,15.0,0.0,20.0,17.5,0.0,19.5,0.0,0.0,22.5,22.5,22.5,12.5,17.0,11.65999984741211,17.0,17.0,0.0,14.15999984741211,14.15999984741211,0.0,0.0,27.0
@xfers_drv_multiplier * ((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),util_DRIVE_HVY_number_of_transfers,40.0,40.0,0.0,40.0,40.0,0.0,40.0,0.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,40.0,40.0,0.0,0.0,40.0
@dtim_multiplier * (odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),util_DRIVE_HVY_Drive_time,22.799999237060547,22.799999237060547,0.0,22.799999237060547,33.15999984741211,0.0,33.15999984741211,22.799999237060547,22.799999237060547,33.15999984741211,33.15999984741211,33.15999984741211,33.15999984741211,22.799999237060547,22.799999237060547,22.799999237060547,22.799999237060547,0.0,33.15999984741211,33.15999984741211,33.15999984741211,0.0,22.799999237060547
@wacc_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),util_DRIVE_HVY_Walk_other_time,16.0,16.0,0.0,16.0,8.0,0.0,8.0,12.0,12.0,8.0,8.0,8.0,8.0,16.0,16.0,16.0,16.0,0.0,8.0,8.0,4.0,0.0,16.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),util_DRIVE_HVY_Fare_and_operating_cost,46.91249495257557,56.4055626677406,0.0,40.473718589246246,43.70471514175826,0.0,43.70471514175826,29.329682575791647,29.329682575791647,43.70471514175826,43.70471514175826,43.70471514175826,44.2825540461596,40.473718589246246,40.473718589246246,40.473718589246246,40.473718589246246,0.0,43.70471514175826,43.70471514175826,32.56067912830366,0.0,40.473718589246246
@ivt_cost_multiplier * df.ivot *  park_ride_cost,util_DRIVE_HVY_Park_and_ride,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (9),util_DRIVE_HVY_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology # (9),util_DRIVE_HVY_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_commuter_available == False,util_DRIVE_COM_Unavailable,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),util_DRIVE_COM_In_vehicle_time,0.0,67.57879638671875,0.0,60.618797302246094,73.76339721679688,0.0,57.907997131347656,70.87360382080078,70.87360382080078,46.9801025390625,53.49290084838867,42.12179946899414,44.20399856567383,62.27429962158203,66.73919677734375,51.947200775146484,51.947200775146484,0.0,47.864898681640625,47.864898681640625,39.71710205078125,0.0,30.086999893188477
@(ivt_com_multiplier - 1) * (odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),util_DRIVE_COM_In_vehicle_time_on_commuter_rail,-0.0,-6.0,-0.0,-6.0,-6.0,-0.0,-6.0,-9.600000381469727,-9.600000381469727,-6.0,-6.0,-6.0,-6.0,-6.0,-6.0,-6.0,-6.0,-0.0,-6.0,-6.0,-6.0,-0.0,-8.40000057220459
@short_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_COM_Short_iwait_time,0.0,30.37619972229004,0.0,30.37619972229004,35.25080108642578,0.0,40.0,35.43239974975586,35.43239974975586,35.25080108642578,35.25080108642578,35.376197814941406,30.37619972229004,32.376197814941406,28.956199645996094,32.376197814941406,32.376197814941406,0.0,27.03619956970215,27.03619956970215,32.25080108642578,0.0,32.25080108642578
@long_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_COM_Long_iwait_time,0.0,23.330001831054688,0.0,23.330001831054688,23.455398559570312,0.0,23.643497467041016,23.546199798583984,23.546199798583984,23.455398559570312,23.455398559570312,23.455398559570312,23.455398559570312,23.455398559570312,23.455398559570312,23.455398559570312,23.455398559570312,0.0,23.455398559570312,23.455398559570312,23.455398559570312,0.0,65.12539672851562
@xwait_multiplier * (odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),util_DRIVE_COM_transfer_wait_time,0.0,83.31999969482422,0.0,83.31999969482422,76.66000366210938,0.0,101.66000366210938,71.66000366210938,71.66000366210938,81.66000366210938,86.66000366210938,88.31999969482422,79.31999969482422,85.31999969482422,81.9000015258789,85.31999969482422,85.31999969482422,0.0,79.97999572753906,79.97999572753906,87.23999786376953,0.0,78.66000366210938
@xfers_drv_multiplier * ((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),util_DRIVE_COM_number_of_transfers,0.0,60.0,0.0,60.0,40.0,0.0,60.0,40.0,40.0,40.0,40.0,60.0,60.0,60.0,60.0,60.0,60.0,0.0,60.0,60.0,60.0,0.0,40.0
@dtim_multiplier * (odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),util_DRIVE_COM_Drive_time,0.0,39.97999954223633,0.0,39.97999954223633,39.97999954223633,0.0,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,39.97999954223633,0.0,39.97999954223633,39.97999954223633,39.97999954223633,0.0,28.760000228881836
@wacc_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),util_DRIVE_COM_Walk_other_time,0.0,52.400001525878906,0.0,52.400001525878906,36.0,0.0,8.0,34.79999923706055,34.79999923706055,36.0,8.0,49.599998474121094,52.0,41.599998474121094,44.0,41.599998474121094,41.599998474121094,0.0,44.0,44.0,30.399999618530273,0.0,8.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),util_DRIVE_COM_Fare_and_operating_cost,0.0,102.85493199171883,0.0,102.85493199171883,100.29593112936999,0.0,100.29593112936999,119.77735704918692,119.77735704918692,100.29593112936999,100.29593112936999,100.29593112936999,102.27709308731748,100.29593112936999,100.29593112936999,100.29593112936999,100.29593112936999,0.0,100.29593112936999,100.29593112936999,100.29593112936999,0.0,110.68400222152343
@dacc_ratio * ((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_COM_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (10),util_DRIVE_COM_Destination_zone_densityIndex,-0.6734376147828844,-0.33386312132664914,-0.0993171056702165,-0.639686709304292,-0.19176551480731852,-0.28027741163769243,-0.4695234521150698,-0.53748235455543,-1.1996082826723002,-0.24315741782724226,-1.0113520916503485,-1.3542787070217388,-0.5741074416667881,-0.5929745102582005,-1.1119939279539226,-0.4065276191646443,-0.6301402747251095,-0.31699654472655664,-0.5448421354693165,-1.1055805595152826,-1.2753147617881497,-0.13531615254963292,-0.19637170473424814
@coef_topology_trn_multiplier * df.dest_topology # (10),util_DRIVE_COM_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (2),util_Taxi_In_vehicle_time,40.09000015258789,37.54999923706055,41.08000183105469,33.48999786376953,29.600000381469727,30.489999771118164,23.90999984741211,22.06999969482422,22.119998931884766,20.020000457763672,20.670000076293945,16.690000534057617,17.270000457763672,14.350000381469727,14.15999984741211,9.119999885559082,9.779999732971191,4.019999980926514,8.039999961853027,9.539999961853027,19.220001220703125,33.02000045776367,35.27000045776367
@1.5 * df.totalWaitTaxi,util_Taxi_Wait_time,22.500000000000004,22.500000000000004,34.2,22.500000000000004,28.500000000000007,28.500000000000007,28.500000000000007,28.500000000000007,22.500000000000004,22.500000000000004,22.500000000000004,22.500000000000004,22.500000000000004,28.500000000000007,22.500000000000004,22.500000000000004,28.500000000000007,28.500000000000007,22.500000000000004,22.500000000000004,22.500000000000004,34.2,22.500000000000004
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),util_Taxi_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_Taxi_Bridge_toll,2.378219789600516,2.3196104905865673,3.2499310070117993,1.6938935118327645,1.655921159098829,2.0909513434857963,1.297661025774104,1.0813842668693898,1.0103925796593842,1.2398772298031326,1.2596888304887748,0.9781987482262916,0.9682928691591673,0.6339718123728204,0.6257169787538028,0.401185307505768,0.44576144841061427,0.18325748347187137,0.36486400021993926,0.4292517418104276,1.0467139263073646,2.192485856042939,2.178452619209534
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (3),util_Taxi_Congestion Pricing ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,util_Taxi_Fare,526.0315111396542,432.04190430802623,581.9085729982723,333.5698931028472,295.803986981529,355.3957023195217,243.83150885609882,223.89605909671917,226.21567068944594,227.1402246506644,228.4361998742106,194.7729793225622,190.69507616352843,152.97046881165008,164.96474619310848,111.06063345823452,113.88379718371944,68.49867746712974,100.67604764843074,113.30595292606547,199.7093867524599,387.67209980177273,377.7580648968407
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (3),util_TNC_Single_In_vehicle_time,40.09000015258789,37.54999923706055,41.08000183105469,33.48999786376953,29.600000381469727,30.489999771118164,23.90999984741211,22.06999969482422,22.119998931884766,20.020000457763672,20.670000076293945,16.690000534057617,17.270000457763672,14.350000381469727,14.15999984741211,9.119999885559082,9.779999732971191,4.019999980926514,8.039999961853027,9.539999961853027,19.220001220703125,33.02000045776367,35.27000045776367
@1.5 * df.totalWaitSingleTNC,util_TNC_Single_Wait_time,13.95,13.95,22.049999999999997,13.95,18.9,18.9,18.9,18.9,13.95,13.95,13.95,13.95,13.95,18.9,13.95,13.95,18.9,18.9,13.95,13.95,13.95,22.049999999999997,13.95
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (2),util_TNC_Single_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,4.756439264303819,4.639220981173135,6.4998620140235985,3.387787023665529,3.311842318197658,4.1819026869715925,2.595322051548208,2.1627685337387796,2.0207851593187685,2.4797544596062653,2.5193776609775496,1.9563974964525832,1.9365857383183347,1.2679436247456408,1.2514339575076057,0.802370615011536,0.8915228968212285,0.36651496694374275,0.7297280004398785,0.8585034836208552,2.093427852614729,4.384971712085878,4.356905238419068
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (4),util_TNC_Single_Congestion Pricing ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,373.83368987383733,316.86207679374843,406.9158148541111,255.05477615722975,227.81711195412902,262.8473485404987,189.82337769945426,175.7686963658668,177.15550369040355,174.49744057351413,176.2144491152419,151.1593532379201,149.73291609917058,123.98772298031326,130.47931327435484,92.37827779446756,94.97359764173528,60.59713883963638,84.87297826587434,94.2835004001998,157.78138970230435,284.92243039071167,282.72668361658305
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,60.13500213623047,56.32499694824219,61.62000274658203,50.2349967956543,44.400001525878906,45.73500061035156,35.86499786376953,33.10499954223633,33.18000030517578,30.030000686645508,31.005001068115234,25.03499984741211,25.905000686645508,21.525001525878906,21.239999771118164,13.680000305175781,14.670000076293945,6.029999732971191,12.059999465942383,14.309999465942383,28.830001831054688,49.529998779296875,52.904998779296875
@1.5 * df.totalWaitSharedTNC,util_TNC_Shared_Wait_time,19.499999999999993,19.499999999999993,28.5,19.499999999999993,23.999999999999993,23.999999999999993,23.999999999999993,23.999999999999993,19.499999999999993,19.499999999999993,19.499999999999993,19.499999999999993,19.499999999999993,23.999999999999993,19.499999999999993,19.499999999999993,23.999999999999993,23.999999999999993,19.499999999999993,19.499999999999993,19.499999999999993,28.5,19.499999999999993
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (3),util_TNC_Shared_Tolls,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,4.756439264303819,4.639220981173135,6.4998620140235985,3.387787023665529,3.311842318197658,4.1819026869715925,2.595322051548208,2.1627685337387796,2.0207851593187685,2.4797544596062653,2.5193776609775496,1.9563974964525832,1.9365857383183347,1.2679436247456408,1.2514339575076057,0.802370615011536,0.8915228968212285,0.36651496694374275,0.7297280004398785,0.8585034836208552,2.093427852614729,4.384971712085878,4.356905238419068
@ivt_cost_multiplier * df.ivot * congestion_pricing * (df.congestion_destination == True) # (5),util_TNC_Shared_Congestion Pricing ,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,306.331221228666,260.753911870762,332.7969149149407,211.30809025537988,189.51795889289926,217.54214186405076,159.1229777871037,147.87921067742886,148.98865653705826,146.86221863943524,148.23580028104044,128.19174247301575,127.05059433650221,106.45444299038849,111.64771994907991,81.16688211825374,83.24314114504004,55.74197489060394,75.16264249537915,82.69106335181165,133.48938424041168,235.20220734422116,233.4455847331413
@(df.is_indiv & (df.auto_ownership == 0)),util_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (2),util_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (4),util_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (5),util_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (7),util_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (8),util_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (9),util_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_joint & (df.auto_ownership == 0)),util_Joint_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (2),util_Joint_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (4),util_Joint_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (5),util_Joint_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (7),util_Joint_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (8),util_Joint_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (9),util_Joint_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1,util_Local_bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.walk_ferry_available == False),util_Walk_to_Light_Rail_ASC,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0
@(df.drive_ferry_available == False),util_Drive_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0
@df.walk_ferry_available,util_Walk_to_Ferry_ASC,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,0.0,1.0
@df.drive_ferry_available,util_Drive_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,0.0,1.0
1 # (2),util_Express_Bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (3),util_Heavy_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (4),util_Commuter_Rail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd,util_Walk_to_Transit_dest_CBD,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.destination_in_cbd # (2),util_Drive_to_Transit_dest_CBD,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),util_Drive_to_Transit_distance_penalty,61.199989318847656,113.04000091552734,77.58000946044922,142.37998962402344,158.75999450683594,148.13999938964844,182.1599884033203,189.90000915527344,188.8199920654297,189.0,188.8199920654297,201.9600067138672,205.1999969482422,220.5,214.55999755859375,238.13998413085938,237.0600128173828,256.32000732421875,242.63999938964844,237.239990234375,199.6199951171875,124.91999053955078,129.4199981689453
@od_skims.max('DISTWALK') > 3,util_Walk_not_available_for_long_distances,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0
@od_skims.max('DISTBIKE') > 8,util_Bike_not_available_for_long_distances,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0
is_escort,util_Drive_alone_not_available_for_escort_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
