Expression,Label,133,170,173,840,845,876,907,916,929,940,941,957,973,999,1000,1002,1004,1006,1009,1010,1015,1026,1030,1049,1113
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,47.711669921875,49.758331298828125,46.60333251953125,27.63666534423828,26.373332977294922,16.53333282470703,9.311666488647461,4.7816667556762695,7.788333415985107,1.7933332920074463,3.5900001525878906,11.828332901000977,0.574999988079071,4.961666584014893,6.24666690826416,6.376667022705078,7.494999885559082,10.063333511352539,8.90999984741211,8.90999984741211,12.359999656677246,16.19333267211914,25.34833335876465,15.850000381469727,34.599998474121094
@2 * walktimeshort_multiplier * df.terminal_time,util_DRIVEALONEFREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),util_DRIVEALONEFREE_Operating_cost,61.36469805239986,59.0668578981937,55.366670473545206,59.17852858724112,54.101120068996586,35.34791004165836,19.03951362530196,5.9474245894184845,14.35109152177969,3.0889002136180936,6.290965168844525,20.26999864342672,0.7226285561688478,6.564113131159601,7.887035516461957,9.320994365952629,9.37686413982583,10.777720075813791,10.16067908625812,10.16067908625812,20.54757349525828,16.60403399217499,42.9114618868454,28.582705952532017,70.23732262403765
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,util_DRIVEALONEFREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),util_DRIVEALONEFREE_Bridge_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,47.711669921875,49.758331298828125,46.60333251953125,27.63666534423828,26.373332977294922,16.53333282470703,9.311666488647461,4.7816667556762695,7.788333415985107,1.7933332920074463,3.5900001525878906,11.828332901000977,0.574999988079071,4.961666584014893,6.24666690826416,6.376667022705078,7.494999885559082,10.063333511352539,8.90999984741211,8.90999984741211,12.359999656677246,16.19333267211914,25.34833335876465,15.850000381469727,34.599998474121094
@2 * walktimeshort_multiplier * df.terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),util_DRIVEALONEPAY_Operating_cost,61.36469805239986,59.0668578981937,55.366670473545206,59.17852858724112,54.101120068996586,35.34791004165836,19.03951362530196,5.9474245894184845,14.35109152177969,3.0889002136180936,6.290965168844525,20.26999864342672,0.7226285561688478,6.564113131159601,7.887035516461957,9.320994365952629,9.37686413982583,10.777720075813791,10.16067908625812,10.16067908625812,20.54757349525828,16.60403399217499,42.9114618868454,28.582705952532017,70.23732262403765
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),util_DRIVEALONEPAY_Bridge_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),util_DRIVEALONEPAY_Value_toll,2.0079466899746015,2.0913649684970497,1.958783786275486,1.1761076090798472,1.1210383842099199,0.7035631773191293,0.395772312593147,0.20112499795379096,0.3301594895462674,0.07590343470853075,0.15200712357568774,0.5005811533241505,0.02418957539059595,0.20891246978551908,0.2628100654080133,0.26897885946923517,0.3152824755898947,0.42232291795156107,0.37426206849288074,0.37426206849288074,0.5227325574924687,0.6791706603764364,1.0724638834535782,0.6715627361508779,1.4703178980895084
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),util_SHARED2FREE_In_vehicle_time,47.711669921875,49.758331298828125,46.60333251953125,27.63666534423828,26.373332977294922,16.53333282470703,9.311666488647461,4.7816667556762695,7.788333415985107,1.7933332920074463,3.5900001525878906,11.828332901000977,0.574999988079071,4.961666584014893,6.24666690826416,6.376667022705078,7.494999885559082,10.063333511352539,8.90999984741211,8.90999984741211,12.359999656677246,16.19333267211914,25.34833335876465,15.850000381469727,34.599998474121094
@2 * walktimeshort_multiplier * df.terminal_time # (3),util_SHARED2FREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),util_SHARED2FREE_Operating_cost,61.36469805239986,59.0668578981937,55.366670473545206,59.17852858724112,54.101120068996586,35.34791004165836,19.03951362530196,5.9474245894184845,14.35109152177969,3.0889002136180936,6.290965168844525,20.26999864342672,0.7226285561688478,6.564113131159601,7.887035516461957,9.320994365952629,9.37686413982583,10.777720075813791,10.16067908625812,10.16067908625812,20.54757349525828,16.60403399217499,42.9114618868454,28.582705952532017,70.23732262403765
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,util_SHARED2FREE_Bridge_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16),util_SHARED2FREE_Person_is_16_years_old_or_older,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),util_SHARED2PAY_In_vehicle_time,47.711669921875,49.758331298828125,46.60333251953125,27.63666534423828,26.373332977294922,16.53333282470703,9.311666488647461,4.7816667556762695,7.788333415985107,1.7933332920074463,3.5900001525878906,11.828332901000977,0.574999988079071,4.961666584014893,6.24666690826416,6.376667022705078,7.494999885559082,10.063333511352539,8.90999984741211,8.90999984741211,12.359999656677246,16.19333267211914,25.34833335876465,15.850000381469727,34.599998474121094
@2 * walktimeshort_multiplier * df.terminal_time # (4),util_SHARED2PAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),util_SHARED2PAY_Operating_cost,61.36469805239986,59.0668578981937,55.366670473545206,59.17852858724112,54.101120068996586,35.34791004165836,19.03951362530196,5.9474245894184845,14.35109152177969,3.0889002136180936,6.290965168844525,20.26999864342672,0.7226285561688478,6.564113131159601,7.887035516461957,9.320994365952629,9.37686413982583,10.777720075813791,10.16067908625812,10.16067908625812,20.54757349525828,16.60403399217499,42.9114618868454,28.582705952532017,70.23732262403765
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,util_SHARED2PAY_Bridge_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,util_SHARED2PAY_Value_toll,1.1473981085569152,1.1950656962840285,1.119305020728849,0.6720614909027699,0.6405933624056684,0.4020361013252168,0.226155607196084,0.11492857025930912,0.18866256545500995,0.04337339126201757,0.08686121347182156,0.286046373328086,0.01382261450891197,0.11937855416315377,0.15017718023315046,0.15370220541099153,0.18016141462279697,0.24132738168660633,0.21386403913878899,0.21386403913878899,0.298704318567125,0.3880975202151065,0.6128365048306161,0.3837501349433588,0.8401816560511477
@(df.age >= 16) # (2),util_SHARED2PAY_Person_is_16_years_old_or_older,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),util_SHARED3FREE_In_vehicle_time,47.711669921875,49.758331298828125,46.60333251953125,27.63666534423828,26.373332977294922,16.53333282470703,9.311666488647461,4.7816667556762695,7.788333415985107,1.7933332920074463,3.5900001525878906,11.828332901000977,0.574999988079071,4.961666584014893,6.24666690826416,6.376667022705078,7.494999885559082,10.063333511352539,8.90999984741211,8.90999984741211,12.359999656677246,16.19333267211914,25.34833335876465,15.850000381469727,34.599998474121094
@2 * walktimeshort_multiplier * df.terminal_time # (5),util_SHARED3FREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),util_SHARED3FREE_Operating_cost,61.36469805239986,59.0668578981937,55.366670473545206,59.17852858724112,54.101120068996586,35.34791004165836,19.03951362530196,5.9474245894184845,14.35109152177969,3.0889002136180936,6.290965168844525,20.26999864342672,0.7226285561688478,6.564113131159601,7.887035516461957,9.320994365952629,9.37686413982583,10.777720075813791,10.16067908625812,10.16067908625812,20.54757349525828,16.60403399217499,42.9114618868454,28.582705952532017,70.23732262403765
@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,util_SHARED3FREE_Bridge_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) # (3),util_SHARED3FREE_Person_is_16_years_old_or_older,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),util_SHARED3PAY_In_vehicle_time,47.711669921875,49.758331298828125,46.60333251953125,27.63666534423828,26.373332977294922,16.53333282470703,9.311666488647461,4.7816667556762695,7.788333415985107,1.7933332920074463,3.5900001525878906,11.828332901000977,0.574999988079071,4.961666584014893,6.24666690826416,6.376667022705078,7.494999885559082,10.063333511352539,8.90999984741211,8.90999984741211,12.359999656677246,16.19333267211914,25.34833335876465,15.850000381469727,34.599998474121094
@2 * walktimeshort_multiplier * df.terminal_time # (6),util_SHARED3PAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),util_SHARED3PAY_Operating_cost,61.36469805239986,59.0668578981937,55.366670473545206,59.17852858724112,54.101120068996586,35.34791004165836,19.03951362530196,5.9474245894184845,14.35109152177969,3.0889002136180936,6.290965168844525,20.26999864342672,0.7226285561688478,6.564113131159601,7.887035516461957,9.320994365952629,9.37686413982583,10.777720075813791,10.16067908625812,10.16067908625812,20.54757349525828,16.60403399217499,42.9114618868454,28.582705952532017,70.23732262403765
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,util_SHARED3PAY_Bridge_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,util_SHARED3PAY_Value_toll,0.8031786759898406,0.8365459873988199,0.7835135145101944,0.4704430436319389,0.44841535368396795,0.28142527092765174,0.1583089250372588,0.08044999918151638,0.13206379581850697,0.030361373883412302,0.0608028494302751,0.20023246132966022,0.00967583015623838,0.08356498791420763,0.10512402616320533,0.10759154378769406,0.12611299023595787,0.16892916718062442,0.1497048273971523,0.1497048273971523,0.20909302299698748,0.27166826415057455,0.4289855533814313,0.26862509446035115,0.5881271592358034
@(df.age >= 16) # (4),util_SHARED3PAY_Person_is_16_years_old_or_older,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,util_WALK_Time_up_to_2_miles,120.0,120.0,120.0,120.0,120.0,120.0,120.0,119.76090240478516,120.0,65.02625274658203,120.0,120.0,15.212478637695312,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0
@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,12061.5732421875,9730.88671875,9298.2900390625,5629.009765625,5094.2744140625,3078.176513671875,1401.9671630859375,27.20911407470703,890.6442260742188,0.0,62.17405700683594,1605.6695556640625,0.0,94.20013427734375,228.22999572753906,316.7160949707031,386.9894104003906,532.4976196289062,468.5826110839844,468.5826110839844,1296.680908203125,1083.3138427734375,2994.634033203125,2571.985595703125,6844.482421875
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex
@coef_topology_walk_multiplier * df.dest_topology,util_WALK_Topology,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,240.0,240.0,240.0,240.0,240.0,240.0,200.19671630859375,62.60136413574219,149.06442260742188,32.513126373291016,66.21739959716797,220.56695556640625,7.606239318847656,69.42001342773438,82.822998046875,91.6716079711914,98.69894409179688,113.249755859375,106.85826873779297,106.85826873779297,189.6680908203125,168.3313751220703,240.0,240.0,240.0
@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,5130.78662109375,3965.443359375,3749.145263671875,1914.5050048828125,1647.13720703125,639.0882568359375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,597.3170776367188,385.9927673339844,2522.2412109375
@density_index_multiplier * df.density_index # (2),util_BIKE_Destination_zone_densityIndex
@coef_topology_bike_multiplier * df.dest_topology,util_BIKE_Topology,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0
walk_local_available == False,util_WALK_LOC_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),util_WALK_LOC_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@short_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LOC_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),util_WALK_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),util_WALK_LOC_number_of_transfers,40.0,40.0,60.0,20.0,20.0,30.0,10.0,10.0,20.0,0.0,10.0,20.0,0.0,0.0,20.0,20.0,30.0,20.0,30.0,30.0,20.0,20.0,30.0,20.0,40.0
@2 * wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),util_WALK_LOC_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),util_WALK_LOC_Fare,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@density_index_multiplier * df.dest_density_index,util_WALK_LOC_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology,util_WALK_LOC_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_lrf_available == False,util_WALK_LRF_Unavailable,1.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),util_WALK_LRF_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@(ivt_lrt_multiplier-1)*(odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Light_Rail,-0.0,-1.5433334112167358,-3.183333396911621,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LRF_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LRF_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),util_WALK_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),util_WALK_LRF_number_of_transfers,40.0,40.0,60.0,20.0,20.0,30.0,10.0,10.0,20.0,0.0,10.0,20.0,0.0,0.0,20.0,20.0,30.0,20.0,30.0,30.0,20.0,20.0,30.0,20.0,40.0
@2 * wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),util_WALK_LRF_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),util_WALK_LRF_Fare,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@density_index_multiplier * df.dest_density_index # (2),util_WALK_LRF_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology # (2),util_WALK_LRF_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_express_available == False,util_WALK_EXP_Unavailable,1.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),util_WALK_EXP_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@(ivt_exp_multiplier - 1)*(odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),util_WALK_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_EXP_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_EXP_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),util_WALK_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),util_WALK_EXP_number_of_transfers,40.0,40.0,60.0,20.0,20.0,30.0,10.0,10.0,20.0,0.0,10.0,20.0,0.0,0.0,20.0,20.0,30.0,20.0,30.0,30.0,20.0,20.0,30.0,20.0,40.0
@2 * wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),util_WALK_EXP_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),util_WALK_EXP_Fare,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@density_index_multiplier * df.dest_density_index # (3),util_WALK_EXP_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology # (3),util_WALK_EXP_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),util_WALK_HVY_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@(ivt_hvy_multiplier-1) * (odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0,-3.0866668224334717,-6.366666793823242,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_HVY_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),util_WALK_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),util_WALK_HVY_number_of_transfers,40.0,40.0,60.0,20.0,20.0,30.0,10.0,10.0,20.0,0.0,10.0,20.0,0.0,0.0,20.0,20.0,30.0,20.0,30.0,30.0,20.0,20.0,30.0,20.0,40.0
@2 * wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@wegr_multiplier * 2 *df.destination_walk_time,util_WALK_HVY_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),util_WALK_HVY_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),util_WALK_HVY_Fare,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@density_index_multiplier * df.dest_density_index # (4),util_WALK_HVY_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology # (4),util_WALK_HVY_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),util_WALK_COM_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@(ivt_com_multiplier - 1) * (odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-4.630000114440918,-9.550000190734863,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_COM_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_COM_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),util_WALK_COM_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),util_WALK_COM_number_of_transfers,40.0,40.0,60.0,20.0,20.0,30.0,10.0,10.0,20.0,0.0,10.0,20.0,0.0,0.0,20.0,20.0,30.0,20.0,30.0,30.0,20.0,20.0,30.0,20.0,40.0
@2 * wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (4),util_WALK_COM_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),util_WALK_COM_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),util_WALK_COM_Fare,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@density_index_multiplier * df.dest_density_index # (5),util_WALK_COM_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology # (5),util_WALK_COM_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_local_available == False,util_DRIVE_LOC_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),util_DRIVE_LOC_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@short_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LOC_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LOC_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),util_DRIVE_LOC_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),util_DRIVE_LOC_number_of_transfers,40.0,40.0,60.0,20.0,20.0,30.0,10.0,10.0,20.0,0.0,10.0,20.0,0.0,0.0,20.0,20.0,30.0,20.0,30.0,30.0,20.0,20.0,30.0,20.0,40.0
@dtim_multiplier * (odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),util_DRIVE_LOC_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),util_DRIVE_LOC_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),util_DRIVE_LOC_Fare_and_operating_cost,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@dacc_ratio * ((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LOC_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (6),util_DRIVE_LOC_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology # (6),util_DRIVE_LOC_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_lrf_available == False,util_DRIVE_LRF_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),util_DRIVE_LRF_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@(ivt_lrt_multiplier-1) * (odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Light_Rail,-0.0,-1.5433334112167358,-3.183333396911621,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LRF_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LRF_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),util_DRIVE_LRF_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_DRV_BOARDS']-1).clip(0)),util_DRIVE_LRF_number_of_transfers,80.0,80.0,120.0,40.0,40.0,60.0,20.0,20.0,40.0,0.0,20.0,40.0,0.0,0.0,40.0,40.0,60.0,40.0,60.0,60.0,40.0,40.0,60.0,40.0,80.0
@dtim_multiplier * (odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),util_DRIVE_LRF_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),util_DRIVE_LRF_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),util_DRIVE_LRF_Fare_and_operating_cost,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@dacc_ratio * ((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LRF_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (7),util_DRIVE_LRF_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology # (7),util_DRIVE_LRF_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_express_available == False,util_DRIVE_EXP_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),util_DRIVE_EXP_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@(ivt_exp_multiplier-1) * (odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),util_DRIVE_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_EXP_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_EXP_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),util_DRIVE_EXP_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),util_DRIVE_EXP_number_of_transfers,80.0,80.0,120.0,40.0,40.0,60.0,20.0,20.0,40.0,0.0,20.0,40.0,0.0,0.0,40.0,40.0,60.0,40.0,60.0,60.0,40.0,40.0,60.0,40.0,80.0
@dtim_multiplier * (odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),util_DRIVE_EXP_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_egress_ime,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),util_DRIVE_EXP_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),util_DRIVE_EXP_Fare_and_operating_cost,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@dacc_ratio * ((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_EXP_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (8),util_DRIVE_EXP_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology # (8),util_DRIVE_EXP_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_heavyrail_available == False,util_DRIVE_HVY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),util_DRIVE_HVY_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@(ivt_hvy_multiplier-1) * (odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),util_DRIVE_HVY_In_vehicle_time_on_heavy_rail,-0.0,-3.0866668224334717,-6.366666793823242,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_HVY_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),util_DRIVE_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),util_DRIVE_HVY_number_of_transfers,80.0,80.0,120.0,40.0,40.0,60.0,20.0,20.0,40.0,0.0,20.0,40.0,0.0,0.0,40.0,40.0,60.0,40.0,60.0,60.0,40.0,40.0,60.0,40.0,80.0
@dtim_multiplier * (odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),util_DRIVE_HVY_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),util_DRIVE_HVY_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),util_DRIVE_HVY_Fare_and_operating_cost,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (9),util_DRIVE_HVY_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology # (9),util_DRIVE_HVY_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
drive_commuter_available == False,util_DRIVE_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),util_DRIVE_COM_In_vehicle_time,85.18333435058594,88.9666748046875,98.86666870117188,71.41667175292969,82.53334045410156,81.36666870117188,61.66666793823242,12.300000190734863,41.400001525878906,7.683332920074463,18.69999885559082,63.69999694824219,0.0,14.800000190734863,21.649999618530273,23.25,41.96666717529297,31.600000381469727,31.916667938232422,31.916667938232422,66.16667175292969,62.33333206176758,49.900001525878906,30.200000762939453,66.64999389648438
@(ivt_com_multiplier - 1) * (odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),util_DRIVE_COM_In_vehicle_time_on_commuter_rail,-0.0,-4.630000114440918,-9.550000190734863,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_COM_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_COM_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),util_DRIVE_COM_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),util_DRIVE_COM_number_of_transfers,80.0,80.0,120.0,40.0,40.0,60.0,20.0,20.0,40.0,0.0,20.0,40.0,0.0,0.0,40.0,40.0,60.0,40.0,60.0,60.0,40.0,40.0,60.0,40.0,80.0
@dtim_multiplier * (odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),util_DRIVE_COM_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),util_DRIVE_COM_Walk_other_time,14.666666984558105,10.066666603088379,31.933334350585938,6.633333206176758,9.466667175292969,10.5,1.7333332300186157,0.6666666269302368,18.566665649414062,0.0,1.9666666984558105,10.033333778381348,0.0,0.0,6.4666666984558105,4.199999809265137,23.433332443237305,6.4666666984558105,13.833333015441895,13.833333015441895,6.4666666984558105,7.233333110809326,29.86666488647461,11.233333587646484,24.96666717529297
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),util_DRIVE_COM_Fare_and_operating_cost,8.683598120014864,8.410244679347329,8.873395370576125,7.27354094607148,8.40680323051416,8.765790253593757,4.953755557588874,2.7704511183986273,5.921082465853381,2.1634982750050686,3.58350093489009,5.506229362394725,0.0,2.349692981736537,2.803648972930469,4.613582369367157,5.487706410015373,3.321545807366221,4.055622219830033,4.055622219830033,4.679387198627725,4.778001510718557,8.865123053332509,5.441490177527569,7.354473645703829
@dacc_ratio * ((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_COM_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (10),util_DRIVE_COM_Destination_zone_densityIndex,-0.19467597339274226,-0.4005349286308758,-0.5137257223921533,-0.0498574943870532,-0.09791117887219032,-0.09090390966821067,-0.17904925226409474,-0.04008921240975688,-0.4685881000164862,-0.4500339984719901,-0.2981122516061355,-8.254259276627476,-0.13722124459499,-0.31506729539601985,-0.0570643051073185,-0.04809380987673553,-0.35109323071235854,-0.10884035381000984,-0.0036505808835026175,-0.05117487010761062,-0.0005326991916628721,-5.67037688533155,-0.21914054455461063,-1.987681115841242,-4.158250546288475
@coef_topology_trn_multiplier * df.dest_topology # (10),util_DRIVE_COM_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (2),util_Taxi_In_vehicle_time,47.711669921875,49.758331298828125,46.60333251953125,27.63666534423828,26.373332977294922,16.53333282470703,9.311666488647461,4.7816667556762695,7.788333415985107,1.7933332920074463,3.5900001525878906,11.828332901000977,0.574999988079071,4.961666584014893,6.24666690826416,6.376667022705078,7.494999885559082,10.063333511352539,8.90999984741211,8.90999984741211,12.359999656677246,16.19333267211914,25.34833335876465,15.850000381469727,34.599998474121094
@1.5 * df.totalWaitTaxi,util_Taxi_Wait_time,22.500000000000004,16.5,22.500000000000004,34.2,22.500000000000004,28.200000000000006,22.500000000000004,34.2,22.500000000000004,22.500000000000004,22.500000000000004,16.5,28.200000000000006,22.500000000000004,34.2,34.2,22.500000000000004,22.500000000000004,28.200000000000006,34.2,48.0,16.5,28.200000000000006,16.5,16.5
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),util_Taxi_Tolls,2.0079466899746015,2.0913649684970497,1.958783786275486,1.1761076090798472,1.1210383842099199,0.7035631773191293,0.395772312593147,0.20112499795379096,0.3301594895462674,0.07590343470853075,0.15200712357568774,0.5005811533241505,0.02418957539059595,0.20891246978551908,0.2628100654080133,0.26897885946923517,0.3152824755898947,0.42232291795156107,0.37426206849288074,0.37426206849288074,0.5227325574924687,0.6791706603764364,1.0724638834535782,0.6715627361508779,1.4703178980895084
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_Taxi_Bridge_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,util_Taxi_Fare,866.9485167936697,840.1790065182563,790.3708113480393,818.6017088548198,753.4399914282528,507.39252917126043,294.8091938402836,125.46775820950428,234.26890151366982,86.41681518931419,128.54985423685778,312.8972293585158,55.39483293044702,133.40972172818545,151.38065128946215,169.54798596839416,171.4123682847968,191.69654670104,182.73899118273187,182.73899118273187,316.94011932729654,271.33174799711014,611.66319768722,421.60898772667014,964.9020421751018
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (3),util_TNC_Single_In_vehicle_time,47.711669921875,49.758331298828125,46.60333251953125,27.63666534423828,26.373332977294922,16.53333282470703,9.311666488647461,4.7816667556762695,7.788333415985107,1.7933332920074463,3.5900001525878906,11.828332901000977,0.574999988079071,4.961666584014893,6.24666690826416,6.376667022705078,7.494999885559082,10.063333511352539,8.90999984741211,8.90999984741211,12.359999656677246,16.19333267211914,25.34833335876465,15.850000381469727,34.599998474121094
@1.5 * df.totalWaitSingleTNC,util_TNC_Single_Wait_time,13.95,9.000000000000002,13.95,17.25,13.95,17.1,13.95,17.25,13.95,13.95,13.95,9.000000000000002,17.1,13.95,17.25,17.25,13.95,13.95,17.1,17.25,19.95,9.000000000000002,17.1,9.000000000000002,9.000000000000002
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (2),util_TNC_Single_Tolls,2.0079466899746015,2.0913649684970497,1.958783786275486,1.1761076090798472,1.1210383842099199,0.7035631773191293,0.395772312593147,0.20112499795379096,0.3301594895462674,0.07590343470853075,0.15200712357568774,0.5005811533241505,0.02418957539059595,0.20891246978551908,0.2628100654080133,0.26897885946923517,0.3152824755898947,0.42232291795156107,0.37426206849288074,0.37426206849288074,0.5227325574924687,0.6791706603764364,1.0724638834535782,0.6715627361508779,1.4703178980895084
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,610.8970354314433,599.2906660190756,564.5175679396797,544.9470027102037,504.8756031366755,343.97324680259743,207.3772523010867,100.8804708769816,169.48618334914812,74.79867573660268,100.40743018148281,222.59979818256755,74.79867573660268,105.8136534344235,118.63746905682524,129.3889748908595,132.5835600074915,149.1738182622164,141.8112617295479,141.8112617295479,225.9438370522176,206.82507096395,420.95172806639727,293.07475752484777,642.7252060092089
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,71.5675048828125,74.63749694824219,69.90499877929688,41.45499801635742,39.55999755859375,24.799999237060547,13.967499732971191,7.172500133514404,11.682499885559082,2.690000057220459,5.385000228881836,17.74250030517578,0.8624999523162842,7.442500114440918,9.370000839233398,9.565000534057617,11.242500305175781,15.095000267028809,13.364999771118164,13.364999771118164,18.53999900817871,24.28999900817871,38.022499084472656,23.775001525878906,51.89999771118164
@1.5 * df.totalWaitSharedTNC,util_TNC_Shared_Wait_time,19.499999999999993,14.999999999999996,19.499999999999993,30.0,19.499999999999993,24.0,19.499999999999993,30.0,19.499999999999993,19.499999999999993,19.499999999999993,14.999999999999996,24.0,19.499999999999993,30.0,30.0,19.499999999999993,19.499999999999993,24.0,30.0,30.0,14.999999999999996,24.0,14.999999999999996,14.999999999999996
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (3),util_TNC_Shared_Tolls,2.0079466899746015,2.0913649684970497,1.958783786275486,1.1761076090798472,1.1210383842099199,0.7035631773191293,0.395772312593147,0.20112499795379096,0.3301594895462674,0.07590343470853075,0.15200712357568774,0.5005811533241505,0.02418957539059595,0.20891246978551908,0.2628100654080133,0.26897885946923517,0.3152824755898947,0.42232291795156107,0.37426206849288074,0.37426206849288074,0.5227325574924687,0.6791706603764364,1.0724638834535782,0.6715627361508779,1.4703178980895084
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,273.0966199724247,268.56424295547635,254.56435459818843,245.90628121751564,229.88073721325642,165.31600257368686,110.5558205223137,67.91203305742931,95.38736927069553,56.524231709054305,67.66954842997711,116.73596355762122,48.40165553425656,69.88604616627617,75.05450073385525,79.3448240970509,80.66852266202301,87.39603697168366,84.40983506931933,84.40983506931933,118.09263904118268,110.64755352192881,196.39098964386633,145.00217118543287,285.1859771514236
@(df.is_indiv & (df.auto_ownership == 0)),util_Walk_ASC_Zero_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (2),util_Bike_ASC_Zero_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (4),util_Shared_ride_3p_Zero_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (5),util_Walk_to_Transit_Zero_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (7),util_Taxi_Zero_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (8),util_TNC_Single_Zero_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership == 0)) # (9),util_TNC_Shared_Zero_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)),util_Joint_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (2),util_Joint_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (4),util_Joint_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (5),util_Joint_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (7),util_Joint_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (8),util_Joint_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (9),util_Joint_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1,util_Local_bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.walk_ferry_available == False),util_Walk_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.drive_ferry_available == False),util_Drive_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.walk_ferry_available,util_Walk_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.drive_ferry_available,util_Drive_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1 # (2),util_Express_Bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (3),util_Heavy_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (4),util_Commuter_Rail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd,util_Walk_to_Transit_dest_CBD,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0
@df.destination_in_cbd # (2),util_Drive_to_Transit_dest_CBD,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0
@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),util_Drive_to_Transit_distance_penalty,0.0,0.0,4.431872844696045,0.0,14.967691421508789,104.04266357421875,180.75820922851562,243.1075897216797,203.8027801513672,256.5048828125,241.59837341308594,175.07582092285156,266.0411376953125,239.71742248535156,233.70977783203125,229.4649200439453,223.73243713378906,219.43443298339844,222.62281799316406,222.62281799316406,181.4619598388672,195.1978302001953,101.84027099609375,128.4294891357422,0.0
@od_skims.max('DISTWALK') > 3,util_Walk_not_available_for_long_distances,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0
@od_skims.max('DISTBIKE') > 8,util_Bike_not_available_for_long_distances,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0
is_escort,util_Drive_alone_not_available_for_escort_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
